# Copyright: (c) 2023, Tim Cragg (@timcragg) <tcragg@cisco.com>
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

# SET VARS
- name: Set vars
  set_fact:
    aci_info: &aci_info
      host: '{{ aci_hostname }}'
      username: '{{ aci_username }}'
      password: '{{ aci_password }}'
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: '{{ aci_output_level | default("info") }}'

# CLEAN ENVIRONMENT
- name: Remove test tenant before we kickoff
  cisco.aci.aci_tenant: &tenant_absent
    <<: *aci_info
    tenant: ansible_tenant
    state: absent

- name: Verify Cloud and Non-Cloud Sites in use.
  include_tasks: ../../../../../../integration/targets/aci_cloud_provider/tasks/main.yml

- name: Execute tasks only for non-cloud sites
  when: query_cloud.current == []  # This condition will execute only non-cloud sites
  block:  # block specifies execution of tasks within, based on conditions

# SETUP ENVIRONMENT
  - name: Create domain
    cisco.aci.aci_domain: &domain_present
      <<: *aci_info
      domain: ansible_l3_dom
      domain_type: l3dom
      state: present

  - name: Create tenant
    cisco.aci.aci_tenant: &tenant_present
      <<: *tenant_absent
      state: present

  - name: Configure VRF
    cisco.aci.aci_vrf: &vrf_present
      <<: *tenant_present
      vrf: ansible_vrf

  - name: Create L3Out
    cisco.aci.aci_l3out:
      <<: *vrf_present
      l3out: ansible_l3out
      domain: ansible_l3_dom
      route_control: export

  - name: Create route control profile
    cisco.aci.aci_route_control_profile:
      <<: *aci_info
      tenant: ansible_tenant
      l3out: ansible_l3out
      name: ansible_rtctrl_profile
      profile_type: global
      state: present

  - name: Create second route control profile
    cisco.aci.aci_route_control_profile:
      <<: *aci_info
      tenant: ansible_tenant
      l3out: ansible_l3out
      name: ansible_rtctrl_profile2
      profile_type: global
      state: present

  - name: Create tenant route control profile
    cisco.aci.aci_route_control_profile:
      <<: *aci_info
      tenant: ansible_tenant
      name: ansible_tenant_rtctrl_profile
      profile_type: global
      state: present

  - name: Add route control context
    cisco.aci.aci_route_control_context:
      <<: *aci_info
      tenant: ansible_tenant
      l3out: ansible_l3out
      profile: ansible_rtctrl_profile
      context: ansible_rtctrl_context
      order: 0
      action: permit
      state: present

  - name: Add second route control context
    cisco.aci.aci_route_control_context:
      <<: *aci_info
      tenant: ansible_tenant
      l3out: ansible_l3out
      profile: ansible_rtctrl_profile2
      context: ansible_rtctrl_context2
      order: 0
      action: permit
      state: present

  - name: Add tenant route control context
    cisco.aci.aci_route_control_context:
      <<: *aci_info
      tenant: ansible_tenant
      profile: ansible_tenant_rtctrl_profile
      context: ansible_tenant_rtctrl_context
      order: 0
      action: permit
      state: present

  - name: Add a new Route Control Match Attribute
    cisco.aci.aci_route_control_attr:
      <<: *aci_info
      tenant: ansible_tenant
      name: ansible_rtctrl_attr
      state: present

  - name: Add a second Route Control Match Attribute
    cisco.aci.aci_route_control_attr:
      <<: *aci_info
      tenant: ansible_tenant
      name: ansible_rtctrl_attr2
      state: present

# BEGIN WITH TESTS
  - name: Add route context scope (check_mode)
    cisco.aci.aci_route_context_scope: &scope_present
      <<: *aci_info
      tenant: ansible_tenant
      l3out: ansible_l3out
      profile: ansible_rtctrl_profile
      context: ansible_rtctrl_context
      set_action_rule_profile: ansible_rtctrl_attr
      state: present
    check_mode: true
    register: cm_add_scope

  - name: Add scope (normal mode)
    cisco.aci.aci_route_context_scope:
      <<: *scope_present
    register: nm_add_scope

  - name: Verify add scope
    ansible.builtin.assert:
      that:
      - cm_add_scope is changed
      - nm_add_scope is changed
      - cm_add_scope.previous == nm_add_scope.previous == []
      - cm_add_scope.sent.rtctrlScope.children.0.rtctrlRsScopeToAttrP.attributes.tnRtctrlAttrPName == nm_add_scope.sent.rtctrlScope.children.0.rtctrlRsScopeToAttrP.attributes.tnRtctrlAttrPName == 'ansible_rtctrl_attr'

  - name: Add context scope again, check if idempotency works
    cisco.aci.aci_route_context_scope:
      <<: *scope_present
    register: add_scope_again

  - name: Verify add_scope_again
    ansible.builtin.assert:
      that:
      - add_scope_again is not changed

  - name: Add second route context scope
    cisco.aci.aci_route_context_scope:
      <<: *aci_info
      tenant: ansible_tenant
      l3out: ansible_l3out
      profile: ansible_rtctrl_profile2
      context: ansible_rtctrl_context2
      set_action_rule_profile: ansible_rtctrl_attr
      state: present

  - name: Add tenant route context scope
    cisco.aci.aci_route_context_scope: &tenant_scope_present
      <<: *aci_info
      tenant: ansible_tenant
      profile: ansible_tenant_rtctrl_profile
      context: ansible_tenant_rtctrl_context
      set_action_rule_profile: ansible_rtctrl_attr
      state: present
    register: add_tenant_scope

  - name: Verify add_tenant_scope
    ansible.builtin.assert:
      that:
      - add_tenant_scope is changed
      - add_tenant_scope.sent.rtctrlScope.children.0.rtctrlRsScopeToAttrP.attributes.tnRtctrlAttrPName == 'ansible_rtctrl_attr'


# UPDATE SCOPE
  - name: Change route context scope
    cisco.aci.aci_route_context_scope:
      <<: *scope_present
      set_action_rule_profile: ansible_rtctrl_attr2
    register: update_scope

  - name: Verify update_context
    ansible.builtin.assert:
      that:
      - update_scope is changed
      - update_scope.previous != []
      - update_scope.sent.rtctrlScope.children.0.rtctrlRsScopeToAttrP.attributes.tnRtctrlAttrPName == 'ansible_rtctrl_attr2'

# QUERY ALL SCOPES
  - name: Query all scopes
    cisco.aci.aci_route_context_scope:
      <<: *aci_info
      state: query
    register: query_all_scopes

  - name: Verify query_all_scopes
    ansible.builtin.assert:
      that:
      - query_all_scopes is not changed
      - query_all_scopes.current | length > 1

# QUERY A SPECIFIC SCOPE
  - name: Query a specific scope
    cisco.aci.aci_route_context_scope:
      <<: *scope_present
      state: query
    register: query_spec_scope

  - name: Verify query_spec_scope
    ansible.builtin.assert:
      that:
      - query_spec_scope is not changed
      - query_spec_scope.current | length == 1
      - query_spec_scope.current.0.rtctrlScope.children.0.rtctrlRsScopeToAttrP.attributes.tnRtctrlAttrPName == 'ansible_rtctrl_attr2'

  - name: Query tenant scope
    cisco.aci.aci_route_context_scope:
      <<: *tenant_scope_present
      state: query
    register: query_tenant_scope

  - name: Verify query_tenant_scope
    ansible.builtin.assert:
      that:
      - query_tenant_scope is not changed
      - query_tenant_scope.current | length == 1
      - query_tenant_scope.current.0.rtctrlScope.children.0.rtctrlRsScopeToAttrP.attributes.tnRtctrlAttrPName == 'ansible_rtctrl_attr'

# REMOVE SCOPE
  - name: Remove scope
    cisco.aci.aci_route_context_scope:
      <<: *scope_present
      state: absent
    register: remove_scope

  - name: Verify remove_scope
    ansible.builtin.assert:
      that:
      - remove_scope is changed
      - remove_scope.current == []

  - name: Remove tenant scope
    cisco.aci.aci_route_context_scope:
      <<: *tenant_scope_present
      state: absent
    register: remove_tenant_scope

  - name: Verify remove_tenant_scope
    ansible.builtin.assert:
      that:
      - remove_tenant_scope is changed
      - remove_tenant_scope.current == []

# REMOVE SCOPE AGAIN TO TEST IDEMPOTENCE
  - name: Remove scope again
    cisco.aci.aci_route_context_scope:
      <<: *scope_present
      state: absent
    register: remove_scope_again

  - name: Verify remove_scope_again
    ansible.builtin.assert:
      that:
      - remove_scope_again is not changed
      - remove_scope_again.current == []

# CLEAN UP
  - name: Remove test tenant
    cisco.aci.aci_tenant:
      <<: *tenant_absent

  - name: Remove test domain
    cisco.aci.aci_domain:
      <<: *domain_present
      state: absent
