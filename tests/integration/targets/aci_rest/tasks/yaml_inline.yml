# Test code for the ACI modules
# Copyright: (c) 2017, Dag Wieers (@dagwieers) <dag@wieers.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)
- name: Test that we have an ACI APIC host, ACI username and ACI password
  ansible.builtin.fail:
    msg: "Please define the following variables: aci_hostname, aci_username and aci_password."
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

- name: Set vars
  ansible.builtin.set_fact:
    aci_info: &aci_info
      host: "{{ aci_hostname }}"
      username: "{{ aci_username }}"
      password: "{{ aci_password }}"
      validate_certs: "{{ aci_validate_certs | default(false) }}"
      use_ssl: "{{ aci_use_ssl | default(true) }}"
      use_proxy: "{{ aci_use_proxy | default(true) }}"
      output_level: "{{ aci_output_level | default('info') }}"

# CLEAN ENVIRONMENT
- name: Remove tenant
  cisco.aci.aci_rest: &tenant_absent
    <<: *aci_info
    path: /api/mo/uni/tn-[ansible_test].json
    method: delete

# ADD TENANT
- name: Add tenant (check mode)
  cisco.aci.aci_rest: &tenant_present
    <<: *aci_info
    path: /api/mo/uni.json
    method: post
    content:
      fvTenant:
        attributes:
          name: ansible_test
  register: cm_add_tenant
  check_mode: true

- name: Verify checkmode did not create tenant
  cisco.aci.aci_tenant:
    <<: *aci_info
    name: ansible_test
    state: query
  register: cm_verify_checkmode_tenant

- name: Verify checkmode POST operation
  ansible.builtin.assert:
    that:
    - cm_add_tenant is changed
    - cm_add_tenant.proposed.fvTenant.attributes.name == "ansible_test"
    - cm_add_tenant.proposed.fvTenant.attributes.annotation == "orchestrator:ansible"
    - cm_verify_checkmode_tenant.current == []

- name: Add tenant (normal mode)
  cisco.aci.aci_rest: *tenant_present
  register: nm_add_tenant

- name: Add tenant again (normal mode)
  cisco.aci.aci_rest: *tenant_present
  register: nm_add_tenant_again

- name: Verify add_tenant
  ansible.builtin.assert:
    that:
    - nm_add_tenant is changed
    - nm_add_tenant_again is not changed

# CHANGE TENANT
- name: Change description of tenant (normal mode)
  cisco.aci.aci_rest: &tenant_changed
    <<: *aci_info
    path: /api/mo/uni.json
    method: post
    content:
      fvTenant:
        attributes:
          name: ansible_test
          descr: Ansible test tenant
  register: nm_add_tenant_descr

- name: Change description of tenant again (normal mode)
  cisco.aci.aci_rest: *tenant_changed
  register: nm_add_tenant_descr_again

- name: Verify add_tenant_descr
  ansible.builtin.assert:
    that:
    - nm_add_tenant_descr is changed
    - nm_add_tenant.imdata.0.fvTenant.attributes.annotation == "orchestrator:ansible"
    - nm_add_tenant_descr_again is not changed

# ADD TENANT AGAIN
- name: Add tenant again with no description (normal mode)
  cisco.aci.aci_rest: *tenant_present
  register: nm_add_tenant_again_no_descr

- name: Verify add_tenant_again_no_descr
  ansible.builtin.assert:
    that:
    - nm_add_tenant_again_no_descr is not changed

# QUERY ALL TENANTS
- name: Query all tenants (normal mode)
  cisco.aci.aci_rest: &tenant_query_all
    <<: *aci_info
    path: /api/mo/uni/tn-[ansible_test].json
    method: get
  register: nm_query_all_tenants

- name: Verify query_all_tenants
  ansible.builtin.assert:
    that:
    - nm_query_all_tenants is not changed

# QUERY A TENANT
- name: Query our tenant
  cisco.aci.aci_rest: &tenant_query
    <<: *aci_info
    path: /api/mo/uni/tn-[ansible_test].json
    method: get
  register: nm_query_tenant

- name: Verify query_tenant
  ansible.builtin.assert:
    that:
    - nm_query_tenant is not changed

# REMOVE TENANT
- name: Remove tenant (normal mode)
  cisco.aci.aci_rest: *tenant_absent
  register: nm_remove_tenant

- name: Remove tenant again (normal mode)
  cisco.aci.aci_rest: *tenant_absent
  register: nm_remove_tenant_again

- name: Verify remove_tenant
  ansible.builtin.assert:
    that:
    - nm_remove_tenant is changed
    - nm_remove_tenant_again is not changed

# QUERY NON-EXISTING TENANT
- name: Query non-existing tenant (normal mode)
  cisco.aci.aci_rest: *tenant_query
  register: nm_query_non_tenant

- name: Verify query_non_tenant
  ansible.builtin.assert:
    that:
    - nm_query_non_tenant is not changed

# VERIFY ANNOTATION SUPPORT
- name: Add tenant with annotation option
  cisco.aci.aci_rest:
    <<: *aci_info
    path: /api/mo/uni.json
    method: post
    annotation: test:inoption
    content:
      fvTenant:
        attributes:
          descr: Ansible test tenant
          name: ansible_test
  register: nm_add_tenant_annotation_option

- name: Add tenant with annotation in content
  cisco.aci.aci_rest:
    <<: *aci_info
    path: /api/mo/uni.json
    method: post
    content:
      fvTenant:
        attributes:
          descr: Ansible test tenant
          name: ansible_test
          annotation: test:incontent
  register: nm_add_tenant_annotation_content

- name: Add tenant with annotation in content and option
  cisco.aci.aci_rest:
    <<: *aci_info
    path: /api/mo/uni.json
    method: post
    annotation: test:inoption
    content:
      fvTenant:
        attributes:
          descr: Ansible test tenant
          name: ansible_test
          annotation: test:optionincontent
  register: nm_add_tenant_annotation_option_content

- name: Add tag to tenant with annotation unsupported
  cisco.aci.aci_rest:
    <<: *aci_info
    path: /api/mo/uni/tn-ansible_test/tagKey-foo.json
    method: post
    annotation: test:inoption
    content:
      tagTag:
        attributes:
          value: bar
  register: nm_add_tag_no_annotation

- name: Remove tenant
  cisco.aci.aci_rest: *tenant_absent

- name: Add tenant with children objects including annotation
  cisco.aci.aci_rest:
    <<: *aci_info
    path: /api/mo/uni.json
    method: post
    annotation: test:inoption
    content:
      fvTenant:
        attributes:
          descr: Ansible test tenant
          name: ansible_test
        children:
          - fvCtx:
              attributes:
                name: VRF1
          - fvAp:
              attributes:
                name: Application1
              children:
                - fvAEPg:
                    attributes:
                      name: WebTier
                      annotation: test:inchild
  register: nm_add_tenant_annotation_children

- name: Verify annotation support
  assert:
    that:
    - nm_add_tenant_annotation_option.imdata.0.fvTenant.attributes.annotation == "test:inoption"
    - nm_add_tenant_annotation_content.imdata.0.fvTenant.attributes.annotation == "test:incontent"
    - nm_add_tenant_annotation_option_content.imdata.0.fvTenant.attributes.annotation == "test:optionincontent"
    - nm_add_tag_no_annotation.imdata.0.tagTag.attributes.annotation is undefined
    - nm_add_tenant_annotation_children.imdata.0.fvTenant.attributes.annotation == "test:inoption"
    - nm_add_tenant_annotation_children.imdata.0.fvTenant.children.0.fvAp.attributes.annotation == "test:inoption"
    - nm_add_tenant_annotation_children.imdata.0.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.annotation == "test:inchild"
    - nm_add_tenant_annotation_children.imdata.0.fvTenant.children.2.fvCtx.attributes.annotation == "test:inoption"

# Test to check the ansible-core >= 2.19
- name: Ensure Port Channel interface policy does not exists
  cisco.aci.aci_rest:
    <<: *aci_info
    path: api/mo/uni/infra/lacpifp-link_aggregation_control_protocol.json
    method: delete
  register: rm_link_aggregation_control_protocol

- name: Add Port Channel interface policy YML with prio attribute int value (check_mode)
  environment:
    ACI_NORMALIZE_PAYLOAD_VALUES: "true"
  cisco.aci.aci_rest: &cm_add_link_aggregation_control_protocol_yml
    <<: *aci_info
    path: api/mo/uni/infra/lacpifp-link_aggregation_control_protocol.json
    method: post
    content:
      lacpIfPol:
        attributes:
          name: "link_aggregation_control_protocol"
          prio: 32768
          descr: "test"
  check_mode: true
  register: cm_add_link_aggregation_control_protocol

- name: Add Port Channel interface policy YML with prio attribute int value
  environment:
    ACI_NORMALIZE_PAYLOAD_VALUES: "true"
  cisco.aci.aci_rest:
    <<: *cm_add_link_aggregation_control_protocol_yml
  register: nm_add_link_aggregation_control_protocol

- name: Add Port Channel interface policy YML with prio attribute int value again
  environment:
    ACI_NORMALIZE_PAYLOAD_VALUES: "true"
  cisco.aci.aci_rest:
    <<: *cm_add_link_aggregation_control_protocol_yml
  register: nm_add_link_aggregation_control_protocol_again

- name: Delete Port Channel interface policy
  cisco.aci.aci_rest:
    <<: *aci_info
    path: api/mo/uni/infra/lacpifp-link_aggregation_control_protocol.json
    method: delete
  register: rm_link_aggregation_control_protocol

- name: Assertion check for add Port Channel interface policy YML with prio attribute int value
  ansible.builtin.assert:
    that:
    - cm_add_link_aggregation_control_protocol is changed
    - cm_add_link_aggregation_control_protocol.proposed.lacpIfPol.attributes.annotation == "orchestrator:ansible"
    - cm_add_link_aggregation_control_protocol.proposed.lacpIfPol.attributes.descr == "test"
    - cm_add_link_aggregation_control_protocol.proposed.lacpIfPol.attributes.name == "link_aggregation_control_protocol"
    - cm_add_link_aggregation_control_protocol.proposed.lacpIfPol.attributes.prio == "32768"
    - nm_add_link_aggregation_control_protocol is changed
    - nm_add_link_aggregation_control_protocol.imdata.0.lacpIfPol.attributes.annotation == "orchestrator:ansible"
    - nm_add_link_aggregation_control_protocol.imdata.0.lacpIfPol.attributes.descr == "test"
    - nm_add_link_aggregation_control_protocol.imdata.0.lacpIfPol.attributes.dn == "uni/infra/lacpifp-link_aggregation_control_protocol"
    - nm_add_link_aggregation_control_protocol.imdata.0.lacpIfPol.attributes.name == "link_aggregation_control_protocol"
    - nm_add_link_aggregation_control_protocol.imdata.0.lacpIfPol.attributes.prio == "32768"
    - nm_add_link_aggregation_control_protocol.imdata.0.lacpIfPol.attributes.rn == ""
    - nm_add_link_aggregation_control_protocol.imdata.0.lacpIfPol.attributes.status == "created"
    - nm_add_link_aggregation_control_protocol.proposed.lacpIfPol.attributes.annotation == "orchestrator:ansible"
    - nm_add_link_aggregation_control_protocol.proposed.lacpIfPol.attributes.descr == "test"
    - nm_add_link_aggregation_control_protocol.proposed.lacpIfPol.attributes.name == "link_aggregation_control_protocol"
    - nm_add_link_aggregation_control_protocol.proposed.lacpIfPol.attributes.prio == "32768"
    - nm_add_link_aggregation_control_protocol_again is not changed
    - nm_add_link_aggregation_control_protocol_again.imdata == []
    - nm_add_link_aggregation_control_protocol_again.proposed.lacpIfPol.attributes.annotation == "orchestrator:ansible"
    - nm_add_link_aggregation_control_protocol_again.proposed.lacpIfPol.attributes.descr == "test"
    - nm_add_link_aggregation_control_protocol_again.proposed.lacpIfPol.attributes.name == "link_aggregation_control_protocol"
    - nm_add_link_aggregation_control_protocol_again.proposed.lacpIfPol.attributes.prio == "32768"
    - nm_add_link_aggregation_control_protocol_again.proposed == nm_add_link_aggregation_control_protocol.proposed == cm_add_link_aggregation_control_protocol.proposed
    - rm_link_aggregation_control_protocol is changed
    - rm_link_aggregation_control_protocol.imdata.0.lacpIfPol.attributes.annotation == "orchestrator:ansible"
    - rm_link_aggregation_control_protocol.imdata.0.lacpIfPol.attributes.descr == "test"
    - rm_link_aggregation_control_protocol.imdata.0.lacpIfPol.attributes.dn == "uni/infra/lacpifp-link_aggregation_control_protocol"
    - rm_link_aggregation_control_protocol.imdata.0.lacpIfPol.attributes.name == "link_aggregation_control_protocol"
    - rm_link_aggregation_control_protocol.imdata.0.lacpIfPol.attributes.prio == "32768"
    - rm_link_aggregation_control_protocol.imdata.0.lacpIfPol.attributes.rn == ""
    - rm_link_aggregation_control_protocol.imdata.0.lacpIfPol.attributes.status == "deleted"
