# Test code for the ACI modules
# Copyright: (c) 2017, Dag Wieers (@dagwieers) <dag@wieers.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)
- name: Test that we have an ACI APIC host, ACI username and ACI password
  ansible.builtin.fail:
    msg: "Please define the following variables: aci_hostname, aci_username and aci_password."
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

- name: Set vars
  ansible.builtin.set_fact:
    aci_info: &aci_info
      host: "{{ aci_hostname }}"
      username: "{{ aci_username }}"
      password: "{{ aci_password }}"
      validate_certs: "{{ aci_validate_certs | default(false) }}"
      use_ssl: "{{ aci_use_ssl | default(true) }}"
      use_proxy: "{{ aci_use_proxy | default(true) }}"
      output_level: "{{ aci_output_level | default('info') }}"

# CLEAN ENVIRONMENT
- name: Remove tenant
  cisco.aci.aci_rest: &tenant_absent
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    validate_certs: "{{ aci_validate_certs | default(false) }}"
    use_ssl: "{{ aci_use_ssl | default(true) }}"
    use_proxy: "{{ aci_use_proxy | default(true) }}"
    output_level: '{{ aci_output_level | default("info") }}'
    path: /api/mo/uni/tn-[ansible_test].json
    method: delete

- name: Remove tenant 2
  cisco.aci.aci_rest:
    <<: *tenant_absent
    path: /api/mo/uni/tn-[ansible_test_2].json

# ADD TENANT
- name: Add tenant (check mode)
  cisco.aci.aci_rest: &tenant_present
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    validate_certs: "{{ aci_validate_certs | default(false) }}"
    use_ssl: "{{ aci_use_ssl | default(true) }}"
    use_proxy: "{{ aci_use_proxy | default(true) }}"
    output_level: '{{ aci_output_level | default("info") }}'
    path: /api/mo/uni.json
    method: post
    content:
      {
          "fvTenant": {
              "attributes": {
                  "name": "ansible_test"
              }
          }
      }
  register: cm_add_tenant
  check_mode: true

- name: Verify checkmode did not create tenant
  cisco.aci.aci_tenant:
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    validate_certs: "{{ aci_validate_certs | default(false) }}"
    use_ssl: "{{ aci_use_ssl | default(true) }}"
    use_proxy: "{{ aci_use_proxy | default(true) }}"
    output_level: '{{ aci_output_level | default("info") }}'
    name: ansible_test
    state: query
  register: cm_verify_checkmode_tenant

- name: Verify checkmode POST operation
  ansible.builtin.assert:
    that:
      - cm_add_tenant is changed
      - cm_add_tenant.proposed.fvTenant.attributes.name == "ansible_test"
      - cm_add_tenant.proposed.fvTenant.attributes.annotation == "orchestrator:ansible"
      - cm_verify_checkmode_tenant.current == []

- name: Add tenant (normal mode)
  cisco.aci.aci_rest: *tenant_present
  register: nm_add_tenant

- name: Add tenant again (normal mode)
  cisco.aci.aci_rest: *tenant_present
  register: nm_add_tenant_again

- name: Verify add_tenant
  ansible.builtin.assert:
    that:
      - nm_add_tenant is changed
      - nm_add_tenant.imdata.0.fvTenant.attributes.annotation == "orchestrator:ansible"
      - nm_add_tenant_again is not changed

# CHANGE TENANT
- name: Change description of tenant (normal mode)
  cisco.aci.aci_rest: &tenant_changed
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    validate_certs: "{{ aci_validate_certs | default(false) }}"
    use_ssl: "{{ aci_use_ssl | default(true) }}"
    use_proxy: "{{ aci_use_proxy | default(true) }}"
    output_level: '{{ aci_output_level | default("info") }}'
    path: /api/mo/uni.json
    method: post
    content:
      {
          "fvTenant": {
              "attributes": {
                  "descr": "Ansible test tenant",
                  "name": "ansible_test"
              }
          }
      }
  register: nm_add_tenant_descr

- name: Change description of tenant again (normal mode)
  cisco.aci.aci_rest: *tenant_changed
  register: nm_add_tenant_descr_again

- name: Verify add_tenant_descr
  ansible.builtin.assert:
    that:
      - nm_add_tenant_descr is changed
      - nm_add_tenant_descr_again is not changed

# ADD TENANT AGAIN
- name: Add tenant again with no description (normal mode)
  cisco.aci.aci_rest: *tenant_present
  register: nm_add_tenant_again_no_descr

- name: Verify add_tenant_again_no_descr
  ansible.builtin.assert:
    that:
      - nm_add_tenant_again_no_descr is not changed

# QUERY ALL TENANTS
- name: Query all tenants (normal mode)
  cisco.aci.aci_rest: &tenant_query_all
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    validate_certs: "{{ aci_validate_certs | default(false) }}"
    use_ssl: "{{ aci_use_ssl | default(true) }}"
    use_proxy: "{{ aci_use_proxy | default(true) }}"
    output_level: '{{ aci_output_level | default("info") }}'
    path: /api/mo/uni/tn-[ansible_test].json
    method: get
  register: nm_query_all_tenants

- name: Verify query_all_tenants
  ansible.builtin.assert:
    that:
      - nm_query_all_tenants is not changed

# ADD TENANT 2
- name: Add tenant 2 (normal mode)
  cisco.aci.aci_rest:
    <<: *tenant_present
    content:
      {
          "fvTenant": {
              "attributes": {
                  "descr": "Ansible test tenant",
                  "name": "ansible_test_2"
              }
          }
      }

# QUERY ALL TENANTS WITH PAGINATION
- name: Query all tenants with pagination (normal mode)
  cisco.aci.aci_rest: &tenant_query_all_paginated
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    validate_certs: "{{ aci_validate_certs | default(false) }}"
    use_ssl: "{{ aci_use_ssl | default(true) }}"
    use_proxy: "{{ aci_use_proxy | default(true) }}"
    output_level: '{{ aci_output_level | default("info") }}'
    path: /api/class/uni/fvTenant.json
    page_size: 10
    method: get
  register: nm_query_all_tenants_paginated

- name: Query all tenant with pagination - Size 1 / Page 0 (normal mode)
  cisco.aci.aci_rest:
    <<: *tenant_query_all_paginated
    page_size: 1
  register: nm_query_all_tenants_paginated_1_0

- name: Query all tenant with pagination - Size 1 / Page 1 (normal mode)
  cisco.aci.aci_rest:
    <<: *tenant_query_all_paginated
    page_size: 1
    page: 1
  register: nm_query_all_tenants_paginated_1_1

- name: Query all tenant with pagination - Size 2 / Page 0 (normal mode)
  cisco.aci.aci_rest:
    <<: *tenant_query_all_paginated
    page_size: 2
  register: nm_query_all_tenants_paginated_2_0

- name: Verify query_all_tenants_paginated
  ansible.builtin.assert:
    that:
      - nm_query_all_tenants_paginated is not changed
      - nm_query_all_tenants_paginated_1_0 is not changed
      - nm_query_all_tenants_paginated_1_1 is not changed
      - nm_query_all_tenants_paginated_2_0 is not changed

- name: Verify pagination works as expected
  ansible.builtin.assert:
    that:
      - nm_query_all_tenants_paginated is not changed
      - nm_query_all_tenants_paginated_1_0.imdata | length == 1
      - nm_query_all_tenants_paginated_1_1.imdata | length == 1
      - nm_query_all_tenants_paginated_2_0.imdata | length == 2
      - nm_query_all_tenants_paginated_1_0.imdata.0.fvTenant.attributes.name == nm_query_all_tenants_paginated_2_0.imdata.0.fvTenant.attributes.name
      - nm_query_all_tenants_paginated_1_1.imdata.0.fvTenant.attributes.name == nm_query_all_tenants_paginated_2_0.imdata.1.fvTenant.attributes.name

# QUERY A TENANT
- name: Query our tenant
  cisco.aci.aci_rest: &tenant_query
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    validate_certs: "{{ aci_validate_certs | default(false) }}"
    use_ssl: "{{ aci_use_ssl | default(true) }}"
    use_proxy: "{{ aci_use_proxy | default(true) }}"
    output_level: '{{ aci_output_level | default("info") }}'
    path: /api/mo/uni/tn-[ansible_test].json
    method: get
  register: nm_query_tenant

- name: Verify query_tenant
  ansible.builtin.assert:
    that:
      - nm_query_tenant is not changed

# REMOVE TENANT
- name: Remove tenant (normal mode)
  cisco.aci.aci_rest: *tenant_absent
  register: nm_remove_tenant

- name: Remove tenant_2 (normal mode)
  cisco.aci.aci_rest:
    <<: *tenant_absent
    path: /api/mo/uni/tn-[ansible_test_2].json
  register: nm_remove_tenant_2

- name: Remove tenant again (normal mode)
  cisco.aci.aci_rest: *tenant_absent
  register: nm_remove_tenant_again

- name: Verify remove_tenant
  ansible.builtin.assert:
    that:
      - nm_remove_tenant is changed
      - nm_remove_tenant_again is not changed

# QUERY NON-EXISTING TENANT
- name: Query non-existing tenant (normal mode)
  cisco.aci.aci_rest: *tenant_query
  register: nm_query_non_tenant

- name: Verify query_non_tenant
  ansible.builtin.assert:
    that:
      - nm_query_non_tenant is not changed

# VERIFY ANNOTATION SUPPORT
- name: Add tenant with annotation option
  cisco.aci.aci_rest:
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    validate_certs: "{{ aci_validate_certs | default(false) }}"
    use_ssl: "{{ aci_use_ssl | default(true) }}"
    use_proxy: "{{ aci_use_proxy | default(true) }}"
    output_level: '{{ aci_output_level | default("info") }}'
    path: /api/mo/uni.json
    method: post
    annotation: test:inoption
    content:
      {
          "fvTenant": {
              "attributes": {
                  "descr": "Ansible test tenant",
                  "name": "ansible_test"
              }
          }
      }
  register: nm_add_tenant_annotation_option

- name: Add tenant with annotation in content
  cisco.aci.aci_rest:
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    validate_certs: "{{ aci_validate_certs | default(false) }}"
    use_ssl: "{{ aci_use_ssl | default(true) }}"
    use_proxy: "{{ aci_use_proxy | default(true) }}"
    output_level: '{{ aci_output_level | default("info") }}'
    path: /api/mo/uni.json
    method: post
    content:
      {
          "fvTenant": {
              "attributes": {
                  "descr": "Ansible test tenant",
                  "name": "ansible_test",
                  "annotation": "test:incontent"
              }
          }
      }
  register: nm_add_tenant_annotation_content

- name: Add tenant with annotation in content and option
  cisco.aci.aci_rest:
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    validate_certs: "{{ aci_validate_certs | default(false) }}"
    use_ssl: "{{ aci_use_ssl | default(true) }}"
    use_proxy: "{{ aci_use_proxy | default(true) }}"
    output_level: '{{ aci_output_level | default("info") }}'
    path: /api/mo/uni.json
    method: post
    annotation: test:inoption
    content:
      {
          "fvTenant": {
              "attributes": {
                  "descr": "Ansible test tenant",
                  "name": "ansible_test",
                  "annotation": "test:optionincontent"
              }
          }
      }
  register: nm_add_tenant_annotation_option_content

- name: Add tag to tenant with annotation unsupported
  cisco.aci.aci_rest:
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    validate_certs: "{{ aci_validate_certs | default(false) }}"
    use_ssl: "{{ aci_use_ssl | default(true) }}"
    use_proxy: "{{ aci_use_proxy | default(true) }}"
    output_level: '{{ aci_output_level | default("info") }}'
    path: /api/mo/uni/tn-ansible_test/tagKey-foo.json
    method: post
    annotation: test:inoption
    content:
      {
          "tagTag": {
              "attributes": {
                  "value": "bar"
              }
          }
      }
  register: nm_add_tag_no_annotation

- name: Remove tenant
  cisco.aci.aci_rest: *tenant_absent

- name: Add tenant with children objects including annotation
  cisco.aci.aci_rest:
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    validate_certs: "{{ aci_validate_certs | default(false) }}"
    use_ssl: "{{ aci_use_ssl | default(true) }}"
    use_proxy: "{{ aci_use_proxy | default(true) }}"
    output_level: '{{ aci_output_level | default("info") }}'
    path: /api/mo/uni.json
    method: post
    annotation: test:inoption
    content:
      {
          "fvTenant": {
              "attributes": {
                  "descr": "Ansible test tenant",
                  "name": "ansible_test"
              },
              "children": [
                {
                  "fvCtx": {
                    "attributes": {
                      "name": "VRF1"
                    }
                  }
                },
                {
                  "fvAp": {
                    "attributes": {
                      "name": "Application1"
                    },
                    "children": [
                      {
                        "fvAEPg": {
                          "attributes": {
                            "name": "WebTier",
                            "annotation": "test:inchild"
                          }
                        }
                      }
                    ]
                  }
                }
              ]
          }
      }
  register: nm_add_tenant_annotation_children

- name: Verify annotation support
  assert:
    that:
      - nm_add_tenant_annotation_option.imdata.0.fvTenant.attributes.annotation == "test:inoption"
      - nm_add_tenant_annotation_content.imdata.0.fvTenant.attributes.annotation == "test:incontent"
      - nm_add_tenant_annotation_option_content.imdata.0.fvTenant.attributes.annotation == "test:optionincontent"
      - nm_add_tag_no_annotation.imdata.0.tagTag.attributes.annotation is undefined
      - nm_add_tenant_annotation_children.imdata.0.fvTenant.attributes.annotation == "test:inoption"
      - nm_add_tenant_annotation_children.imdata.0.fvTenant.children.0.fvAp.attributes.annotation == "test:inoption"
      - nm_add_tenant_annotation_children.imdata.0.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.annotation == "test:inchild"
      - nm_add_tenant_annotation_children.imdata.0.fvTenant.children.2.fvCtx.attributes.annotation == "test:inoption"

# Test to check the fix for disabling intersight connectivity issue: https://github.com/CiscoDevNet/ansible-aci/issues/685
- name: Disable Intersight Connectivity
  cisco.aci.aci_rest:
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    validate_certs: "{{ aci_validate_certs | default(false) }}"
    use_ssl: "{{ aci_use_ssl | default(true) }}"
    use_proxy: "{{ aci_use_proxy | default(true) }}"
    output_level: '{{ aci_output_level | default("info") }}'
    path: /connector/Systems.json
    method: post
    rsp_subtree_preserve: true
    content:
      {
        "AdminState": false
      }
  register: disable_intersight_connectivity

- name: Verify Intersight Connectivity is disabled
  assert:
    that:
      - disable_intersight_connectivity.imdata.0.AdminState == false

# Test to check the ansible-core >= 2.19
- name: Ensure Port Channel interface policy does not exists
  cisco.aci.aci_rest:
    <<: *aci_info
    path: api/mo/uni/infra/lacpifp-port_channel_interface_policy.json
    method: delete
  register: rm_pc_inf_pol

- name: Add Port Channel interface policy JSON with prio attribute int value (check_mode)
  cisco.aci.aci_rest: &cm_add_pc_inf_pol_json
    <<: *aci_info
    path: api/mo/uni/infra/lacpifp-port_channel_interface_policy.json
    method: post
    content:
      { "lacpIfPol": { "attributes": { "annotation": "orchestrator:ansible", "descr": null, "name": "port_channel_interface_policy", "prio": 32768 } } }
  check_mode: true
  register: cm_add_pc_inf_pol

- name: Add Port Channel interface policy JSON with prio attribute int value
  cisco.aci.aci_rest:
    <<: *cm_add_pc_inf_pol_json
  register: nm_add_pc_inf_pol

- name: Add Port Channel interface policy JSON with prio attribute int value again
  cisco.aci.aci_rest:
    <<: *cm_add_pc_inf_pol_json
  register: nm_add_pc_inf_pol_again

- name: Delete Port Channel interface policy
  cisco.aci.aci_rest:
    <<: *aci_info
    path: api/mo/uni/infra/lacpifp-port_channel_interface_policy.json
    method: delete
  register: rm_pc_inf_pol

- name: Assertion check for add Port Channel interface policy JSON with prio attribute int value
  ansible.builtin.assert:
    that:
      - cm_add_pc_inf_pol is changed
      - cm_add_pc_inf_pol.proposed.lacpIfPol.attributes.annotation == "orchestrator:ansible"
      - cm_add_pc_inf_pol.proposed.lacpIfPol.attributes.descr == ""
      - cm_add_pc_inf_pol.proposed.lacpIfPol.attributes.name == "port_channel_interface_policy"
      - cm_add_pc_inf_pol.proposed.lacpIfPol.attributes.prio == "32768"
      - nm_add_pc_inf_pol is changed
      - nm_add_pc_inf_pol.imdata.0.lacpIfPol.attributes.annotation == "orchestrator:ansible"
      - nm_add_pc_inf_pol.imdata.0.lacpIfPol.attributes.descr == ""
      - nm_add_pc_inf_pol.imdata.0.lacpIfPol.attributes.dn == "uni/infra/lacpifp-port_channel_interface_policy"
      - nm_add_pc_inf_pol.imdata.0.lacpIfPol.attributes.name == "port_channel_interface_policy"
      - nm_add_pc_inf_pol.imdata.0.lacpIfPol.attributes.prio == "32768"
      - nm_add_pc_inf_pol.imdata.0.lacpIfPol.attributes.rn == ""
      - nm_add_pc_inf_pol.imdata.0.lacpIfPol.attributes.status == "created"
      - nm_add_pc_inf_pol.proposed.lacpIfPol.attributes.annotation == "orchestrator:ansible"
      - nm_add_pc_inf_pol.proposed.lacpIfPol.attributes.descr == ""
      - nm_add_pc_inf_pol.proposed.lacpIfPol.attributes.name == "port_channel_interface_policy"
      - nm_add_pc_inf_pol.proposed.lacpIfPol.attributes.prio == "32768"
      - nm_add_pc_inf_pol_again is not changed
      - nm_add_pc_inf_pol_again.imdata == []
      - nm_add_pc_inf_pol_again.proposed == nm_add_pc_inf_pol.proposed
      - rm_pc_inf_pol is changed
      - rm_pc_inf_pol.imdata.0.lacpIfPol.attributes.annotation == "orchestrator:ansible"
      - rm_pc_inf_pol.imdata.0.lacpIfPol.attributes.descr == ""
      - rm_pc_inf_pol.imdata.0.lacpIfPol.attributes.dn == "uni/infra/lacpifp-port_channel_interface_policy"
      - rm_pc_inf_pol.imdata.0.lacpIfPol.attributes.name == "port_channel_interface_policy"
      - rm_pc_inf_pol.imdata.0.lacpIfPol.attributes.prio == "32768"
      - rm_pc_inf_pol.imdata.0.lacpIfPol.attributes.rn == ""
      - rm_pc_inf_pol.imdata.0.lacpIfPol.attributes.status == "deleted"

- name: Ensure ansible_test_json tenant does not exists
  cisco.aci.aci_rest:
    <<: *aci_info
    path: api/mo/uni/tn-ansible_test_json.json
    method: delete

- name: Add tenant with nested child objects (check_mode)
  cisco.aci.aci_rest: &cm_add_tenant_json
    <<: *aci_info
    path: api/mo/uni/tn-ansible_test_json.json
    method: post
    content:
      fvTenant:
        attributes:
          annotation: "test:inoption"
          descr: "Ansible test tenant"
          dn: "uni/tn-ansible_test_json"
          name: "ansible_test_json"
        children:
          - fvAp:
              attributes:
                name: "ap1"
                descr: ""
              children:
                - fvAEPg:
                    attributes:
                      floodOnEncap: "disabled"
                      hasMcastSource: "no"
                      isAttrBasedEPg: "yes"
                      matchT: "AtleastOne"
                      name: "usge_epg"
                      pcEnfPref: "unenforced"
                      prefGrMemb: "exclude"
                      prio: "level3"
                      shutdown: "no"
                    children:
                      - fvCrtrn:
                          attributes:
                            match: "any"
                            name: "default"
                            prec: 100
                            scope: "scope-bd"
                      - fvRsBd:
                          attributes:
                            tnFvBDName: "default"
          - ospfIfPol:
              attributes:
                cost: 11
                ctrl: "mtu-ignore"
                deadIntvl: 12
                helloIntvl: 13
                name: "ansible_ospf"
                nwT: "bcast"
                pfxSuppress: "disable"
                prio: 220
                rexmitIntvl: 15
                xmitDelay: 16
  check_mode: true
  register: cm_add_tenant_json

- name: Add tenant with nested child objects
  cisco.aci.aci_rest:
    <<: *cm_add_tenant_json
  register: nm_add_tenant_json

- name: Add tenant with nested child objects again
  cisco.aci.aci_rest:
    <<: *cm_add_tenant_json
  register: nm_add_tenant_json_again

- name: Remove tenant with nested child objects
  cisco.aci.aci_rest:
    <<: *aci_info
    path: api/mo/uni/tn-ansible_test_json.json
    method: delete
  register: rm_tenant_json

- name: Assertion check for add tenant with nested child objects
  ansible.builtin.assert:
    that:
      - cm_add_tenant_json is changed
      - cm_add_tenant_json.proposed.fvTenant.attributes.annotation == "test:inoption"
      - cm_add_tenant_json.proposed.fvTenant.attributes.descr == "Ansible test tenant"
      - cm_add_tenant_json.proposed.fvTenant.attributes.dn == "uni/tn-ansible_test_json"
      - cm_add_tenant_json.proposed.fvTenant.attributes.name == "ansible_test_json"
      - cm_add_tenant_json.proposed.fvTenant.children.0.fvAp.attributes.annotation == "orchestrator:ansible"
      - cm_add_tenant_json.proposed.fvTenant.children.0.fvAp.attributes.name == "ap1"
      - cm_add_tenant_json.proposed.fvTenant.children.0.fvAp.attributes.descr == ""
      - cm_add_tenant_json.proposed.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.annotation == "orchestrator:ansible"
      - cm_add_tenant_json.proposed.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.floodOnEncap == "disabled"
      - cm_add_tenant_json.proposed.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.hasMcastSource == "no"
      - cm_add_tenant_json.proposed.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.isAttrBasedEPg == "yes"
      - cm_add_tenant_json.proposed.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.matchT == "AtleastOne"
      - cm_add_tenant_json.proposed.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.name == "usge_epg"
      - cm_add_tenant_json.proposed.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.pcEnfPref == "unenforced"
      - cm_add_tenant_json.proposed.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.prefGrMemb == "exclude"
      - cm_add_tenant_json.proposed.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.prio == "level3"
      - cm_add_tenant_json.proposed.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.shutdown == "no"
      - cm_add_tenant_json.proposed.fvTenant.children.0.fvAp.children.0.fvAEPg.children.0.fvCrtrn.attributes.annotation == "orchestrator:ansible"
      - cm_add_tenant_json.proposed.fvTenant.children.0.fvAp.children.0.fvAEPg.children.0.fvCrtrn.attributes.match == "any"
      - cm_add_tenant_json.proposed.fvTenant.children.0.fvAp.children.0.fvAEPg.children.0.fvCrtrn.attributes.name == "default"
      - cm_add_tenant_json.proposed.fvTenant.children.0.fvAp.children.0.fvAEPg.children.0.fvCrtrn.attributes.prec == "100"
      - cm_add_tenant_json.proposed.fvTenant.children.0.fvAp.children.0.fvAEPg.children.0.fvCrtrn.attributes.scope == "scope-bd"
      - cm_add_tenant_json.proposed.fvTenant.children.0.fvAp.children.0.fvAEPg.children.1.fvRsBd.attributes.annotation == "orchestrator:ansible"
      - cm_add_tenant_json.proposed.fvTenant.children.0.fvAp.children.0.fvAEPg.children.1.fvRsBd.attributes.tnFvBDName == "default"
      - cm_add_tenant_json.proposed.fvTenant.children.1.ospfIfPol.attributes.annotation == "orchestrator:ansible"
      - cm_add_tenant_json.proposed.fvTenant.children.1.ospfIfPol.attributes.cost == "11"
      - cm_add_tenant_json.proposed.fvTenant.children.1.ospfIfPol.attributes.ctrl == "mtu-ignore"
      - cm_add_tenant_json.proposed.fvTenant.children.1.ospfIfPol.attributes.deadIntvl == "12"
      - cm_add_tenant_json.proposed.fvTenant.children.1.ospfIfPol.attributes.helloIntvl == "13"
      - cm_add_tenant_json.proposed.fvTenant.children.1.ospfIfPol.attributes.name == "ansible_ospf"
      - cm_add_tenant_json.proposed.fvTenant.children.1.ospfIfPol.attributes.nwT == "bcast"
      - cm_add_tenant_json.proposed.fvTenant.children.1.ospfIfPol.attributes.pfxSuppress == "disable"
      - cm_add_tenant_json.proposed.fvTenant.children.1.ospfIfPol.attributes.prio == "220"
      - cm_add_tenant_json.proposed.fvTenant.children.1.ospfIfPol.attributes.rexmitIntvl == "15"
      - cm_add_tenant_json.proposed.fvTenant.children.1.ospfIfPol.attributes.xmitDelay == "16"
      - nm_add_tenant_json is changed
      - nm_add_tenant_json.imdata.0.fvTenant.attributes.annotation == "test:inoption"
      - nm_add_tenant_json.imdata.0.fvTenant.attributes.descr == "Ansible test tenant"
      - nm_add_tenant_json.imdata.0.fvTenant.attributes.dn == "uni/tn-ansible_test_json"
      - nm_add_tenant_json.imdata.0.fvTenant.attributes.name == "ansible_test_json"
      - nm_add_tenant_json.imdata.0.fvTenant.attributes.rn == ""
      - nm_add_tenant_json.imdata.0.fvTenant.attributes.status == "created"
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.attributes.annotation == "orchestrator:ansible"
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.attributes.descr == ""
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.attributes.name == "ap1"
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.attributes.prio == "unspecified"
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.attributes.rn == "ap-ap1"
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.attributes.status == "created"
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.annotation == "orchestrator:ansible"
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.configIssues == ""
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.configSt == "not-applied"
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.descr == ""
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.exceptionTag == ""
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.floodOnEncap == "disabled"
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.fwdCtrl == ""
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.hasMcastSource == "no"
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.isAttrBasedEPg == "yes"
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.isSharedSrvMsiteEPg == "no"
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.matchT == "AtleastOne"
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.name == "usge_epg"
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.pcEnfPref == "unenforced"
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.pcTag == "any"
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.pcTagAllocSrc == "idmanager"
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.prefGrMemb == "exclude"
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.prio == "level3"
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.rn == "epg-usge_epg"
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.scope == "0"
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.shutdown == "no"
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.status == "created"
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.triggerSt == "not_triggerable"
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.children.0.fvAEPg.attributes.txId == "0"
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.children.0.fvAEPg.children.0.fvCrtrn.attributes.annotation == "orchestrator:ansible"
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.children.0.fvAEPg.children.0.fvCrtrn.attributes.name == "default"
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.children.0.fvAEPg.children.0.fvCrtrn.attributes.prec == "100"
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.children.0.fvAEPg.children.0.fvCrtrn.attributes.rn == "crtrn"
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.children.0.fvAEPg.children.1.fvRsBd.attributes.annotation == "orchestrator:ansible"
      - nm_add_tenant_json.imdata.0.fvTenant.children.0.fvAp.children.0.fvAEPg.children.1.fvRsBd.attributes.tnFvBDName == "default"
      - nm_add_tenant_json.imdata.0.fvTenant.children.2.ospfIfPol.attributes.annotation == "orchestrator:ansible"
      - nm_add_tenant_json.imdata.0.fvTenant.children.2.ospfIfPol.attributes.cost == "11"
      - nm_add_tenant_json.imdata.0.fvTenant.children.2.ospfIfPol.attributes.ctrl == "mtu-ignore"
      - nm_add_tenant_json.imdata.0.fvTenant.children.2.ospfIfPol.attributes.deadIntvl == "12"
      - nm_add_tenant_json.imdata.0.fvTenant.children.2.ospfIfPol.attributes.descr == ""
      - nm_add_tenant_json.imdata.0.fvTenant.children.2.ospfIfPol.attributes.helloIntvl == "13"
      - nm_add_tenant_json.imdata.0.fvTenant.children.2.ospfIfPol.attributes.name == "ansible_ospf"
      - nm_add_tenant_json.imdata.0.fvTenant.children.2.ospfIfPol.attributes.nwT == "bcast"
      - nm_add_tenant_json.imdata.0.fvTenant.children.2.ospfIfPol.attributes.pfxSuppress == "disable"
      - nm_add_tenant_json.imdata.0.fvTenant.children.2.ospfIfPol.attributes.prio == "220"
      - nm_add_tenant_json.imdata.0.fvTenant.children.2.ospfIfPol.attributes.rexmitIntvl == "15"
      - nm_add_tenant_json.imdata.0.fvTenant.children.2.ospfIfPol.attributes.rn == "ospfIfPol-ansible_ospf"
      - nm_add_tenant_json.imdata.0.fvTenant.children.2.ospfIfPol.attributes.status == "created"
      - nm_add_tenant_json.imdata.0.fvTenant.children.2.ospfIfPol.attributes.xmitDelay == "16"
      - cm_add_tenant_json.proposed == nm_add_tenant_json.proposed == nm_add_tenant_json_again.proposed
      - nm_add_tenant_json_again is not changed
      - nm_add_tenant_json_again.imdata == []
      - nm_add_tenant_json.proposed == nm_add_tenant_json_again.proposed
      - rm_tenant_json is changed
      - rm_tenant_json.imdata.0.fvTenant.attributes.annotation == "test:inoption"
      - rm_tenant_json.imdata.0.fvTenant.attributes.descr == "Ansible test tenant"
      - rm_tenant_json.imdata.0.fvTenant.attributes.dn == "uni/tn-ansible_test_json"
      - rm_tenant_json.imdata.0.fvTenant.attributes.name == "ansible_test_json"
      - rm_tenant_json.imdata.0.fvTenant.attributes.rn == ""
      - rm_tenant_json.imdata.0.fvTenant.attributes.status == "deleted"
