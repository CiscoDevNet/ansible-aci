# Test code for the ACI modules
# Copyright: (c) 2017, Dag Wieers (@dagwieers) <dag@wieers.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI APIC host, ACI username and ACI password
  fail:
    msg: 'Please define the following variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

# CLEAN ENVIRONMENT
- name: Set vars
  set_fact:
    aci_info: &aci_info
      host: "{{ aci_hostname }}"
      username: "{{ aci_username }}"
      password: "{{ aci_password }}"
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: '{{ aci_output_level | default("debug") }}'

- name: Verify Cloud and Non-Cloud Sites in use.
  include_tasks: ../../../../../../integration/targets/aci_cloud_provider/tasks/main.yml

- name: ensure tenant exists for tests to kick off
  cisco.aci.aci_tenant: &aci_tenant_present
    <<: *aci_info
    tenant: anstest
    state: present
  register: tenant_present

- name: Query system information
  aci_system:
    <<: *aci_info
    id: 1
    state: query
  register: version

- name: ensure ap exists for tests to kick off
  cisco.aci.aci_ap: &aci_ap_present
    <<: *aci_tenant_present
    ap: anstest
  register: ap_present

- name: delete epg to make sure setup is clean
  cisco.aci.aci_epg:
    <<: *aci_ap_present
    epg: anstest
    state: absent

- name: ensure epg exists for tests to kick off
  cisco.aci.aci_epg: &aci_epg_present
    <<: *aci_ap_present
    epg: anstest
  register: epg_present

- name: ensure phys domain exists for tests to kick off
  cisco.aci.aci_rest: &aci_rest_phys_domain
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: '{{ aci_output_level | default("info") }}'
    method: post
    path: api/mo/uni/phys-anstest.json
    content: {"physDomP": {"attributes": {}}}
  register: phys_domain_post

- name: ensure vmm domain exists for tests to kick off
  cisco.aci.aci_rest: &aci_rest_vmm_domain
    <<: *aci_rest_phys_domain
    path: api/mo/uni/vmmp-VMware/dom-anstest.json
    content: {"vmmDomP": {"attributes": {}}}
  register: vmm_domain_post
  when: query_cloud.current == []  # This condition will skip execution for cloud sites

- name: ensure l2dom domain exists for tests to kick off
  cisco.aci.aci_rest: &aci_rest_l2dom_domain
    <<: *aci_rest_phys_domain
    path: api/mo/uni/l2dom-anstest.json
    content: {"l2extDomP": {"attributes": {}}}
  register: l2dom_domain_post

- name: bind phys domain to epg - check mode works
  cisco.aci.aci_epg_to_domain: &aci_epg_to_domain_present
    <<: *aci_epg_present
    domain: anstest
    domain_type: phys
  check_mode: yes
  register: phys_check_mode_present

- name: bind phys domain to epg - creation works
  cisco.aci.aci_epg_to_domain:
    <<: *aci_epg_to_domain_present
  register: phys_present

- name: bind phys domain to epg - idempotency works
  cisco.aci.aci_epg_to_domain:
    <<: *aci_epg_to_domain_present 
  register: phys_idempotent

- name: bind phys domain to epg - update works
  cisco.aci.aci_epg_to_domain:
    <<: *aci_epg_to_domain_present
    deploy_immediacy: immediate
  register: phys_update

- name: bind l2dom domain to epg
  cisco.aci.aci_epg_to_domain: &aci_epg_to_domain_l2dom_present
    <<: *aci_epg_present
    domain: anstest
    domain_type: l2dom
  register: l2_present

- name: bind vmm domain to epg - creation works
  cisco.aci.aci_epg_to_domain: &aci_epg_to_domain_vmm_present
    <<: *aci_epg_to_domain_present
    domain_type: vmm
    vm_provider: vmware
    resolution_immediacy: pre-provision
    promiscuous: accept
  register: vmm_present_promiscuous_accept

- name: bind vmm domain to epg - creation works
  cisco.aci.aci_epg_to_domain:
    <<: *aci_epg_to_domain_present
    domain_type: vmm
    vm_provider: vmware
    resolution_immediacy: pre-provision
    promiscuous: reject
  register: vmm_present_promiscuous_reject

- name: bind vmm domain to epg - missing params
  cisco.aci.aci_epg_to_domain:
    <<: *aci_epg_to_domain_vmm_present
    vm_provider: "{{ fake_var | default(omit) }}"
  ignore_errors: yes
  register: present_missing_params

- name: bind vmm domain to epg - valid vlan
  cisco.aci.aci_epg_to_domain:
    <<: *aci_epg_to_domain_present
    encap: 1
  register: valid_vlan

- name: bind vmm domain to epg - valid vlan (primary_encap)
  cisco.aci.aci_epg_to_domain:
    <<: *aci_epg_to_domain_present
    primary_encap: 25
  register: valid_vlan_primary_encap

- name: bind vmm domain to epg - invalid vlan
  cisco.aci.aci_epg_to_domain:
    <<: *aci_epg_to_domain_present
    encap: 4097
  ignore_errors: yes
  register: invalid_vlan

- name: bind vmm domain to epg - invalid vlan (primary_encap)
  cisco.aci.aci_epg_to_domain:
    <<: *aci_epg_to_domain_present
    primary_encap: 4097
  ignore_errors: yes
  register: invalid_vlan_primary_encap

- name: bind vmm domain to epg - incompatible params
  cisco.aci.aci_epg_to_domain:
    <<: *aci_epg_to_domain_present
    vm_provider: vmware
  ignore_errors: yes
  register: incompatible_params

- name: Create enhanced lag policy
  cisco.aci.aci_rest: &enhanced_lag_policy_present
    <<: *aci_info
    path: api/node/mo/uni/vmmp-VMware/dom-anstest/vswitchpolcont.json
    method: post
    content: |
      {
        "vmmVSwitchPolicyCont": {
          "attributes": {
            "dn": "uni/vmmp-VMware/dom-anstest/vswitchpolcont",
            "status": "created,modified"
          },
          "children": [{
                "lacpEnhancedLagPol": {
                    "attributes": {
                        "lbmode": "src-dst-ip",
                        "mode": "active",
                        "name": "enhanced",
                        "numLinks": "2"
                    }
                }
          }]
        }
      }
  register: add_enhanced_lag_policy
  when: query_cloud.current == []  # This condition will skip execution for cloud sites

- name: bind vmm domain to epg - enhanced_lag_policy
  cisco.aci.aci_epg_to_domain:
    <<: *aci_epg_to_domain_present
    domain_type: vmm
    vm_provider: vmware
    enhanced_lag_policy: enhanced
  register: enhanced_lag_policy

- name: change custom epg name
  cisco.aci.aci_epg_to_domain:
    <<: *aci_epg_to_domain_present
    domain_type: vmm
    vm_provider: vmware
    custom_epg_name: anstest_epg
  register: custom_epg_name
  when: version.current.0.topSystem.attributes.version is version('4.2', '>=')

- name: Verify custom epg name
  assert:
    that:
      - custom_epg_name.current.0.fvRsDomAtt.attributes.customEpgName == "anstest_epg"
  when: version.current.0.topSystem.attributes.version is version('4.2', '>=')

- name: present assertions
  assert:
    that:
      - phys_check_mode_present is changed
      - phys_present is changed
      - phys_present.previous == []
      - phys_present.sent.fvRsDomAtt.attributes.switchingMode == 'native'
      - '"[uni/phys-anstest].json" in phys_present.url'
      - phys_idempotent is not changed
      - phys_idempotent.sent == {}
      - phys_update is changed
      - phys_update.sent.fvRsDomAtt.attributes.instrImedcy == 'immediate'
      - vmm_present_promiscuous_accept is changed
      - vmm_present_promiscuous_reject is changed
      - vmm_present_promiscuous_accept.current.0.fvRsDomAtt.children.0.vmmSecP.attributes.allowPromiscuous == 'accept'
      - vmm_present_promiscuous_reject.current.0.fvRsDomAtt.children.0.vmmSecP.attributes.allowPromiscuous == 'reject'
      - vmm_present_promiscuous_accept.sent.fvRsDomAtt.attributes.resImedcy == 'pre-provision'
      - vmm_present_promiscuous_accept.sent.fvRsDomAtt.attributes.switchingMode == 'native'
      - '"[uni/vmmp-VMware/dom-anstest].json" in vmm_present_promiscuous_accept.url'
      - present_missing_params is failed
      - 'present_missing_params.msg == "domain_type is vmm but all of the following are missing: vm_provider"'
      - invalid_vlan is failed
      - invalid_vlan.msg == "Valid VLAN assignments are from 1 to 4096"
      - incompatible_params is failed
      - incompatible_params.msg == "Domain type 'phys' cannot have a 'vm_provider'"
      - invalid_vlan_primary_encap.msg == "Valid VLAN assignments are from 1 to 4096"
      - '"[uni/l2dom-anstest].json" in l2_present.url'
      - valid_vlan_primary_encap.current.0.fvRsDomAtt.attributes.dn == "uni/tn-anstest/ap-anstest/epg-anstest/rsdomAtt-[uni/phys-anstest]"
      - enhanced_lag_policy.current.0.fvRsDomAtt.children | length == 2
      - enhanced_lag_policy.current.0.fvRsDomAtt.children.0.fvAEPgLagPolAtt.children.0.fvRsVmmVSwitchEnhancedLagPol.attributes.tDn == "uni/vmmp-VMware/dom-anstest/vswitchpolcont/enlacplagp-enhanced"

- name: get domain epg binding
  cisco.aci.aci_epg_to_domain: &aci_epg_domain_query
    <<: *aci_tenant_present
    state: query
    tenant: "{{ fake_var | default(omit) }}"
  register: binding_query

- name: query assertions
  assert:
    that:
      - binding_query is not changed
      - binding_query.current | length > 1
      - '"class/fvRsDomAtt.json" in binding_query.url'

- name: delete domain epg binding - check mode
  cisco.aci.aci_epg_to_domain: &aci_epg_to_domain_absent
    <<: *aci_epg_to_domain_present
    state: absent
  check_mode: yes
  register: epg_domain_check_mode_absent

- name: delete phys domain epg binding - delete works
  cisco.aci.aci_epg_to_domain:
    <<: *aci_epg_to_domain_absent
  register: epg_domain_absent

- name: delete vmm domain epg binding - delete works
  cisco.aci.aci_epg_to_domain:
    <<: *aci_epg_to_domain_vmm_present
    state: absent
  register: epg_vmm_domain_absent

- name: delete domain epg binding - idempotency works
  cisco.aci.aci_epg_to_domain:
    <<: *aci_epg_to_domain_absent
  register: idempotency_absent

- name: delete domain epg binding - missing param
  cisco.aci.aci_epg_to_domain:
    <<: *aci_tenant_present
    state: absent
  ignore_errors: true
  register: absent_missing_param

- name: absent assertions
  assert:
    that:
      - epg_domain_check_mode_absent is changed
      - epg_domain_check_mode_absent.previous != []
      - epg_domain_absent is changed
      - epg_domain_absent.previous == epg_domain_check_mode_absent.previous
      - epg_vmm_domain_absent is changed
      - idempotency_absent is not changed
      - idempotency_absent.previous == []
      - absent_missing_param is failed
      - 'absent_missing_param.msg == "state is absent but all of the following are missing: ap, domain, domain_type, epg"'

- name: remove vmm domain - cleanup
  cisco.aci.aci_rest:
    <<: *aci_rest_vmm_domain
    method: delete
  when: vmm_domain_post is changed

- name: remove phys domain - cleanup
  cisco.aci.aci_rest:
    <<: *aci_rest_phys_domain
    method: delete
  when: phys_domain_post is changed

- name: remove l2 domain - cleanup
  cisco.aci.aci_rest:
    <<: *aci_rest_l2dom_domain
    method: delete
  when: l2dom_domain_post is changed

- name: remove epg - cleanup
  cisco.aci.aci_epg:
    <<: *aci_epg_present
    state: absent
  when: epg_present is changed

- name: remove ap - cleanup
  cisco.aci.aci_ap:
    <<: *aci_ap_present
    state: absent
  when: ap_present is changed

- name: remove tenant - cleanup
  cisco.aci.aci_tenant:
    <<: *aci_tenant_present
    state: absent
  when: tenant_present is changed