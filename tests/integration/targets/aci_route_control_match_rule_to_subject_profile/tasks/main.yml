# Author: Tim Cragg (@timcragg)
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

# SET VARS
- name: Set vars
  set_fact:
    aci_info: &aci_info
      host: '{{ aci_hostname }}'
      username: '{{ aci_username }}'
      password: '{{ aci_password }}'
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: '{{ aci_output_level | default("info") }}'

# CLEAN ENVIRONMENT
- name: Remove test tenant before we kickoff
  cisco.aci.aci_tenant: &tenant_absent
    <<: *aci_info
    tenant: ansible_tenant
    state: absent

# SETUP ENVIRONMENT
- name: Create domain
  cisco.aci.aci_domain: &domain_present
    <<: *aci_info
    domain: ansible_l3_dom
    domain_type: l3dom
    state: present

- name: Create tenant
  cisco.aci.aci_tenant: &tenant_present
    <<: *tenant_absent
    state: present

- name: Configure VRF
  cisco.aci.aci_vrf: &vrf_present
    <<: *tenant_present
    vrf: ansible_vrf

- name: Create L3Out
  cisco.aci.aci_l3out:
    <<: *vrf_present
    l3out: ansible_l3out
    domain: ansible_l3_dom
    route_control: export

- name: Create route control profile
  cisco.aci.aci_route_control_profile:
    <<: *aci_info
    tenant: ansible_tenant
    l3out: ansible_l3out
    profile: ansible_rtctrl_profile
    prof_type: global
    state: present

- name: Add route control context
  cisco.aci.aci_route_control_context:
    <<: *aci_info
    tenant: ansible_tenant
    l3out: ansible_l3out
    profile: ansible_rtctrl_profile
    context: ansible_rtctrl_context
    order: 0
    action: permit
    state: present

- name: Add second route control context
  cisco.aci.aci_route_control_context:
    <<: *aci_info
    tenant: ansible_tenant
    l3out: ansible_l3out
    profile: ansible_rtctrl_profile
    context: ansible_rtctrl_context2
    order: 1
    action: permit
    state: present

- name: Add route control subject
  cisco.aci.aci_route_control_subject:
    <<: *aci_info
    tenant: ansible_tenant
    subject_name: ansible_rtctrl_subject
    state: present

- name: Add second route control subject
  cisco.aci.aci_route_control_subject:
    <<: *aci_info
    tenant: ansible_tenant
    subject_name: ansible_rtctrl_subject2
    state: present

# BEGIN WITH TESTS

- name: Add context-to-subject binding (check mode)
  cisco.aci.aci_route_control_match_rule_to_subject_profile: &binding_present
    <<: *aci_info
    tenant: ansible_tenant
    l3out: ansible_l3out
    profile: ansible_rtctrl_profile
    context: ansible_rtctrl_context
    subj_name: ansible_rtctrl_subject
    state: present
  check_mode: yes
  register: cm_add_binding

- name: Add context-to-subject binding (normal mode)
  cisco.aci.aci_route_control_match_rule_to_subject_profile:
    <<: *binding_present
  register: nm_add_binding

- name: Verify add context
  ansible.builtin.assert:
    that:
    - cm_add_binding is changed
    - nm_add_binding is changed
    - cm_add_binding.previous == nm_add_binding.previous == []
    - cm_add_binding.sent.rtctrlRsCtxPToSubjP.attributes.tnRtctrlSubjPName == nm_add_binding.sent.rtctrlRsCtxPToSubjP.attributes.tnRtctrlSubjPName == 'ansible_rtctrl_subject'

- name: Add context binding, check if idempotency works
  cisco.aci.aci_route_control_match_rule_to_subject_profile:
    <<: *binding_present
  register: add_binding_again

- name: Verify add_binding_again
  ansible.builtin.assert:
    that:
    - add_binding_again is not changed

- name: Add second context-to-subject binding
  cisco.aci.aci_route_control_match_rule_to_subject_profile:
    <<: *aci_info
    tenant: ansible_tenant
    l3out: ansible_l3out
    profile: ansible_rtctrl_profile
    context: ansible_rtctrl_context2
    subj_name: ansible_rtctrl_subject2
    state: present

# QUERY ALL BINDINGS
- name: Query all bindings
  cisco.aci.aci_route_control_match_rule_to_subject_profile:
    <<: *aci_info
    state: query
  register: query_all_bindings

- name: Verify query_all_bindings
  ansible.builtin.assert:
    that:
    - query_all_bindings is not changed
    - query_all_bindings.current | length > 1

# QUERY A SPECIFIC BINDING
- name: Query a specific binding
  cisco.aci.aci_route_control_match_rule_to_subject_profile:
    <<: *binding_present
    state: query
  register: query_spec_binding

- name: Verify query_spec_binding
  ansible.builtin.assert:
    that:
    - query_spec_binding is not changed
    - query_spec_binding.current | length == 1
    - query_spec_binding.current.0.rtctrlRsCtxPToSubjP.attributes.tnRtctrlSubjPName == 'ansible_rtctrl_subject'


# REMOVE BINDING
- name: Remove binding
  cisco.aci.aci_route_control_match_rule_to_subject_profile:
    <<: *binding_present
    state: absent
  register: remove_binding

- name: Verify remove_binding
  ansible.builtin.assert:
    that:
    - remove_binding is changed
    - remove_binding.current == []

# REMOVE BINDING AGAIN TO TEST IDEMPOTENCE
- name: Remove binding again
  cisco.aci.aci_route_control_match_rule_to_subject_profile:
    <<: *binding_present
    state: absent
  register: remove_binding_again

- name: Verify remove_binding_again
  ansible.builtin.assert:
    that:
    - remove_binding_again is not changed
    - remove_binding_again.current == []

# CLEAN UP
- name: Remove test tenant
  cisco.aci.aci_tenant:
    <<: *tenant_absent

- name: Remove test domain
  cisco.aci.aci_domain:
    <<: *domain_present
    state: absent
