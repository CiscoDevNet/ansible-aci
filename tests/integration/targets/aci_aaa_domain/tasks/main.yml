# Test code for the ACI modules
# Copyright: (c) 2022, Sabari Jaganathan (@sajagana)

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI APIC host, ACI username and ACI password
  fail:
    msg: 'Please define the following variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

# SET VARS
- name: Set vars
  set_fact:
    aci_info: &aci_info
      host: '{{ aci_hostname }}'
      username: '{{ aci_username }}'
      password: '{{ aci_password }}'
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: '{{ aci_output_level | default("info") }}'

- name: Query system information
  cisco.aci.aci_system:
    <<: *aci_info
    id: 1
    state: query
  register: version

- name: Ensure anstest_sec_domain does not exists
  cisco.aci.aci_aaa_domain: &sec_domain_absent
    <<: *aci_info
    name: anstest_sec_domain
    description: "Anstest Sec Domain Descr"
    state: absent

- name: Add anstest_sec_domain security domain with check mode
  cisco.aci.aci_aaa_domain: &cm_sec_domain_present
    <<: *sec_domain_absent
    state: present
  check_mode: true
  register: cm_sec_domain_present

- name: Assertions check for add anstest_sec_domain security domain with check mode
  assert:
    that:
      - cm_sec_domain_present is changed
      - cm_sec_domain_present.current | length == 0
      - cm_sec_domain_present.previous | length == 0
      - cm_sec_domain_present.sent.aaaDomain.attributes.name == 'anstest_sec_domain'

- name: Add anstest_sec_domain security domain with normal mode
  cisco.aci.aci_aaa_domain: &nm_sec_domain_present
    <<: *cm_sec_domain_present
  register: nm_sec_domain_present

- name: Assertions check for add anstest_sec_domain security domain with normal mode
  assert:
    that:
      - nm_sec_domain_present is changed
      - nm_sec_domain_present.current | length == 1
      - nm_sec_domain_present.previous | length == 0
      - nm_sec_domain_present.current.0.aaaDomain.attributes.name == 'anstest_sec_domain'

- name: Assertions check for nm_sec_domain_present in v5.0+
  assert:
    that:
      - nm_sec_domain_present.current.0.aaaDomain.attributes.restrictedRbacDomain == 'no'
  when: version.current.0.topSystem.attributes.version is version('5', '>=')

- name: Add anstest_sec_domain security domain with normal mode - idempotency works
  cisco.aci.aci_aaa_domain:
    <<: *nm_sec_domain_present
  register: idempotency_sec_domain_present

- name: Idempotency assertions check for add anstest_sec_domain security domain with normal mode
  assert:
    that:
      - idempotency_sec_domain_present is not changed
      - idempotency_sec_domain_present.current | length == 1
      - idempotency_sec_domain_present.previous | length == 1
      - idempotency_sec_domain_present.current.0.aaaDomain.attributes.name == 'anstest_sec_domain'
      - idempotency_sec_domain_present.previous.0.aaaDomain.attributes.name == 'anstest_sec_domain'

- name: Assertions check for idempotency_sec_domain_present in v5.0+
  assert:
    that:
      - idempotency_sec_domain_present.current.0.aaaDomain.attributes.restrictedRbacDomain == 'no'
      - idempotency_sec_domain_present.previous.0.aaaDomain.attributes.restrictedRbacDomain == 'no'
  when: version.current.0.topSystem.attributes.version is version('5', '>=')

- name: Execute tasks only for ACI v5+
  when: version.current.0.topSystem.attributes.version is version('5', '>=')
  block:  # block specifies execution of tasks within, based on conditions
  - name: Update anstest_sec_domain security domain restricted_rbac_domain state to true
    cisco.aci.aci_aaa_domain:
      <<: *nm_sec_domain_present
      restricted_rbac_domain: true
    register: update_sec_domain_present_true

  - name: Assertions check for update anstest_sec_domain security domain restricted_rbac_domain state to true
    assert:
      that:
        - update_sec_domain_present_true is changed
        - update_sec_domain_present_true.current | length == 1
        - update_sec_domain_present_true.previous | length == 1
        - update_sec_domain_present_true.current.0.aaaDomain.attributes.name == 'anstest_sec_domain'
        - update_sec_domain_present_true.current.0.aaaDomain.attributes.restrictedRbacDomain == 'yes'
        - update_sec_domain_present_true.sent.aaaDomain.attributes.restrictedRbacDomain == 'yes'
        - update_sec_domain_present_true.previous.0.aaaDomain.attributes.restrictedRbacDomain == 'no'

  - name: Update anstest_sec_domain security domain restricted_rbac_domain state to false
    cisco.aci.aci_aaa_domain:
      <<: *nm_sec_domain_present
      restricted_rbac_domain: false
    register: update_sec_domain_present_false

  - name: Assertions check for update anstest_sec_domain security domain restricted_rbac_domain state to false
    assert:
      that:
        - update_sec_domain_present_false is changed
        - update_sec_domain_present_false.current | length == 1
        - update_sec_domain_present_false.previous | length == 1
        - update_sec_domain_present_false.current.0.aaaDomain.attributes.name == 'anstest_sec_domain'
        - update_sec_domain_present_false.current.0.aaaDomain.attributes.restrictedRbacDomain == 'no'
        - update_sec_domain_present_false.sent.aaaDomain.attributes.restrictedRbacDomain == 'no'
        - update_sec_domain_present_false.previous.0.aaaDomain.attributes.restrictedRbacDomain == 'yes'

- name: Query a security domain with name
  cisco.aci.aci_aaa_domain:
    <<: *aci_info
    name: anstest_sec_domain
    state: query
  register: query_sec_domain_with_name

- name: Assertions check for query a security domain with name
  assert:
    that:
      - query_sec_domain_with_name is not changed
      - query_sec_domain_with_name.current | length == 1
      - query_sec_domain_with_name.current.0.aaaDomain.attributes.name == 'anstest_sec_domain'
      - query_sec_domain_with_name.current.0.aaaDomain.attributes.descr == 'Anstest Sec Domain Descr'

- name: Assertions check for query_sec_domain_with_name in v5.0+
  assert:
    that:
      - query_sec_domain_with_name.current.0.aaaDomain.attributes.restrictedRbacDomain == 'no'
  when: version.current.0.topSystem.attributes.version is version('5', '>=')

- name: Query all security domains
  cisco.aci.aci_aaa_domain:
    <<: *aci_info
    state: query
  register: query_all_sec_domains

- name: Assertions check for query all security domains
  assert:
    that:
      - query_all_sec_domains is not changed
      - query_all_sec_domains.current | length >= 1

- name: Remove anstest_sec_domain security domain with check mode
  cisco.aci.aci_aaa_domain: &cm_sec_domain_absent
    <<: *nm_sec_domain_present
    state: absent
  check_mode: true
  register: cm_sec_domain_absent

- name: Assertions check for remove anstest_sec_domain security domain with check mode
  assert:
    that:
      - cm_sec_domain_absent is changed
      - cm_sec_domain_absent.current | length == 1
      - cm_sec_domain_absent.previous | length == 1
      - cm_sec_domain_absent.current.0.aaaDomain.attributes.name == 'anstest_sec_domain'
      - cm_sec_domain_absent.previous.0.aaaDomain.attributes.name == 'anstest_sec_domain'

- name: Assertions check for cm_sec_domain_absent in v5.0+
  assert:
    that:
      - cm_sec_domain_absent.current.0.aaaDomain.attributes.restrictedRbacDomain == 'no'
      - cm_sec_domain_absent.previous.0.aaaDomain.attributes.restrictedRbacDomain == 'no'
  when: version.current.0.topSystem.attributes.version is version('5', '>=')

- name: Remove anstest_sec_domain security domain with normal mode
  cisco.aci.aci_aaa_domain: &nm_sec_domain_absent
    <<: *cm_sec_domain_absent
  register: nm_sec_domain_absent

- name: Assertions check for remove anstest_sec_domain security domain with normal mode
  assert:
    that:
      - nm_sec_domain_absent is changed
      - nm_sec_domain_absent.current | length == 0
      - nm_sec_domain_absent.previous | length == 1
      - nm_sec_domain_absent.previous.0.aaaDomain.attributes.name == 'anstest_sec_domain'

- name: Assertions check for nm_sec_domain_absent in v5.0+
  assert:
    that:
      - nm_sec_domain_absent.previous.0.aaaDomain.attributes.restrictedRbacDomain == 'no'
  when: version.current.0.topSystem.attributes.version is version('5', '>=')

- name: Remove anstest_sec_domain security domain with normal mode - idempotency works
  cisco.aci.aci_aaa_domain:
    <<: *nm_sec_domain_absent
  register: idempotency_sec_domain_absent

- name: Idempotency assertions check for remove anstest_sec_domain security domain with normal mode
  assert:
    that:
      - idempotency_sec_domain_absent is not changed
      - idempotency_sec_domain_absent.current | length == 0
      - idempotency_sec_domain_absent.previous | length == 0

- name: Query a removed security domain with name
  cisco.aci.aci_aaa_domain:
    <<: *aci_info
    name: anstest_sec_domain
    state: query
  register: removed_sec_domain_with_name

- name: Assertions check for query a removed security domain with name
  assert:
    that:
      - removed_sec_domain_with_name is not changed
      - removed_sec_domain_with_name.current | length == 0
