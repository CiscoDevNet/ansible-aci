# Test code for the ACI modules
# Copyright: (c) 2023, Gaspard Micol (@gmicol) <gmicol@cisco.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI APIC host, ACI username and ACI password
  ansible.builtin.fail:
    msg: 'Please define the following variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

- name: Set vars
  ansible.builtin.set_fact:
    aci_info: &aci_info
      host: "{{ aci_hostname }}"
      username: "{{ aci_username }}"
      password: "{{ aci_password }}"
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: debug

# CLEAN ENVIRONMENT
- name: Remove the ansible_tenant
  cisco.aci.aci_tenant: &aci_tenant_absent
    <<: *aci_info 
    tenant: ansible_tenant
    state: absent

- name: Verify Cloud and Non-Cloud Sites in use.
  ansible.builtin.include_tasks: ../../../../../../integration/targets/aci_cloud_provider/tasks/main.yml

- name: Execute tasks only for non-cloud sites
  when: query_cloud.current == []  # This condition will execute only non-cloud sites
  block:  # block specifies execution of tasks within, based on conditions
  - name: Add a new tenant
    cisco.aci.aci_tenant: &aci_tenant_present
      <<: *aci_info
      tenant: ansible_tenant
      description: Ansible tenant
      state: present
    
  - name: Add new Domain
    cisco.aci.aci_domain: &aci_domain_present
      <<: *aci_info
      domain: ansible_dom
      domain_type: l3dom
      state: present

  - name: Addd a new VRF
    cisco.aci.aci_vrf: &aci_vrf_present
      <<: *aci_tenant_present
      vrf: ansible_vrf
      description: Ansible VRF

  - name: Add a new L3Out
    cisco.aci.aci_l3out: &aci_l3out_present
      <<: *aci_vrf_present
      l3out: ansible_l3out
      domain: ansible_dom
      route_control: export
      l3protocol: eigrp
      asn: 1
      description: Ansible L3Out

  - name: Add a new L3Out logical node profile
    cisco.aci.aci_l3out_logical_node_profile: &aci_l3out_node_profile_present
      <<: *aci_tenant_present
      l3out: ansible_l3out
      node_profile: ansible_l3out_node_profile
      description: Ansible L3Out Logical Node Profile

  - name: Add a new L3Out logical interface profile
    cisco.aci.aci_l3out_logical_interface_profile: &aci_l3out_interface_profile_present
      <<: *aci_l3out_node_profile_present
      interface_profile: ansible_l3out_interface_profile
      description: First Ansible L3Out Logical Interface Profile

  - name: Add a new eigrp interface policy
    cisco.aci.aci_interface_policy_eigrp:
      <<: *aci_tenant_present
      eigrp: ansible_eigrp_interface_policy
      description: Ansible EIGRP Interface Policy
      state: present
  
  - name: Add a new keychain policy
    cisco.aci.aci_keychain_policy:
      <<: *aci_tenant_present
      keychain_policy: ansible_keychain_policy
      description: Ansible Keychain Policy
      state: present
  
  - name: Add eigrp policy to first interface profile (check mode)
    cisco.aci.aci_l3out_eigrp_interface_profile: &aci_l3out_eigrp_interface_profile_present
      <<: *aci_l3out_interface_profile_present
      eigrp_policy: ansible_eigrp_interface_policy
      eigrp_keychain_policy: ansible_keychain_policy
      description: First Ansible EIGRP Interface Profile
    check_mode: true
    register: cm_add_l3out_eigrp_interface_profile

  - name: Add eigrp policy to first interface profile (normal mode)
    cisco.aci.aci_l3out_eigrp_interface_profile:
      <<: *aci_l3out_eigrp_interface_profile_present
    register: nm_add_l3out_eigrp_interface_profile

  - name: Add eigrp interface profile again - testing idempotency
    cisco.aci.aci_l3out_eigrp_interface_profile:
      <<: *aci_l3out_eigrp_interface_profile_present
    register: nm_add_l3out_eigrp_interface_profile_idempotency

  - name: Create a second L3Out logical interface profile
    cisco.aci.aci_l3out_logical_interface_profile: &aci_l3out_interface_profile_present_2
      <<: *aci_l3out_node_profile_present
      interface_profile: ansible_l3out_interface_profile_2
      description: Second Ansible L3Out Logical Interface Profile

  - name: Add eigrp policy to second interface profile (normal_mode)
    cisco.aci.aci_l3out_eigrp_interface_profile:
      <<: *aci_l3out_interface_profile_present_2
      eigrp_policy: ansible_eigrp_interface_policy
      description: Second Ansible EIGRP Interface Profile
      state: present
    register: nm_add_l3out_eigrp_interface_profile_2

  - name: Asserts for eigrp interface policies creation tasks
    ansible.builtin.assert:
      that:
        - cm_add_l3out_eigrp_interface_profile is changed
        - cm_add_l3out_eigrp_interface_profile.previous == []
        - cm_add_l3out_eigrp_interface_profile.current == []
        - nm_add_l3out_eigrp_interface_profile is changed
        - nm_add_l3out_eigrp_interface_profile.current.0.eigrpIfP.children.0.eigrpAuthIfP.children.0.eigrpRsKeyChainPol.attributes.tnFvKeyChainPolName == "ansible_keychain_policy"
        - nm_add_l3out_eigrp_interface_profile.current.0.eigrpIfP.children.1.eigrpRsIfPol.attributes.tnEigrpIfPolName == "ansible_eigrp_interface_policy"
        - nm_add_l3out_eigrp_interface_profile_idempotency is not changed
        - nm_add_l3out_eigrp_interface_profile_2 is changed
        - nm_add_l3out_eigrp_interface_profile_2.previous == []
        - nm_add_l3out_eigrp_interface_profile_2.current.0.eigrpIfP.children.0.eigrpRsIfPol.attributes.tnEigrpIfPolName == "ansible_eigrp_interface_policy"

  - name: Query all eigrp interface profiles
    cisco.aci.aci_l3out_eigrp_interface_profile:
      <<: *aci_info
      state: query
    register: query_all_l3out_eigrp_interface_profile

  - name: Query first eigrp interface profile
    cisco.aci.aci_l3out_eigrp_interface_profile:
      <<: *aci_l3out_eigrp_interface_profile_present
      state: query
    register: query_ansible_l3out_eigrp_interface_profile_1

  - name: Asserts query tasks
    ansible.builtin.assert:
      that:
        - query_all_l3out_eigrp_interface_profile is not changed
        - query_all_l3out_eigrp_interface_profile.current|length >= 2
        - query_ansible_l3out_eigrp_interface_profile_1 is not changed
        - query_ansible_l3out_eigrp_interface_profile_1.current.0.eigrpIfP.children.0.eigrpAuthIfP.children.0.eigrpRsKeyChainPol.attributes.tDn == "uni/tn-ansible_tenant/keychainp-ansible_keychain_policy"
        - query_ansible_l3out_eigrp_interface_profile_1.current.0.eigrpIfP.children.0.eigrpAuthIfP.children.0.eigrpRsKeyChainPol.attributes.state == "formed"
        - query_ansible_l3out_eigrp_interface_profile_1.current.0.eigrpIfP.children.1.eigrpRsIfPol.attributes.tDn == "uni/tn-ansible_tenant/eigrpIfPol-ansible_eigrp_interface_policy"
        - query_ansible_l3out_eigrp_interface_profile_1.current.0.eigrpIfP.children.1.eigrpRsIfPol.attributes.state == "formed"

  - name: Remove authentification from first eigrp interface profile (check mode)
    cisco.aci.aci_l3out_eigrp_interface_profile: &aci_l3out_eigrp_interface_profile_remove_auth
      <<: *aci_l3out_eigrp_interface_profile_present
      eigrp_keychain_policy: ""
    check_mode: true
    register: cm_remove_auth_l3out_eigrp_interface_profile

  - name: Remove authentification from first eigrp interface profile (normal mode)
    cisco.aci.aci_l3out_eigrp_interface_profile:
      <<: *aci_l3out_eigrp_interface_profile_remove_auth
    register: nm_remove_auth_l3out_eigrp_interface_profile

  - name: Remove authentification from first eigrp interface profile again - testing idempotency
    cisco.aci.aci_l3out_eigrp_interface_profile:
      <<: *aci_l3out_eigrp_interface_profile_remove_auth
    register: nm_remove_auth_eigrp_interface_profile_idempotency

  - name: Asserts authentification removal tasks
    ansible.builtin.assert:
      that:
        - cm_remove_auth_l3out_eigrp_interface_profile is changed
        - cm_remove_auth_l3out_eigrp_interface_profile.current == cm_remove_auth_l3out_eigrp_interface_profile.previous
        - nm_remove_auth_l3out_eigrp_interface_profile is changed
        - nm_remove_auth_l3out_eigrp_interface_profile.current.0.eigrpIfP.children|length == 1
        - nm_remove_auth_eigrp_interface_profile_idempotency is not changed

  - name: Remove eigrp interface profile (check_mode)
    cisco.aci.aci_l3out_eigrp_interface_profile: &l3out_eigrp_interface_profile_absent
      <<: *aci_l3out_eigrp_interface_profile_present
      state: absent
    check_mode: true
    register: cm_remove_l3out_eigrp_interface_profile

  - name: Remove eigrp interface profile (normal_mode)
    cisco.aci.aci_l3out_eigrp_interface_profile:
      <<: *l3out_eigrp_interface_profile_absent
    register: nm_remove_l3out_eigrp_interface_profile

  - name: Remove eigrp interface profile - testing idempotency
    cisco.aci.aci_l3out_eigrp_interface_profile:
      <<: *l3out_eigrp_interface_profile_absent
    register: nm_remove_l3out_eigrp_interface_profile_idempotency

  - name: Asserts deletion tasks
    ansible.builtin.assert:
      that:
        - cm_remove_l3out_eigrp_interface_profile is changed
        - cm_remove_l3out_eigrp_interface_profile.proposed == {}
        - nm_remove_l3out_eigrp_interface_profile is changed
        - nm_remove_l3out_eigrp_interface_profile.previous != []
        - nm_remove_l3out_eigrp_interface_profile.method == "DELETE"
        - nm_remove_l3out_eigrp_interface_profile_idempotency is not changed
        - nm_remove_l3out_eigrp_interface_profile_idempotency.previous == []

  - name: Remove the ansible_tenant - cleanup before ending tests
    cisco.aci.aci_tenant:
      <<: *aci_tenant_present
      state: absent

  - name: Remove the ansible_dom - cleanup before ending tests
    cisco.aci.aci_domain:
      <<: *aci_domain_present
      state: absent
