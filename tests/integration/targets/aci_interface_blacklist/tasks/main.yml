# Test code for the ACI modules
# Copyright: (c) 2017, Jacob McGill (@jmcgill298)

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI APIC host, ACI username and ACI password
  fail:
    msg: 'Please define the following variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

- name: Set vars
  set_fact:
    aci_info: &aci_info
      host: "{{ aci_hostname }}"
      username: "{{ aci_username }}"
      password: "{{ aci_password }}"
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: debug
    test_vars_leaf: &test_vars_leaf
      pod_id: 1
      node_id: 1101
      interface: 1/33
    test_vars_spine: &test_vars_spine
      pod_id: 1
      node_id: 1201
      interface: 1/33
    test_vars_fex: &test_vars_fex
      pod_id: 1
      node_id: 1101
      interface: 1/33
      fex_id: 123

- name: Query system information
  aci_system:
    <<: *aci_info
    id: 1
    state: query
  register: version

- name: Verify Cloud and Non-Cloud Sites in use.
  include_tasks: ../../../../../../integration/targets/aci_cloud_provider/tasks/main.yml

- name: Execute tasks only for non-cloud sites
  when: query_cloud.current == []  # This condition will execute only non-cloud sites
  block:  # block specifies execution of tasks within, based on conditions

  - name: Query blacklisted interfaces
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      state: query
    register: enable_and_clear

  - name: set regex
    set_fact: 
      regexp: '(topology/pod-)(\d)(/paths-)(\d*)(/pathep-\[eth)(.*)(])'

  - name: Save Target DNs
    set_fact: 
      tdn: "{{ item.fabricRsOosPath.attributes.tDn }}"
    loop: "{{ enable_and_clear.current }}"
    register: enabled_tdn

  - name: Enable interfaces that were blacklisted
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      pod_id: "{{ item.ansible_facts.tdn | regex_search(regexp, '\\2')  | first }}"
      node_id: "{{ item.ansible_facts.tdn | regex_search(regexp, '\\4') | first }}"
      interface: "{{ item.ansible_facts.tdn | regex_search(regexp, '\\6') | first }}"
      state: absent
    loop: "{{ enabled_tdn.results }}"

  - name: Ensure Interfaces are absent - Clean up test environment
    cisco.aci.aci_interface_config:
      <<: *aci_info
      node: "{{ item.ansible_facts.tdn | regex_search(regexp, '\\4') | first }}"
      interface: "{{ item.ansible_facts.tdn | regex_search(regexp, '\\6') | first }}"
      state: absent
    loop: "{{ enabled_tdn.results }}"

  - name: Spine - Clean test environment with enabled interface
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_spine
      state: absent

  - name: Fex - Clean test environment with enabled interface
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_fex
      state: absent

  - name: Leaf - Clean test environment with enabled interface
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_leaf
      state: absent

  - name: Leaf - Query outofsvc_interface_blacklist
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_leaf
      state: query
    register: query_leaf_int_enabled

  - name: Leaf - Verify that outofsvc_interface_blacklist is not present
    assert:
      that:
      - query_leaf_int_enabled.current.0.fabricOOServicePol.children is not defined

  - name: Leaf - Disable interface in check mode
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_leaf
      state: present
    check_mode: true
    register: disable_leaf_int_check

  - name: Leaf - Verify that outofsvc_interface_blacklist is not created after check mode
    assert:
      that:
      - disable_leaf_int_check.current.0.fabricOOServicePol.children is not defined

  - name: Leaf - Disable interface
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_leaf
      state: present
    register: disable_leaf_int

  - name: Leaf - Verify that outofsvc_interface_blacklist is created
    assert:
      that:
      - disable_leaf_int.current|length == 1
      - disable_leaf_int.current.0.fabricRsOosPath.attributes.tDn == "topology/pod-1/paths-1101/pathep-[eth1/33]"
      - disable_leaf_int.current.0.fabricRsOosPath.attributes.lc == "blacklist"
      - disable_leaf_int.current.0.fabricRsOosPath.attributes.annotation == 'orchestrator:ansible'

  - name: Leaf - Disable interface again
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_leaf
      state: present
    register: disable_leaf_int_again

  - name: Leaf - Verify that outofsvc_interface_blacklist remains created after disabling again
    assert:
      that:
      - disable_leaf_int_again is not changed
      - disable_leaf_int_again.current|length == 1
      - disable_leaf_int_again.current.0.fabricRsOosPath.attributes.tDn == "topology/pod-1/paths-1101/pathep-[eth1/33]"
      - disable_leaf_int_again.current.0.fabricRsOosPath.attributes.lc == "blacklist"

  - name: Leaf - Query interface
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_leaf
      state: query
    register: query_leaf_int_disabled

  - name: Leaf - Verify that outofsvc_interface_blacklist remains created after query
    assert:
      that:
      - query_leaf_int_disabled is not changed
      - query_leaf_int_disabled.current|length == 1
      - query_leaf_int_disabled.current.0.fabricOOServicePol.children.0.fabricRsOosPath.attributes.tDn == "topology/pod-1/paths-1101/pathep-[eth1/33]"
      - query_leaf_int_disabled.current.0.fabricOOServicePol.children.0.fabricRsOosPath.attributes.lc == "blacklist"

  - name: Leaf - Enable interface in check mode
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_leaf
      state: absent
    check_mode: true
    register: enable_leaf_int_check

  - name: Leaf - Verify that outofsvc_interface_blacklist remains created after check mode
    assert:
      that:
      - enable_leaf_int_check.current|length == 1
      - enable_leaf_int_check.current.0.fabricRsOosPath.attributes.tDn == "topology/pod-1/paths-1101/pathep-[eth1/33]"
      - enable_leaf_int_check.current.0.fabricRsOosPath.attributes.lc == "blacklist"

  - name: Leaf - Enable interface
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_leaf
      state: absent
    register: enable_leaf_int

  - name: Leaf - Verify that outofsvc_interface_blacklist is deleted
    assert:
      that:
      - enable_leaf_int.current.0.fabricOOServicePol.children is not defined

  - name: Leaf - Enable interface again
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_leaf
      state: absent
    register: enable_leaf_int_again

  - name: Leaf - Verify that outofsvc_interface_blacklist remains deleted after enabling again
    assert:
      that:
      - enable_leaf_int_again is not changed
      - enable_leaf_int_again.current.0.fabricOOServicePol.children is not defined

  - name: Spine - Clean test environment with enabled interface
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_spine
      state: absent

  - name: Spine - Query outofsvc_interface_blacklist
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_spine
      state: query
    register: query_spine_int_enabled

  - name: Spine - Verify that outofsvc_interface_blacklist is not present
    assert:
      that:
      - query_spine_int_enabled.current.0.fabricOOServicePol.children is not defined

  - name: Spine - Disable interface in check mode
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_spine
      state: present
    check_mode: true
    register: disable_spine_int_check

  - name: Spine - Verify that outofsvc_interface_blacklist is not created after check mode
    assert:
      that:
      - disable_spine_int_check.current.0.fabricOOServicePol.children is not defined

  - name: Spine - Disable interface
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_spine
      state: present
    register: disable_spine_int

  - name: Spine - Verify that outofsvc_interface_blacklist is created
    assert:
      that:
      - disable_spine_int.current|length == 1
      - disable_spine_int.current.0.fabricRsOosPath.attributes.tDn == "topology/pod-1/paths-1201/pathep-[eth1/33]"
      - disable_spine_int.current.0.fabricRsOosPath.attributes.lc == "blacklist"

  - name: Spine - Disable interface again
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_spine
      state: present
    register: disable_spine_int_again

  - name: Spine - Verify that outofsvc_interface_blacklist remains created after disabling again
    assert:
      that:
      - disable_spine_int_again is not changed
      - disable_spine_int_again.current|length == 1
      - disable_spine_int_again.current.0.fabricRsOosPath.attributes.tDn == "topology/pod-1/paths-1201/pathep-[eth1/33]"
      - disable_spine_int_again.current.0.fabricRsOosPath.attributes.lc == "blacklist"

  - name: Spine - Query interface
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_spine
      state: query
    register: query_spine_int_disabled

  - name: Spine - Verify that outofsvc_interface_blacklist remains created after query
    assert:
      that:
      - query_spine_int_disabled is not changed
      - query_spine_int_disabled.current|length == 1
      - query_spine_int_disabled.current.0.fabricOOServicePol.children.0.fabricRsOosPath.attributes.tDn == "topology/pod-1/paths-1201/pathep-[eth1/33]"
      - query_spine_int_disabled.current.0.fabricOOServicePol.children.0.fabricRsOosPath.attributes.lc == "blacklist"

  - name: Spine - Enable interface in check mode
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_spine
      state: absent
    check_mode: true
    register: enable_spine_int_check

  - name: Spine - Verify that outofsvc_interface_blacklist remains created after check mode
    assert:
      that:
      - enable_spine_int_check.current|length == 1
      - enable_spine_int_check.current.0.fabricRsOosPath.attributes.tDn == "topology/pod-1/paths-1201/pathep-[eth1/33]"
      - enable_spine_int_check.current.0.fabricRsOosPath.attributes.lc == "blacklist"

  - name: Spine - Enable interface
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_spine
      state: absent
    register: enable_spine_int

  - name: Spine - Verify that outofsvc_interface_blacklist is deleted
    assert:
      that:
      - enable_spine_int.current.0.fabricOOServicePol.children is not defined

  - name: Spine - Enable interface again
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_spine
      state: absent
    register: enable_spine_int_again

  - name: Spine - Verify that outofsvc_interface_blacklist remains deleted after enabling again
    assert:
      that:
      - enable_spine_int_again is not changed
      - enable_spine_int_again.current.0.fabricOOServicePol.children is not defined

  - name: Fex - Clean test environment with enabled interface
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_fex
      state: absent

  - name: Fex - Query outofsvc_interface_blacklist
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_fex
      state: query
    register: query_fex_int_enabled

  - name: Fex - Verify that outofsvc_interface_blacklist is not present
    assert:
      that:
      - query_fex_int_enabled.current.0.fabricOOServicePol.children is not defined

  - name: Fex - Disable interface in check mode
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_fex
      state: present
    check_mode: true
    register: disable_fex_int_check

  - name: Fex - Verify that outofsvc_interface_blacklist is not created after check mode
    assert:
      that:
      - disable_fex_int_check.current.0.fabricOOServicePol.children is not defined

  - name: Fex - Disable interface
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_fex
      state: present
    register: disable_fex_int

  - name: Fex - Verify that outofsvc_interface_blacklist is created
    assert:
      that:
      - disable_fex_int.current|length == 1
      - disable_fex_int.current.0.fabricRsOosPath.attributes.tDn == "topology/pod-1/paths-1101/extpaths-123/pathep-[eth1/33]"
      - disable_fex_int.current.0.fabricRsOosPath.attributes.lc == "blacklist"

  - name: Fex - Disable interface again
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_fex
      state: present
    register: disable_fex_int_again

  - name: Fex - Verify that outofsvc_interface_blacklist remains created after disabling again
    assert:
      that:
      - disable_fex_int_again is not changed
      - disable_fex_int_again.current|length == 1
      - disable_fex_int_again.current.0.fabricRsOosPath.attributes.tDn == "topology/pod-1/paths-1101/extpaths-123/pathep-[eth1/33]"
      - disable_fex_int_again.current.0.fabricRsOosPath.attributes.lc == "blacklist"

  - name: Fex - Query interface
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_fex
      state: query
    register: query_fex_int_disabled

  - name: Fex - Verify that outofsvc_interface_blacklist remains created after query
    assert:
      that:
      - query_fex_int_disabled is not changed
      - query_fex_int_disabled.current|length == 1
      - query_fex_int_disabled.current.0.fabricOOServicePol.children.0.fabricRsOosPath.attributes.tDn == "topology/pod-1/paths-1101/extpaths-123/pathep-[eth1/33]"
      - query_fex_int_disabled.current.0.fabricOOServicePol.children.0.fabricRsOosPath.attributes.lc == "blacklist"

  - name: Fex - Enable interface in check mode
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_fex
      state: absent
    check_mode: true
    register: enable_fex_int_check

  - name: Fex - Verify that outofsvc_interface_blacklist remains created after check mode
    assert:
      that:
      - enable_fex_int_check.current|length == 1
      - enable_fex_int_check.current.0.fabricRsOosPath.attributes.tDn == "topology/pod-1/paths-1101/extpaths-123/pathep-[eth1/33]"
      - enable_fex_int_check.current.0.fabricRsOosPath.attributes.lc == "blacklist"

  - name: Fex - Enable interface
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_fex
      state: absent
    register: enable_fex_int

  - name: Fex - Verify that outofsvc_interface_blacklist is deleted
    assert:
      that:
      - enable_fex_int.current.0.fabricOOServicePol.children is not defined

  - name: Fex - Enable interface again
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_fex
      state: absent
    register: enable_fex_int_again

  - name: Fex - Verify that outofsvc_interface_blacklist remains deleted after enabling again
    assert:
      that:
      - enable_fex_int_again is not changed
      - enable_fex_int_again.current.0.fabricOOServicePol.children is not defined

  - name: Leaf - Disable interface
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_leaf
      state: present

  - name: Spine - Disable interface
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_spine
      state: present

  - name: Fex - Disable interface
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_fex
      state: present

  - name: All - Query interfaces
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      state: query
    register: query_all_disabled

  - name: All - Verify that multiple outofsvc_interface_blacklist exist
    assert:
      that:
      - query_all_disabled is not changed
      - query_all_disabled.current | length == 3

  - name: Leaf - Enable interface
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_leaf
      state: absent

  - name: Spine - Enable interface
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_spine
      state: absent

  - name: Fex - Enable interface
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      <<: *test_vars_fex
      state: absent

  - name: All - Query interfaces
    cisco.aci.aci_interface_blacklist:
      <<: *aci_info
      state: query
    register: query_all_enabled
    
  - name: All - Verify that no outofsvc_interface_blacklist exist
    assert:
      that:
      - query_all_enabled is not changed
      - query_all_enabled.current == []
