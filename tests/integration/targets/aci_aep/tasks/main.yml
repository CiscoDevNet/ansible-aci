# Test code for the ACI modules
# Copyright: (c) 2018, Dag Wieers (@dagwieers) <dag@wieers.com>
# Copyright: (c) 2024, Samita Bhattacharjee (@samiib) <samitab@cisco.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI APIC host, ACI username and ACI password
  ansible.builtin.fail:
    msg: 'Please define the following variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

- name: Verify Cloud and Non-Cloud Sites in use.
  ansible.builtin.include_tasks: ../../../../../../integration/targets/aci_cloud_provider/tasks/main.yml

- name: Execute tasks only for non-cloud sites
  when: query_cloud.current == []  # This condition will execute only non-cloud sites
  block:  # block specifies execution of tasks within, based on conditions
  # CLEAN ENVIRONMENT
  - name: Remove AEP
    cisco.aci.aci_aep: &aep_absent
      host: '{{ aci_hostname }}'
      username: '{{ aci_username }}'
      password: '{{ aci_password }}'
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: '{{ aci_output_level | default("info") }}'
      aep: '{{ item }}'
      state: absent
    loop:
      - ansible_test
      - ansible_test2
      - ansible_test3

  # ADD AEP
  - name: Add AEP (check_mode)
    cisco.aci.aci_aep: &aep_present
      host: '{{ aci_hostname }}'
      username: '{{ aci_username }}'
      password: '{{ aci_password }}'
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: '{{ aci_output_level | default("info") }}'
      aep: ansible_test
      infra_vlan: true
      state: present
    check_mode: true
    register: cm_add_aep

  - name: Add AEP (normal mode)
    cisco.aci.aci_aep: *aep_present
    register: nm_add_aep

  - name: Add another AEP (normal mode)
    cisco.aci.aci_aep:
      <<: *aep_present
      aep: ansible_test2
      infra_vlan: true
    register: nm_add_aep2

  - name: Add another AEP (normal mode)
    cisco.aci.aci_aep:
      <<: *aep_present
      aep: ansible_test3
      infra_vlan: false
    register: nm_add_aep3

  - name: Verify add_aep
    ansible.builtin.assert:
      that:
      - cm_add_aep is changed
      - nm_add_aep is changed
      - nm_add_aep.current.0.infraAttEntityP.attributes.annotation == 'orchestrator:ansible'
      - nm_add_aep2 is changed
      - nm_add_aep3 is changed
      - nm_add_aep.previous == nm_add_aep.previous == cm_add_aep.current == []
      - nm_add_aep.current[0].infraAttEntityP.attributes.dn == 'uni/infra/attentp-ansible_test'
      - nm_add_aep.current[0].infraAttEntityP.attributes.name == 'ansible_test'
      - cm_add_aep.proposed.infraAttEntityP.attributes.name == nm_add_aep.proposed.infraAttEntityP.attributes.name == cm_add_aep.sent.infraAttEntityP.attributes.name == nm_add_aep.sent.infraAttEntityP.attributes.name == 'ansible_test'
      - nm_add_aep2.current[0].infraAttEntityP.children[0].infraProvAcc.attributes.name == 'provacc'
      - nm_add_aep3.current[0].infraAttEntityP | length == 1

  - name: Change AEP infra(normal mode)
    cisco.aci.aci_aep:
      <<: *aep_present
      aep: ansible_test2
      infra_vlan: false
    register: nm_add_aep_true_to_false

  - name: Change AEP infra again(normal mode)
    cisco.aci.aci_aep:
      <<: *aep_present
      aep: ansible_test2
      infra_vlan: false
    register: nm_add_aep_true_to_false_again

  - name: Add AEP again (check_mode)
    cisco.aci.aci_aep:
      <<: *aep_present
    check_mode: true
    register: cm_add_aep_again

  - name: Add AEP again (normal mode)
    cisco.aci.aci_aep:
      <<: *aep_present
    register: nm_add_aep_again

  - name: Verify add_aep_again
    ansible.builtin.assert:
      that:
      - cm_add_aep_again is not changed
      - nm_add_aep_again is not changed
      - nm_add_aep_again.previous[0].infraAttEntityP.attributes.dn == nm_add_aep_again.previous[0].infraAttEntityP.attributes.dn == cm_add_aep_again.current[0].infraAttEntityP.attributes.dn == nm_add_aep_again.current[0].infraAttEntityP.attributes.dn == 'uni/infra/attentp-ansible_test'
      - nm_add_aep_again.previous[0].infraAttEntityP.attributes.name == nm_add_aep_again.previous[0].infraAttEntityP.attributes.name == cm_add_aep_again.current[0].infraAttEntityP.attributes.name == nm_add_aep_again.current[0].infraAttEntityP.attributes.name == 'ansible_test'
      - cm_add_aep_again.proposed.infraAttEntityP.attributes.name == nm_add_aep_again.proposed.infraAttEntityP.attributes.name == 'ansible_test'
      - cm_add_aep_again.sent == nm_add_aep_again.sent == {}
      - nm_add_aep_true_to_false.current[0].infraAttEntityP | length == 1
      - nm_add_aep_true_to_false_again.current[0].infraAttEntityP | length == 1

  # CHANGE AEP
  - name: Change description of AEP (check_mode)
    cisco.aci.aci_aep:
      <<: *aep_present
      description: Ansible test AEP
    check_mode: true
    register: cm_add_aep_descr

  - name: Change description of AEP (normal mode)
    cisco.aci.aci_aep:
      <<: *aep_present
      description: Ansible test AEP
    register: nm_add_aep_descr

  - name: Verify add_aep_descr
    ansible.builtin.assert:
      that:
      - cm_add_aep_descr is changed
      - nm_add_aep_descr is changed
      - cm_add_aep_descr.proposed.infraAttEntityP.attributes.descr == nm_add_aep_descr.proposed.infraAttEntityP.attributes.descr == 'Ansible test AEP'
      - cm_add_aep_descr.proposed.infraAttEntityP.attributes.name == nm_add_aep_descr.proposed.infraAttEntityP.attributes.name == 'ansible_test'
      - cm_add_aep_descr.sent.infraAttEntityP.attributes.descr == nm_add_aep_descr.sent.infraAttEntityP.attributes.descr == 'Ansible test AEP'
      - cm_add_aep_descr.previous.0.infraAttEntityP.attributes.dn == nm_add_aep_descr.previous.0.infraAttEntityP.attributes.dn == cm_add_aep_descr.current.0.infraAttEntityP.attributes.dn == 'uni/infra/attentp-ansible_test'
      - cm_add_aep_descr.previous.0.infraAttEntityP.attributes.name == nm_add_aep_descr.previous.0.infraAttEntityP.attributes.name == cm_add_aep_descr.current.0.infraAttEntityP.attributes.name == 'ansible_test'
      - nm_add_aep_descr.current.0.infraAttEntityP.attributes.descr == 'Ansible test AEP'
      - nm_add_aep_descr.current.0.infraAttEntityP.attributes.dn == 'uni/infra/attentp-ansible_test'
      - nm_add_aep_descr.current.0.infraAttEntityP.attributes.name == 'ansible_test'

  - name: Change description of AEP again (check_mode)
    cisco.aci.aci_aep:
      <<: *aep_present
      description: Ansible test AEP
    check_mode: true
    register: cm_add_aep_descr_again

  - name: Change description of AEP again (normal mode)
    cisco.aci.aci_aep:
      <<: *aep_present
      description: Ansible test AEP
    register: nm_add_aep_descr_again

  - name: Verify add_aep_descr_again
    ansible.builtin.assert:
      that:
      - cm_add_aep_descr_again is not changed
      - nm_add_aep_descr_again is not changed
      - cm_add_aep_descr_again.proposed.infraAttEntityP.attributes.descr == nm_add_aep_descr_again.proposed.infraAttEntityP.attributes.descr == 'Ansible test AEP'
      - cm_add_aep_descr_again.proposed.infraAttEntityP.attributes.name == nm_add_aep_descr_again.proposed.infraAttEntityP.attributes.name == 'ansible_test'
      - cm_add_aep_descr_again.sent == nm_add_aep_descr_again.sent == {}
      - cm_add_aep_descr_again.previous[0].infraAttEntityP.attributes.descr == nm_add_aep_descr_again.previous[0].infraAttEntityP.attributes.descr == cm_add_aep_descr_again.current[0].infraAttEntityP.attributes.descr == nm_add_aep_descr_again.current[0].infraAttEntityP.attributes.descr == 'Ansible test AEP'
      - cm_add_aep_descr_again.previous[0].infraAttEntityP.attributes.dn == nm_add_aep_descr_again.previous[0].infraAttEntityP.attributes.dn == cm_add_aep_descr_again.current[0].infraAttEntityP.attributes.dn == nm_add_aep_descr_again.current[0].infraAttEntityP.attributes.dn == 'uni/infra/attentp-ansible_test'
      - cm_add_aep_descr_again.previous[0].infraAttEntityP.attributes.name == nm_add_aep_descr_again.previous[0].infraAttEntityP.attributes.name == cm_add_aep_descr_again.current[0].infraAttEntityP.attributes.name == nm_add_aep_descr_again.current[0].infraAttEntityP.attributes.name == 'ansible_test'


  # ADD AEP AGAIN
  - name: Add AEP again with no description (check_mode)
    cisco.aci.aci_aep: *aep_present
    check_mode: true
    register: cm_add_aep_again_no_descr

  - name: Add AEP again with no description (normal mode)
    cisco.aci.aci_aep: *aep_present
    register: nm_add_aep_again_no_descr

  - name: Verify add_aep_again_no_descr
    ansible.builtin.assert:
      that:
      - cm_add_aep_again_no_descr is not changed
      - nm_add_aep_again_no_descr is not changed
      - cm_add_aep_again_no_descr.proposed.infraAttEntityP.attributes.name == nm_add_aep_again_no_descr.proposed.infraAttEntityP.attributes.name == 'ansible_test'
      - cm_add_aep_again_no_descr.sent == nm_add_aep_again_no_descr.sent == {}
      - cm_add_aep_again_no_descr.previous[0].infraAttEntityP.attributes.descr == nm_add_aep_again_no_descr.previous[0].infraAttEntityP.attributes.descr == cm_add_aep_again_no_descr.current[0].infraAttEntityP.attributes.descr == nm_add_aep_again_no_descr.current[0].infraAttEntityP.attributes.descr == 'Ansible test AEP'
      - cm_add_aep_again_no_descr.previous[0].infraAttEntityP.attributes.dn == nm_add_aep_again_no_descr.previous[0].infraAttEntityP.attributes.dn == cm_add_aep_again_no_descr.current[0].infraAttEntityP.attributes.dn == nm_add_aep_again_no_descr.current[0].infraAttEntityP.attributes.dn == 'uni/infra/attentp-ansible_test'
      - cm_add_aep_again_no_descr.previous[0].infraAttEntityP.attributes.name == nm_add_aep_again_no_descr.previous[0].infraAttEntityP.attributes.name == cm_add_aep_again_no_descr.current[0].infraAttEntityP.attributes.name == nm_add_aep_again_no_descr.current[0].infraAttEntityP.attributes.name == 'ansible_test'

  # TEST NO VERIFICATION
  - name: Create aep with no verification (check mode)
    cisco.aci.aci_aep: &aci_aep_no_verify
      <<: *aep_present
      aep: anstest-no-verify
      description: Ansible Test
      no_verification: true
    check_mode: true
    register: aep_present_no_verify_cm

  - name: Create aep with no verification
    cisco.aci.aci_aep:
      <<: *aci_aep_no_verify
    register: aep_present_no_verify

  - name: Create aep with no verification again
    cisco.aci.aci_aep:
      <<: *aci_aep_no_verify
    register: aep_present_no_verify_again

  - name: Update aep with no verification
    cisco.aci.aci_aep:
      <<: *aci_aep_no_verify
      description: Ansible Test No Verify
    register: update_aep_present_no_verify

  - name: Delete aep with no verification
    cisco.aci.aci_aep:
      <<: *aci_aep_no_verify
      state: absent
    register: delete_aep_present_no_verify

  - name: Delete aep with no verification again
    cisco.aci.aci_aep:
      <<: *aci_aep_no_verify
      state: absent
    register: delete_aep_present_no_verify_again

  - name: No verification asserts
    ansible.builtin.assert:
      that:
        - aep_present_no_verify_cm is changed
        - aep_present_no_verify_cm.current_verified == false
        - aep_present_no_verify_cm.current.0 == aep_present_no_verify_cm.proposed
        - aep_present_no_verify is changed
        - aep_present_no_verify.current_verified == false
        - aep_present_no_verify.current.0 == aep_present_no_verify.proposed
        - aep_present_no_verify.previous == []
        - aep_present_no_verify_again is not changed
        - aep_present_no_verify_again.current_verified == true
        - aep_present_no_verify_again.current.0.infraAttEntityP.attributes.name == "anstest-no-verify"
        - aep_present_no_verify_again.current.0.infraAttEntityP.attributes.descr == "Ansible Test"
        - aep_present_no_verify_again.previous.0.infraAttEntityP.attributes.name == "anstest-no-verify"
        - aep_present_no_verify_again.previous.0.infraAttEntityP.attributes.descr == "Ansible Test"
        - update_aep_present_no_verify is changed
        - update_aep_present_no_verify.current_verified == false
        - update_aep_present_no_verify.current.0 == update_aep_present_no_verify.proposed
        - update_aep_present_no_verify.previous.0.infraAttEntityP.attributes.name == "anstest-no-verify"
        - update_aep_present_no_verify.previous.0.infraAttEntityP.attributes.descr == "Ansible Test"
        - delete_aep_present_no_verify is changed
        - delete_aep_present_no_verify.current_verified == false
        - delete_aep_present_no_verify.current.0 == delete_aep_present_no_verify.proposed
        - delete_aep_present_no_verify.previous.0.infraAttEntityP.attributes.name == "anstest-no-verify"
        - delete_aep_present_no_verify.previous.0.infraAttEntityP.attributes.descr == "Ansible Test No Verify"
        - delete_aep_present_no_verify_again is not changed
        - delete_aep_present_no_verify_again.current_verified == true
        - delete_aep_present_no_verify_again.current == []
        - delete_aep_present_no_verify_again.previous == []
        - delete_aep_present_no_verify_again.proposed == {}

  # QUERY ALL AEPS
  - name: Query all AEPs (check_mode)
    cisco.aci.aci_aep: &aep_query
      host: '{{ aci_hostname }}'
      username: '{{ aci_username }}'
      password: '{{ aci_password }}'
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: '{{ aci_output_level | default("info") }}'
      state: query
    check_mode: true
    register: cm_query_all_aeps

  - name: Query all AEPs (normal mode)
    cisco.aci.aci_aep: *aep_query
    register: nm_query_all_aeps

  - name: Verify query_all_aeps
    ansible.builtin.assert:
      that:
      - cm_query_all_aeps is not changed
      - nm_query_all_aeps is not changed
      - cm_query_all_aeps == nm_query_all_aeps
      - nm_query_all_aeps.current|length >= 1


  # QUERY A AEP
  - name: Query our AEP
    cisco.aci.aci_aep:
      <<: *aep_query
      aep: ansible_test
    check_mode: true
    register: cm_query_aep

  - name: Query our AEP
    cisco.aci.aci_aep:
      <<: *aep_query
      aep: ansible_test
    register: nm_query_aep

  - name: Verify query_aep
    ansible.builtin.assert:
      that:
      - cm_query_aep is not changed
      - nm_query_aep is not changed
      - cm_query_aep == nm_query_aep
      - nm_query_aep.current.0.infraAttEntityP.attributes.descr == "Ansible test AEP"
      - nm_query_aep.current.0.infraAttEntityP.attributes.dn == "uni/infra/attentp-ansible_test"
      - nm_query_aep.current.0.infraAttEntityP.attributes.name == "ansible_test"


  # REMOVE AEP
  - name: Remove AEP (check_mode)
    cisco.aci.aci_aep:
      <<: *aep_absent
      aep: ansible_test
    check_mode: true
    register: cm_remove_aep

  - name: Remove AEP (normal mode)
    cisco.aci.aci_aep:
      <<: *aep_absent
      aep: ansible_test
    register: nm_remove_aep

  - name: Verify remove_aep
    ansible.builtin.assert:
      that:
      - cm_remove_aep is changed
      - nm_remove_aep is changed
      - cm_remove_aep.proposed == nm_remove_aep.proposed == {}
      - cm_remove_aep.sent == nm_remove_aep.sent == {}
      - cm_remove_aep.previous[0].infraAttEntityP.attributes.name == nm_remove_aep.previous[0].infraAttEntityP.attributes.name == cm_remove_aep.current[0].infraAttEntityP.attributes.name == 'ansible_test'
      - cm_remove_aep.previous[0].infraAttEntityP.attributes.descr == nm_remove_aep.previous[0].infraAttEntityP.attributes.descr == cm_remove_aep.current[0].infraAttEntityP.attributes.descr == 'Ansible test AEP'
      - cm_remove_aep.previous[0].infraAttEntityP.attributes.dn == nm_remove_aep.previous[0].infraAttEntityP.attributes.dn == cm_remove_aep.current[0].infraAttEntityP.attributes.dn == 'uni/infra/attentp-ansible_test'
      - nm_remove_aep.current == []

  - name: Remove AEP again (check_mode)
    cisco.aci.aci_aep:
      <<: *aep_absent
      aep: ansible_test
    check_mode: true
    register: cm_remove_aep_again

  - name: Remove AEP again (normal mode)
    cisco.aci.aci_aep:
      <<: *aep_absent
      aep: ansible_test
    register: nm_remove_aep_again

  - name: Verify remove_aep_again
    ansible.builtin.assert:
      that:
      - cm_remove_aep_again is not changed
      - nm_remove_aep_again is not changed
      - cm_remove_aep_again.proposed == nm_remove_aep_again.proposed == {}
      - cm_remove_aep_again.sent == nm_remove_aep_again.sent == {}
      - cm_remove_aep_again.previous == nm_remove_aep_again.previous == cm_remove_aep_again.current == nm_remove_aep_again.current == []


  # QUERY NON-EXISTING AEP
  - name: Query non-existing AEP (check_mode)
    cisco.aci.aci_aep:
      <<: *aep_query
      aep: ansible_test
    check_mode: true
    register: cm_query_non_aep

  - name: Query non-existing AEP (normal mode)
    cisco.aci.aci_aep:
      <<: *aep_query
      aep: ansible_test
    register: nm_query_non_aep

  - name: Verify query_non_aep
    ansible.builtin.assert:
      that:
      - cm_query_non_aep is not changed
      - nm_query_non_aep is not changed
      - cm_query_non_aep == nm_query_non_aep
      - cm_query_non_aep.current == nm_query_non_aep.current == []


  # PROVOKE ERRORS
  - name: Error when required parameter is missing
    cisco.aci.aci_aep:
      host: '{{ aci_hostname }}'
      username: '{{ aci_username }}'
      password: '{{ aci_password }}'
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: '{{ aci_output_level | default("info") }}'
      state: present
    ignore_errors: true
    register: error_on_missing_required_param

  - name: Verify error_on_missing_required_param
    ansible.builtin.assert:
      that:
      - error_on_missing_required_param is failed
      - 'error_on_missing_required_param.msg == "state is present but all of the following are missing: aep"'
