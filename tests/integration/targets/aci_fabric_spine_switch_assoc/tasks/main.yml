# Test code for the ACI modules
# Copyright: (c) 2021, Tim Cragg (@timcragg)

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI APIC host, ACI username and ACI password
  fail:
    msg: 'Please define the following variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

# GET Credentials from the inventory
- name: Set vars
  set_fact:
    aci_info: &aci_info
      host: "{{ aci_hostname }}"
      username: "{{ aci_username }}"
      password: "{{ aci_password }}"
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: debug

# CLEAN ENVIRONMENT
- name: Remove ansible_spine_switch_prf if it already exists
  aci_fabric_spine_profile:
    <<: *aci_info
    name: ansible_spine_switch_prf
    state: absent

# CREATE SPINE SWITCH POLICY
- name: Create ansible_spine_switch_prf
  aci_fabric_spine_profile:
    <<: *aci_info
    name: ansible_spine_switch_prf
    state: present

# CREATE SPINE SWITCH ASSOCIATION
- name: Create a spine switch profile association
  cisco.aci.aci_fabric_spine_switch_assoc:
    <<: *aci_info
    profile: ansible_spine_switch_prf
    name: ansible_spine_switch_assoc
    policy_group: ansible_spine_pol_grp1
    state: present
  register: add_association

- name: Verify association creation
  assert:
    that:
    - add_association.current.0.fabricSpineS.attributes.dn == "uni/fabric/spprof-ansible_spine_switch_prf/spines-ansible_spine_switch_assoc-typ-range"
    - add_association.current.0.fabricSpineS.attributes.name == "ansible_spine_switch_assoc"
    - add_association.current.0.fabricSpineS.attributes.type == "range"

- name: Verify Policy Group association
  assert:
    that:
    - add_association.current.0.fabricSpineS.children.0.fabricRsSpNodePGrp.attributes.tDn == "uni/fabric/funcprof/spnodepgrp-ansible_spine_pol_grp1"

# CREATE SPINE SWITCH ASSOCIATION AGAIN TO TEST IDEMPOTENCE
- name: Create a spine switch profile association again
  cisco.aci.aci_fabric_spine_switch_assoc:
    <<: *aci_info
    profile: ansible_spine_switch_prf
    name: ansible_spine_switch_assoc
    policy_group: ansible_spine_pol_grp1
    state: present
  register: add_association_again

- name: Verify association creation idempotence
  assert:
    that:
    - add_association_again is not changed
    - add_association_again.current.0.fabricSpineS.attributes.dn == "uni/fabric/spprof-ansible_spine_switch_prf/spines-ansible_spine_switch_assoc-typ-range"
    - add_association_again.current.0.fabricSpineS.attributes.name == "ansible_spine_switch_assoc"
    - add_association_again.current.0.fabricSpineS.attributes.type == "range"

- name: Verify Policy Group association idempotence
  assert:
    that:
    - add_association_again.current.0.fabricSpineS.children.0.fabricRsSpNodePGrp.attributes.tDn == "uni/fabric/funcprof/spnodepgrp-ansible_spine_pol_grp1"

# CLEAN UP ENVIRONMENT
- name: Remove ansible_spine_switch_prf
  aci_fabric_spine_profile:
    <<: *aci_info
    name: ansible_spine_switch_prf
    state: absent
