# Test code for the ACI modules
# Copyright: (c) 2023, Gaspard Micol (@gmicol) <gmicol@cisco.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI APIC host, ACI username and ACI password
  ansible.builtin.fail:
    msg: 'Please define the following variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

- name: Set vars
  ansible.builtin.set_fact:
    aci_info: &aci_info
      host: "{{ aci_hostname }}"
      username: "{{ aci_username }}"
      password: "{{ aci_password }}"
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: debug

# CLEAN ENVIRONMENT BEFORE TESTS
- name: Remove the ansible_tenant
  cisco.aci.aci_tenant: &aci_tenant_absent
    <<: *aci_info 
    tenant: ansible_tenant
    state: absent

- name: Verify Cloud and Non-Cloud Sites in use.
  ansible.builtin.include_tasks: ../../../../../../integration/targets/aci_cloud_provider/tasks/main.yml

- name: Execute tasks only for non-cloud sites
  when: query_cloud.current == []  # This condition will execute only non-cloud sites
  block:  # block specifies execution of tasks within, based on conditions
  - name: Add a new tenant
    cisco.aci.aci_tenant: &aci_tenant_present
      <<: *aci_info
      tenant: ansible_tenant
      description: Ansible tenant
      state: present

  - name: Add a new DHCP option policy
    cisco.aci.aci_dhcp_option_policy:
      <<: *aci_info
      tenant: ansible_tenant
      dhcp_option_policy: ansible_dhcp_option_policy_1
      description: DHCP option policy 1 for ansible_tenant tenant
      state: present
  
  # CREATE DHCP OPTION
  - name: Add a DHCP option (check_mode)
    cisco.aci.aci_dhcp_option: &aci_dhcp_option_present
      <<: *aci_info
      tenant: ansible_tenant
      dhcp_option_policy: ansible_dhcp_option_policy_1
      dhcp_option: ansible_dhcp_option_1
      id: 1
      data: 82
      state: present
    check_mode: true
    register: cm_add_dhcp_option

  - name: Add a DHCP option (normal_mode)
    cisco.aci.aci_dhcp_option:
      <<: *aci_dhcp_option_present
    register: nm_add_dhcp_option

  - name: Add the first DHCP option again - testing idempotency
    cisco.aci.aci_dhcp_option:
      <<: *aci_dhcp_option_present
    register: nm_add_dhcp_option_idempotency

  - name: Add a second DHCP option (normal_mode)
    cisco.aci.aci_dhcp_option:
      <<: *aci_info
      tenant: ansible_tenant
      dhcp_option_policy: ansible_dhcp_option_policy_1
      dhcp_option: ansible_dhcp_option_2
      id: 2
      data: 252
      state: present
    register: nm_add_dhcp_option_2

  - name: Asserts for DHCP option creation tasks
    ansible.builtin.assert:
      that:
        - cm_add_dhcp_option is changed
        - cm_add_dhcp_option.previous == []
        - cm_add_dhcp_option.current == []
        - nm_add_dhcp_option is changed
        - nm_add_dhcp_option.current.0.dhcpOption.attributes.name == "ansible_dhcp_option_1"
        - nm_add_dhcp_option.current.0.dhcpOption.attributes.id == "1"
        - nm_add_dhcp_option.current.0.dhcpOption.attributes.data == "82"
        - nm_add_dhcp_option_idempotency is not changed
        - nm_add_dhcp_option_2 is changed
        - nm_add_dhcp_option_2.previous == []
        - nm_add_dhcp_option_2.current.0.dhcpOption.attributes.name == "ansible_dhcp_option_2"
        - nm_add_dhcp_option_2.current.0.dhcpOption.attributes.id == "2"
        - nm_add_dhcp_option_2.current.0.dhcpOption.attributes.data == "252"

  # QUERY DHCP OPTION
  - name: Query all DHCP options
    cisco.aci.aci_dhcp_option:
      <<: *aci_info
      state: query
    register: query_all_dhcp_option

  - name: Query ansible_dhcp_option_1
    cisco.aci.aci_dhcp_option:
      <<: *aci_dhcp_option_present
      state: query
    register: query_ansible_dhcp_option_1

  - name: Asserts query tasks
    ansible.builtin.assert:
      that:
        - query_all_dhcp_option is not changed
        - query_all_dhcp_option.current|length >= 2
        - query_ansible_dhcp_option_1 is not changed
        - query_ansible_dhcp_option_1.current.0.dhcpOption.attributes.name == "ansible_dhcp_option_1"
        - query_ansible_dhcp_option_1.current.0.dhcpOption.attributes.id == "1"
        - query_ansible_dhcp_option_1.current.0.dhcpOption.attributes.data == "82"

  #UPDATING DHCP OPTION
  - name: Update first DHCP option (check_mode)
    cisco.aci.aci_dhcp_option: &aci_dhcp_option_update
      <<: *aci_dhcp_option_present
      id: 3
      data: 255
      state: present
    check_mode: true
    register: cm_update_dhcp_option

  - name: Update first DHCP option (normal_mode)
    cisco.aci.aci_dhcp_option:
      <<: *aci_dhcp_option_update
    register: nm_update_dhcp_option

  - name: Update first DHCP option again - testing idempotency
    cisco.aci.aci_dhcp_option:
      <<: *aci_dhcp_option_update
    register: nm_update_dhcp_option_idempotency

  - name: Asserts for DHCP option update tasks
    ansible.builtin.assert:
      that:
        - cm_update_dhcp_option is changed
        - cm_update_dhcp_option.previous == cm_update_dhcp_option.current
        - nm_update_dhcp_option is changed
        - nm_update_dhcp_option.current.0.dhcpOption.attributes.name == "ansible_dhcp_option_1"
        - nm_update_dhcp_option.current.0.dhcpOption.attributes.id == "3"
        - nm_update_dhcp_option.current.0.dhcpOption.attributes.data == "255"
        - nm_update_dhcp_option_idempotency is not changed

  # DELETE DHCP OPTION
  - name: Remove DHCP option (check_mode)
    cisco.aci.aci_dhcp_option: &dhcp_option_absent
      <<: *aci_dhcp_option_update
      state: absent
    check_mode: true
    register: cm_remove_dhcp_option

  - name: Remove DHCP option (normal_mode)
    cisco.aci.aci_dhcp_option:
      <<: *dhcp_option_absent
    register: nm_remove_dhcp_option

  - name: Remove DHCP option - testing idempotency
    cisco.aci.aci_dhcp_option:
      <<: *dhcp_option_absent
    register: nm_remove_dhcp_option_idempotency

  - name: Asserts deletion tasks
    ansible.builtin.assert:
      that:
        - cm_remove_dhcp_option is changed
        - cm_remove_dhcp_option.proposed == {}
        - nm_remove_dhcp_option is changed
        - nm_remove_dhcp_option.previous != []
        - nm_remove_dhcp_option.method == "DELETE"
        - nm_remove_dhcp_option_idempotency is not changed
        - nm_remove_dhcp_option_idempotency.previous == []

  # CLEAN ENVIRONMENT BEFORE ENDING TESTS
  - name: Remove the ansible_tenant - cleanup before ending tests
    cisco.aci.aci_tenant:
      <<: *aci_tenant_present
      state: absent
