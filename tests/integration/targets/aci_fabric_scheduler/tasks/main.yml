# Test code for the ACI modules
# Copyright: (c) 2023, Gaspard Micol (@gmicol) <gmicol@cisco.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI APIC host, ACI username and ACI password
  fail:
    msg: 'Please define the following variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

- name: Set vars
  set_fact:
    aci_info: &aci_info
      host: "{{ aci_hostname }}"
      username: "{{ aci_username }}"
      password: "{{ aci_password }}"
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: debug

- name: Verify Cloud and Non-Cloud Sites in use.
  include_tasks: ../../../../../../integration/targets/aci_cloud_provider/tasks/main.yml

- name: Execute tasks only for non-cloud sites
  when: query_cloud.current == []  # This condition will execute only non-cloud sites
  block:  # block specifies execution of tasks within, based on conditions
  # Clean Environment
  - name: Ensure first scheduler does not exist
    aci_fabric_scheduler: &aci_fabric_scheduler_absent
      <<: *aci_info
      name: anstest_scheduler_reccuring
      description: ACI scheduler test
      windowname: Recurring
      recurring: True
      concurCap: 20
      hour: 13
      minute: 30
      day: Tuesday
      state: absent

  - name: Ensure second scheduler does not exist
    aci_fabric_scheduler: &aci_fabric_scheduler_2_absent
      <<: *aci_info
      name: anstest_scheduler_oneTime
      windowname: OneTime
      recurring: False
      concurCap: 20
      date: "2023-11-20T24:00:00"
      state: absent

  - name: Create first scheduler (check_mode)
    aci_fabric_scheduler: &aci_fabric_scheduler_present
      <<: *aci_fabric_scheduler_absent
      state: present
    check_mode: true
    register: cm_add_fabric_scheduler_1

  - name: Create first scheduler (normal_mode)
    aci_fabric_scheduler:
      <<: *aci_fabric_scheduler_present
    register: nm_add_fabric_scheduler_1

  - name: Create first scheduler again - testing idempotency
    aci_fabric_scheduler:
      <<: *aci_fabric_scheduler_present
    register: idempotency_add_fabric_scheduler_1

  - name: Create second scheduler
    aci_fabric_scheduler: &aci_fabric_scheduler_2_present
      <<: *aci_fabric_scheduler_2_absent
      state: present
    register: nm_add_fabric_scheduler_2

  - name: Asserts for creation tasks
    assert:
      that:
        - cm_add_fabric_scheduler_1 is changed
        - cm_add_fabric_scheduler_1.previous == []
        - cm_add_fabric_scheduler_1.current == []
        - nm_add_fabric_scheduler_1 is changed
        - nm_add_fabric_scheduler_1.current.0.trigSchedP.attributes.name == "anstest_scheduler_reccuring"
        - nm_add_fabric_scheduler_1.current.0.trigSchedP.attributes.descr == "ACI scheduler test"
        - nm_add_fabric_scheduler_1.current.0.trigSchedP.children.0.trigRecurrWindowP.attributes.concurCap == "20"
        - nm_add_fabric_scheduler_1.current.0.trigSchedP.children.0.trigRecurrWindowP.attributes.day == "Tuesday"
        - nm_add_fabric_scheduler_1.current.0.trigSchedP.children.0.trigRecurrWindowP.attributes.hour == "13"
        - nm_add_fabric_scheduler_1.current.0.trigSchedP.children.0.trigRecurrWindowP.attributes.minute == "30"
        - idempotency_add_fabric_scheduler_1 is not changed
        - nm_add_fabric_scheduler_2 is changed
        - nm_add_fabric_scheduler_2.current.0.trigSchedP.attributes.name == "anstest_scheduler_oneTime"
        - nm_add_fabric_scheduler_2.current.0.trigSchedP.children.0.trigAbsWindowP.attributes.concurCap == "20"
        - nm_add_fabric_scheduler_2.current.0.trigSchedP.children.0.trigAbsWindowP.attributes.date == "2023-11-21T00:00:00.000+00:00"

  - name: Query all scheduler
    aci_fabric_scheduler:
      <<: *aci_info
      state: query
    register: query_all_fabric_scheduler

  - name: Query first scheduler
    aci_fabric_scheduler:
      <<: *aci_fabric_scheduler_present
      state: query
    register: query_first_fabric_scheduler

  - name: Asserts for query tasks
    assert:
      that:
        - query_all_fabric_scheduler is not changed
        - query_all_fabric_scheduler.current | length >= 2
        - '"trigAbsWindowP,trigRecurrWindowP" in query_all_fabric_scheduler.filter_string'
        - '"class/trigSchedP.json" in query_all_fabric_scheduler.url'
        - query_first_fabric_scheduler is not changed
        - query_first_fabric_scheduler.current.0.trigSchedP.attributes.name == "anstest_scheduler_reccuring"
        - query_first_fabric_scheduler.current.0.trigSchedP.attributes.descr == "ACI scheduler test"
        - query_first_fabric_scheduler.current.0.trigSchedP.children.0.trigRecurrWindowP.attributes.concurCap == "20"
        - query_first_fabric_scheduler.current.0.trigSchedP.children.0.trigRecurrWindowP.attributes.day == "Tuesday"
        - query_first_fabric_scheduler.current.0.trigSchedP.children.0.trigRecurrWindowP.attributes.hour == "13"
        - query_first_fabric_scheduler.current.0.trigSchedP.children.0.trigRecurrWindowP.attributes.minute == "30"

  - name: Delete first scheduler (check_mode)
    aci_fabric_scheduler:
      <<: *aci_fabric_scheduler_present
      state: absent
    check_mode: true
    register: cm_delete_fabric_scheduler_1

  - name: Delete first scheduler (normal_mode)
    aci_fabric_scheduler:
      <<: *aci_fabric_scheduler_present
      state: absent
    register: nm_delete_fabric_scheduler_1

  - name: Delete first scheduler again - testing idempotency
    aci_fabric_scheduler:
      <<: *aci_fabric_scheduler_present
      state: absent
    register: idempotency_delete_maintenance_group_1

  - name: Delete second scheduler (normal_mode)
    aci_fabric_scheduler:
      <<: *aci_fabric_scheduler_2_present
      state: absent
    register: nm_delete_fabric_scheduler_2

  - name: Asserts for deletion tasks
    assert:
      that:
        - cm_delete_fabric_scheduler_1 is changed
        - cm_delete_fabric_scheduler_1.proposed == {}
        - nm_delete_fabric_scheduler_1 is changed
        - nm_delete_fabric_scheduler_1.previous != []
        - nm_delete_fabric_scheduler_1.current == []
        - idempotency_delete_maintenance_group_1 is not changed
        - idempotency_delete_maintenance_group_1.previous == []
        - nm_delete_fabric_scheduler_2 is changed
        - nm_delete_fabric_scheduler_2.previous != []
        - nm_delete_fabric_scheduler_2.current == []
