# Author: Marcel Zehnder (@maercu)
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

# SET VARS
- name: Set vars
  set_fact:
    aci_info: &aci_info
      host: '{{ aci_hostname }}'
      username: '{{ aci_username }}'
      password: '{{ aci_password }}'
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: '{{ aci_output_level | default("info") }}'

# CLEAN ENVIRONMENT
- name: Remove test tenant before we kickoff
  cisco.aci.aci_tenant: &tenant_absent
    <<: *aci_info
    tenant: ansible_test
    state: absent

- name: Verify Cloud and Non-Cloud Sites in use.
  include_tasks: ../../../../../../integration/targets/aci_cloud_provider/tasks/main.yml

- name: Execute tasks only for non-cloud sites
  when: query_cloud.current == []  # This condition will execute only non-cloud sites
  block:  # block specifies execution of tasks within, based on conditions
  # SETUP ENVIRONMENT
  - name: Create domain
    cisco.aci.aci_domain: &domain_present
      <<: *aci_info
      domain: l3outtest
      domain_type: l3dom
      state: present

  - name: Create tenant
    cisco.aci.aci_tenant: &tenant_present
      <<: *tenant_absent
      state: present

  - name: Configure VRF
    cisco.aci.aci_vrf: &vrf_present
      <<: *tenant_present
      vrf: l3outtest

  - name: Create L3Out
    cisco.aci.aci_l3out:
      <<: *vrf_present
      l3out: l3outtest
      domain: l3outtest
      route_control: export 

  - name: Crete node profile
    cisco.aci.aci_l3out_logical_node_profile: &np_present
      <<: *tenant_present
      l3out: l3outtest
      node_profile: NODES

  # BEGIN WITH TESTS
  - name: Add node (check_mode)
    cisco.aci.aci_l3out_logical_node: &node_present
      <<: *np_present
      pod_id: 1
      node_id: 111
      router_id: 111.111.111.111
      router_id_as_loopback: 'no'
    check_mode: true
    register: cm_add_node

  - name: Add node (normal mode)
    cisco.aci.aci_l3out_logical_node: 
      <<: *node_present
    register: nm_add_node

  - name: Verify nm_add_node
    assert:
      that:
      - cm_add_node is changed
      - nm_add_node is changed
      - cm_add_node.previous == nm_add_node.previous == []
      - cm_add_node.sent.l3extRsNodeL3OutAtt.attributes.rtrId == nm_add_node.sent.l3extRsNodeL3OutAtt.attributes.rtrId == '111.111.111.111'
      - cm_add_node.sent.l3extRsNodeL3OutAtt.attributes.rtrIdLoopBack == nm_add_node.sent.l3extRsNodeL3OutAtt.attributes.rtrIdLoopBack == 'no'
      - cm_add_node.sent.l3extRsNodeL3OutAtt.attributes.tDn == nm_add_node.sent.l3extRsNodeL3OutAtt.attributes.tDn == 'topology/pod-1/node-111'
      - nm_add_node.current.0.l3extRsNodeL3OutAtt.attributes.annotation == 'orchestrator:ansible'

  - name: Add node  again, check if idempotency works
    cisco.aci.aci_l3out_logical_node: 
      <<: *node_present
    register: add_node_again

  - name: Verify add_node_again
    assert:
      that:
      - add_node_again is not changed

  # UPDATE NODE
  - name: Change roouter id
    cisco.aci.aci_l3out_logical_node: &node_update
      <<: *node_present
      router_id: 11.11.11.11
    register: update_node

  - name: Verify update_node
    assert:
      that:
      - update_node is changed
      - update_node.previous != []
      - update_node.sent.l3extRsNodeL3OutAtt.attributes.rtrId == '11.11.11.11'

  # ADD ANOTHER NODE
  - name: Add another node
    cisco.aci.aci_l3out_logical_node: 
      <<: *node_present
      node_id: 112
      router_id: 12.12.12.12

  # QUERY ALL NODES
  - name: Query all nodes
    cisco.aci.aci_l3out_logical_node: 
      <<: *aci_info
      state: query
    register: query_all_nodes

  - name: Verify query_all_nodes
    assert:
      that:
      - query_all_nodes is not changed
      - query_all_nodes.current|length >= 1

  # QUERY A SPECIFIC NODE
  - name: Query a specific node
    cisco.aci.aci_l3out_logical_node:
      <<: *node_update
      state: query
    register: query_spec_node

  - name: Verify query_spec_node
    assert:
      that:
      - query_spec_node is not changed
      - query_spec_node.current|length == 1

  # REMOVE NODE
  - name: Remove node
    cisco.aci.aci_l3out_logical_node:
      <<: *node_update
      state: absent
    register: remove_node

  - name: Verify remove_node
    assert:
      that:
      - remove_node is changed
      - remove_node.current == []
