# Test code for the ACI modules
# Copyright: (c) 2022, Tim Cragg (timcragg) <tcragg@cisco.com>
# Copyright: (c) 2017, Dag Wieers (dagwieers) <dag@wieers.com>
#
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI APIC host, ACI username and ACI password
  fail:
    msg: 'Please define the following variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

- name: Set vars
  set_fact:
    aci_info: &aci_info
      host: "{{ aci_hostname }}"
      username: "{{ aci_username }}"
      password: "{{ aci_password }}"
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: '{{ aci_output_level | default("info") }}'

# CLEAN ENVIRONMENT
- name: Remove any pre-existing user
  cisco.aci.aci_aaa_user:
    <<: *aci_info
    aaa_user: ansible
    state: absent

# ADD USER
- name: Create user
  cisco.aci.aci_aaa_user:
    <<: *aci_info
    aaa_user: ansible
    aaa_password: 12!Ab:cD!34
    state: present

# ADD AAA USER DOMAIN
- name: Add AAA user domain (check_mode)
  cisco.aci.aci_aaa_user_domain: &domain_present
    <<: *aci_info
    aaa_user: ansible
    domain_name: mgmt
    state: present
  check_mode: yes
  register: cm_add_user_domain

- name: Add AAA user domain (normal mode)
  cisco.aci.aci_aaa_user_domain:
    <<: *domain_present
  register: nm_add_user_domain

- name: Add AAA user domain again(check mode)
  cisco.aci.aci_aaa_user_domain:
    <<: *domain_present
  check_mode: yes
  register: cm_add_user_domain_again

- name: Add AAA user domain again (normal mode)
  cisco.aci.aci_aaa_user_domain:
    <<: *domain_present
  register: nm_add_user_domain_again

- name: Verify add user
  assert:
    that:
    - cm_add_user_domain is changed
    - nm_add_user_domain is changed
    - nm_add_user_domain.current.0.aaaUserDomain.attributes.dn == 'uni/userext/user-ansible/userdomain-mgmt'
    - nm_add_user_domain.current.0.aaaUserDomain.attributes.name == 'mgmt'
    - cm_add_user_domain_again is not changed
    - nm_add_user_domain_again is not changed
    - nm_add_user_domain_again.current.0.aaaUserDomain.attributes.dn == 'uni/userext/user-ansible/userdomain-mgmt'
    - nm_add_user_domain_again.current.0.aaaUserDomain.attributes.name == 'mgmt'

# QUERY ALL USER DOMAINS
- name: Query all users (check_mode)
  cisco.aci.aci_aaa_user_domain: &domain_query_all
    <<: *aci_info
    aaa_user: ansible
    state: query
  check_mode: yes
  register: cm_query_all_user_domains

- name: Query all users (normal mode)
  cisco.aci.aci_aaa_user_domain:
    <<: *domain_query_all
  register: nm_query_all_user_domains

- name: Verify query_all_user_domains
  assert:
    that:
    - cm_query_all_user_domains is not changed
    - nm_query_all_user_domains is not changed

# QUERY OUR USER DOMAIN
- name: Query our domain (check_mode)
  cisco.aci.aci_aaa_user_domain: &domain_query
    <<: *domain_query_all
    domain_name: common
  check_mode: yes
  register: cm_query_user_domain

- name: Query our user (normal mode)
  cisco.aci.aci_aaa_user_domain:
    <<: *domain_query
  register: nm_query_user_domain

- name: Verify query_user
  assert:
    that:
    - cm_query_user_domain is not changed
    - nm_query_user_domain is not changed
    - cm_query_user_domain == nm_query_user_domain

# REMOVE USER DOMAIN
- name: Remove user domain (check_mode)
  cisco.aci.aci_aaa_user_domain: &domain_absent
    <<: *aci_info
    aaa_user: ansible
    domain_name: mgmt
    state: absent
  check_mode: yes
  register: cm_remove_user_domain

- name: Remove user domain (normal mode)
  cisco.aci.aci_aaa_user_domain:
    <<: *domain_absent
  register: nm_remove_user_domain

- name: Remove user domain again (check_mode)
  cisco.aci.aci_aaa_user_domain:
    <<: *domain_absent
  check_mode: yes
  register: cm_remove_user_domain_again

- name: Remove user domain again (normal mode)
  cisco.aci.aci_aaa_user_domain:
    <<: *domain_absent
  register: nm_remove_user_domain_again

- name: Verify remove_user
  assert:
    that:
    - cm_remove_user_domain is changed
    - nm_remove_user_domain is changed
    - nm_remove_user_domain.current == []
    - cm_remove_user_domain_again is not changed
    - nm_remove_user_domain_again is not changed

# CLEAN UP
- name: Remove user
  cisco.aci.aci_aaa_user:
    <<: *aci_info
    aaa_user: ansible
    state: absent
