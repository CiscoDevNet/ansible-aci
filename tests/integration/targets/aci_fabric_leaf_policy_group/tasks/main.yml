# Test code for the ACI modules
# Copyright: (c) 2021, Tim Cragg (@timcragg)

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI APIC host, ACI username and ACI password
  fail:
    msg: 'Please define the following variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

# GET Credentials from the inventory
- name: Set vars
  set_fact:
    aci_info: &aci_info
      host: "{{ aci_hostname }}"
      username: "{{ aci_username }}"
      password: "{{ aci_password }}"
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: debug

# CLEAN ENVIRONMENT
- name: Remove ansible_fabric_leaf_policy_group if it already exists
  cisco.aci.aci_fabric_leaf_policy_group:
    <<: *aci_info
    name: ansible_fabric_leaf_policy_group
    state: absent

# ADD Fabric Leaf Policy Group
- name: Add ansible_fabric_leaf_policy_group
  cisco.aci.aci_fabric_leaf_policy_group: &aci_fabric_leaf_policy_group_present
    <<: *aci_info
    name: ansible_fabric_leaf_policy_group
    monitoring_policy: default
    tech_support_export_policy: default
    core_export_policy: default
    inventory_policy: default
    power_redundancy_policy: default
    state: present
  register: add_fabric_leaf_policy_group

- name: Verify that ansible_fabric_leaf_policy_group has been created with correct attributes
  assert:
    that:
    - add_fabric_leaf_policy_group.current.0.fabricLeNodePGrp.attributes.dn == "uni/fabric/funcprof/lenodepgrp-ansible_fabric_leaf_policy_group"
    - add_fabric_leaf_policy_group.current.0.fabricLeNodePGrp.attributes.name == "ansible_fabric_leaf_policy_group"

- name: Verify that ansible_fabric_leaf_policy_group children have correct attributes
  assert:
    that:
    - add_fabric_leaf_policy_group.current.0.fabricLeNodePGrp.children.0.fabricRsCallhomeInvPol.attributes.tnCallhomeInvPName == "default"
    - add_fabric_leaf_policy_group.current.0.fabricLeNodePGrp.children.1.fabricRsTwampResponderPol.attributes.tnTwampResponderPolName == ""
    - add_fabric_leaf_policy_group.current.0.fabricLeNodePGrp.children.2.fabricRsPsuInstPol.attributes.tnPsuInstPolName == "default"
    - add_fabric_leaf_policy_group.current.0.fabricLeNodePGrp.children.3.fabricRsTwampServerPol.attributes.tnTwampServerPolName == ""
    - add_fabric_leaf_policy_group.current.0.fabricLeNodePGrp.children.4.fabricRsMonInstFabricPol.attributes.tnMonFabricPolName == "default"
    - add_fabric_leaf_policy_group.current.0.fabricLeNodePGrp.children.5.fabricRsNodeCoreP.attributes.tnDbgexpCorePName == "default"
    - add_fabric_leaf_policy_group.current.0.fabricLeNodePGrp.children.6.fabricRsNodeTechSupP.attributes.tnDbgexpTechSupPName == "default"

# ADD Fabric Leaf Policy Group again to check idempotency
- name: Add ansible_fabric_leaf_policy_group again to test idempotence
  cisco.aci.aci_fabric_leaf_policy_group:
    <<: *aci_fabric_leaf_policy_group_present
  register: add_fabric_leaf_policy_group_again

- name: Verify that ansible_fabric_leaf_policy_group has not been changed
  assert:
    that:
    - add_fabric_leaf_policy_group_again is not changed
    - add_fabric_leaf_policy_group_again.current.0.fabricLeNodePGrp.attributes.dn == "uni/fabric/funcprof/lenodepgrp-ansible_fabric_leaf_policy_group"
    - add_fabric_leaf_policy_group_again.current.0.fabricLeNodePGrp.attributes.name == "ansible_fabric_leaf_policy_group"

- name: Verify that ansible_fabric_leaf_policy_group children are still correct
  assert:
    that:
    - add_fabric_leaf_policy_group_again.current.0.fabricLeNodePGrp.children.0.fabricRsCallhomeInvPol.attributes.tnCallhomeInvPName == "default"
    - add_fabric_leaf_policy_group_again.current.0.fabricLeNodePGrp.children.1.fabricRsTwampResponderPol.attributes.tnTwampResponderPolName == ""
    - add_fabric_leaf_policy_group_again.current.0.fabricLeNodePGrp.children.2.fabricRsPsuInstPol.attributes.tnPsuInstPolName == "default"
    - add_fabric_leaf_policy_group_again.current.0.fabricLeNodePGrp.children.3.fabricRsTwampServerPol.attributes.tnTwampServerPolName == ""
    - add_fabric_leaf_policy_group_again.current.0.fabricLeNodePGrp.children.4.fabricRsMonInstFabricPol.attributes.tnMonFabricPolName == "default"
    - add_fabric_leaf_policy_group_again.current.0.fabricLeNodePGrp.children.5.fabricRsNodeCoreP.attributes.tnDbgexpCorePName == "default"
    - add_fabric_leaf_policy_group_again.current.0.fabricLeNodePGrp.children.6.fabricRsNodeTechSupP.attributes.tnDbgexpTechSupPName == "default"

# MODIFY Fabric Leaf Poilicy Group
- name: Update ansible_fabric_leaf_policy_group
  cisco.aci.aci_fabric_leaf_policy_group:
    <<: *aci_info
    name: ansible_fabric_leaf_policy_group
    twamp_server_policy: default
    twamp_responder_policy: default
  register: update_fabric_leaf_policy_group

- name: Verify ansible_fabric_leaf_policy_group is changed
  assert:
    that:
    - update_fabric_leaf_policy_group is changed
    - update_fabric_leaf_policy_group.current.0.fabricLeNodePGrp.attributes.dn == "uni/fabric/funcprof/lenodepgrp-ansible_fabric_leaf_policy_group"
    - update_fabric_leaf_policy_group.current.0.fabricLeNodePGrp.attributes.name == "ansible_fabric_leaf_policy_group"

- name: Verify ansible_fabric_leaf_policy_group children are updated
  assert:
    that:
    - update_fabric_leaf_policy_group.current.0.fabricLeNodePGrp.children.0.fabricRsCallhomeInvPol.attributes.tnCallhomeInvPName == "default"
    - update_fabric_leaf_policy_group.current.0.fabricLeNodePGrp.children.1.fabricRsTwampResponderPol.attributes.tnTwampResponderPolName == "default"
    - update_fabric_leaf_policy_group.current.0.fabricLeNodePGrp.children.2.fabricRsPsuInstPol.attributes.tnPsuInstPolName == "default"
    - update_fabric_leaf_policy_group.current.0.fabricLeNodePGrp.children.3.fabricRsTwampServerPol.attributes.tnTwampServerPolName == "default"
    - update_fabric_leaf_policy_group.current.0.fabricLeNodePGrp.children.4.fabricRsMonInstFabricPol.attributes.tnMonFabricPolName == "default"
    - update_fabric_leaf_policy_group.current.0.fabricLeNodePGrp.children.5.fabricRsNodeCoreP.attributes.tnDbgexpCorePName == "default"
    - update_fabric_leaf_policy_group.current.0.fabricLeNodePGrp.children.6.fabricRsNodeTechSupP.attributes.tnDbgexpTechSupPName == "default"


# QUERY Fabric Leaf Policy Group
- name: Query ansible_fabric_leaf_policy_group
  cisco.aci.aci_fabric_leaf_policy_group:
    <<: *aci_info
    name: ansible_fabric_leaf_policy_group
    state: query
  register: query_fabric_leaf_policy_group

- name: Verify attributes
  assert:
    that:
    - query_fabric_leaf_policy_group is not changed
    - query_fabric_leaf_policy_group.current.0.fabricLeNodePGrp.attributes.dn == "uni/fabric/funcprof/lenodepgrp-ansible_fabric_leaf_policy_group"
    - query_fabric_leaf_policy_group.current.0.fabricLeNodePGrp.attributes.name == "ansible_fabric_leaf_policy_group"

- name: Verify children
  assert:
    that:
    - query_fabric_leaf_policy_group.current.0.fabricLeNodePGrp.children.0.fabricRsCallhomeInvPol.attributes.tnCallhomeInvPName == "default"
    - query_fabric_leaf_policy_group.current.0.fabricLeNodePGrp.children.1.fabricRsTwampResponderPol.attributes.tnTwampResponderPolName == "default"
    - query_fabric_leaf_policy_group.current.0.fabricLeNodePGrp.children.2.fabricRsPsuInstPol.attributes.tnPsuInstPolName == "default"
    - query_fabric_leaf_policy_group.current.0.fabricLeNodePGrp.children.3.fabricRsTwampServerPol.attributes.tnTwampServerPolName == "default"
    - query_fabric_leaf_policy_group.current.0.fabricLeNodePGrp.children.4.fabricRsMonInstFabricPol.attributes.tnMonFabricPolName == "default"
    - query_fabric_leaf_policy_group.current.0.fabricLeNodePGrp.children.5.fabricRsNodeCoreP.attributes.tnDbgexpCorePName == "default"
    - query_fabric_leaf_policy_group.current.0.fabricLeNodePGrp.children.6.fabricRsNodeTechSupP.attributes.tnDbgexpTechSupPName == "default"

- name: Query all Fabric Leaf Policy Groups
  cisco.aci.aci_fabric_leaf_policy_group:
    <<: *aci_info
    state: query
  register: query_fabric_leaf_policy_group_all

- name: Verify query all is idempotent
  assert:
    that:
    - query_fabric_leaf_policy_group_all is not changed

# DELETE Fabric Leaf Policy Group
- name: Remove ansible_fabric_leaf_policy_group
  cisco.aci.aci_fabric_leaf_policy_group:
    <<: *aci_info
    name: ansible_fabric_leaf_policy_group
    state: absent
  register: delete_fabric_leaf_policy_group

- name: Verify Fabric Leaf Policy Group deletion
  assert:
    that:
    - delete_fabric_leaf_policy_group is changed
    - delete_fabric_leaf_policy_group.current == []
    - delete_fabric_leaf_policy_group.previous.0.fabricLeNodePGrp.attributes.dn == "uni/fabric/funcprof/lenodepgrp-ansible_fabric_leaf_policy_group"
    - delete_fabric_leaf_policy_group.previous.0.fabricLeNodePGrp.attributes.name == "ansible_fabric_leaf_policy_group"
    - delete_fabric_leaf_policy_group.previous.0.fabricLeNodePGrp.children.0.fabricRsCallhomeInvPol.attributes.tnCallhomeInvPName == "default"
    - delete_fabric_leaf_policy_group.previous.0.fabricLeNodePGrp.children.1.fabricRsTwampResponderPol.attributes.tnTwampResponderPolName == "default"
    - delete_fabric_leaf_policy_group.previous.0.fabricLeNodePGrp.children.2.fabricRsPsuInstPol.attributes.tnPsuInstPolName == "default"
    - delete_fabric_leaf_policy_group.previous.0.fabricLeNodePGrp.children.3.fabricRsTwampServerPol.attributes.tnTwampServerPolName == "default"
    - delete_fabric_leaf_policy_group.previous.0.fabricLeNodePGrp.children.4.fabricRsMonInstFabricPol.attributes.tnMonFabricPolName == "default"
    - delete_fabric_leaf_policy_group.previous.0.fabricLeNodePGrp.children.5.fabricRsNodeCoreP.attributes.tnDbgexpCorePName == "default"
    - delete_fabric_leaf_policy_group.previous.0.fabricLeNodePGrp.children.6.fabricRsNodeTechSupP.attributes.tnDbgexpTechSupPName == "default"
