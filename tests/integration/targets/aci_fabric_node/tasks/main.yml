# Test code for the ACI modules
# Copyright: (c) 2017, Bruno Calogero <brunocalogero@hotmail.com>
# Copyright: (c) 2023, Gaspard Micol <gmicol@cisco.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI APIC host, ACI username and ACI password
  fail:
    msg: 'Please define the following variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

- name: Set vars
  set_fact:
    aci_info: &aci_info
      host: "{{ aci_hostname }}"
      username: "{{ aci_username }}"
      password: "{{ aci_password }}"
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: '{{ aci_output_level | default("info") }}'

# CLEAN ENVIRONMENT
- name: Remove fabric node
  cisco.aci.aci_fabric_node: &aci_fabric_node_absent
    <<: *aci_info
    serial: ansible_test
    node_id: 105
    state: absent

- name: Remove fabric node 2
  cisco.aci.aci_fabric_node: &aci_fabric_node_absent_2
    <<: *aci_info
    serial: ansible_test_2
    node_id: 106
    state: absent

# ADD FABRIC NODE
- name: Add fabric node with tier-2 leaf (check_mode)
  cisco.aci.aci_fabric_node: &aci_fabric_node_present
    <<: *aci_fabric_node_absent
    switch: anstest
    role: leaf
    node_type: tier_2
    state: present
  check_mode: true
  register: cm_add_fabric_node_tier_2

- name: Add fabric node with remote leaf
  cisco.aci.aci_fabric_node: &aci_fabric_node_present_2
    <<: *aci_fabric_node_absent_2
    switch: anstest_2
    role: leaf
    node_type: remote
    remote_leaf_pool_id: 2
    state: present
  register: nm_add_fabric_node_remote

- name: Add fabric node (normal mode)
  cisco.aci.aci_fabric_node: *aci_fabric_node_present
  register: nm_add_fabric_node

- name: Add fabric node again (check_mode)
  cisco.aci.aci_fabric_node: *aci_fabric_node_present
  check_mode: true
  register: cm_add_fabric_node_again

- name: Add fabric node again (normal mode)
  cisco.aci.aci_fabric_node: *aci_fabric_node_present
  register: nm_add_fabric_node_again

- name: test error - mutually exclusive attributes
  cisco.aci.aci_fabric_node:
    <<: *aci_fabric_node_present_2
    node_type: tier_2
  register: test_error_mutually_exclusive
  ignore_errors: true

- name: test error - check failure when changing node type
  cisco.aci.aci_fabric_node:
    <<: *aci_fabric_node_present
    node_type: virtual
  register: test_error_change__node_type
  ignore_errors: true

- name: test error - check failure when changing Pool Id
  cisco.aci.aci_fabric_node:
    <<: *aci_fabric_node_present_2
    remote_leaf_pool_id: 3
  register: test_error_change_Pool_Id
  ignore_errors: true

- name: Verify add_fabric_node
  assert:
    that:
    - cm_add_fabric_node_tier_2 is changed
    - nm_add_fabric_node is changed
    - nm_add_fabric_node.current.0.fabricNodeIdentP.attributes.annotation == 'orchestrator:ansible'
    - nm_add_fabric_node.current.0.fabricNodeIdentP.attributes.role == 'leaf'
    - nm_add_fabric_node.current.0.fabricNodeIdentP.attributes.nodeType == 'tier-2-leaf'
    - nm_add_fabric_node_remote is changed
    - nm_add_fabric_node_remote.current.0.fabricNodeIdentP.attributes.nodeType == 'remote-leaf-wan'
    - nm_add_fabric_node_remote.current.0.fabricNodeIdentP.attributes.extPoolId == '2'
    # FIXME: Module is not idempotent
    - cm_add_fabric_node_again is not changed
    - nm_add_fabric_node_again is not changed
    - test_error_mutually_exclusive.msg == "External Pool Id is not compatible with a node type other than 'remote'."
    - test_error_change__node_type.error.text == "Create-only and naming props cannot be modified after creation, class=fabricNodeIdentP, prop=nodeType"
    - test_error_change_Pool_Id.error.text == "Create-only and naming props cannot be modified after creation, class=fabricNodeIdentP, prop=extPoolId"


# CHANGE FABRIC NODE
- name: Change description of fabric node (check_mode)
  cisco.aci.aci_fabric_node:
    <<: *aci_fabric_node_present
    description: Ansible test fabric node
  check_mode: true
  register: cm_add_fabric_node_descr

- name: Change description of fabric node (normal mode)
  cisco.aci.aci_fabric_node:
    <<: *aci_fabric_node_present
    description: Ansible test fabric node
  register: nm_add_fabric_node_descr

- name: Change description of fabric nodeagain (check_mode)
  cisco.aci.aci_fabric_node:
    <<: *aci_fabric_node_present
    description: Ansible test fabric node
  check_mode: true
  register: cm_add_fabric_node_descr_again

- name: Change description of fabric node again (normal mode)
  cisco.aci.aci_fabric_node:
    <<: *aci_fabric_node_present
    description: Ansible test fabric node
  register: nm_add_fabric_node_descr_again

- name: Verify add_fabric_node_descr
  assert:
    that:
    - cm_add_fabric_node_descr is changed
    - nm_add_fabric_node_descr is changed
    # FIXME: Module is not idempotent
    - cm_add_fabric_node_descr_again is not changed
    - nm_add_fabric_node_descr_again is not changed


# ADD FABRIC NODE AGAIN
- name: Add fabric node again with no description (check_mode)
  cisco.aci.aci_fabric_node: *aci_fabric_node_present
  check_mode: true
  register: cm_add_fabric_node_again_no_descr

- name: Add fabric node again with no description (normal mode)
  cisco.aci.aci_fabric_node: *aci_fabric_node_present
  register: nm_add_fabric_node_again_no_descr

- name: Verify add_fabric_node_again_no_descr
  assert:
    that:
    # FIXME: Module is not idempotent
    - cm_add_fabric_node_again_no_descr is not changed
    - nm_add_fabric_node_again_no_descr is not changed


# QUERY ALL FABRIC NODES
- name: Query fabric nodes (check_mode)
  cisco.aci.aci_fabric_node: &aci_fabric_node_query
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: '{{ aci_output_level | default("info") }}'
    state: query
  check_mode: true
  register: cm_query_all_fabric_nodes

- name: Query all fabric nodes (normal mode)
  cisco.aci.aci_fabric_node: *aci_fabric_node_query
  register: nm_query_all_fabric_nodes

- name: Verify query_all_fabric_nodes
  assert:
    that:
    - cm_query_all_fabric_nodes is not changed
    - nm_query_all_fabric_nodes is not changed
    - cm_query_all_fabric_nodes == nm_query_all_fabric_nodes


# QUERY A FABRIC NODE
- name: Query our fabric_node
  cisco.aci.aci_fabric_node:
    <<: *aci_fabric_node_query
    serial: ansible_test
  check_mode: true
  register: cm_query_fabric_node

- name: Query our fabric_node
  cisco.aci.aci_fabric_node:
    <<: *aci_fabric_node_query
    serial: ansible_test
  register: nm_query_fabric_node

- name: Verify query_fabric_node
  assert:
    that:
    - cm_query_fabric_node is not changed
    - nm_query_fabric_node is not changed
    - cm_query_fabric_node == nm_query_fabric_node


# REMOVE FABRIC NODE
- name: Remove fabric_node (check_mode)
  cisco.aci.aci_fabric_node: *aci_fabric_node_absent
  check_mode: true
  register: cm_remove_fabric_node

- name: Remove fabric_node (normal mode)
  cisco.aci.aci_fabric_node: *aci_fabric_node_absent
  register: nm_remove_fabric_node

- name: Remove fabric_node again (check_mode)
  cisco.aci.aci_fabric_node: *aci_fabric_node_absent
  check_mode: true
  register: cm_remove_fabric_node_again

- name: Remove fabric_node again (normal mode)
  cisco.aci.aci_fabric_node: *aci_fabric_node_absent
  register: nm_remove_fabric_node_again

- name: Verify remove_fabric_node
  assert:
    that:
    - cm_remove_fabric_node is changed
    - nm_remove_fabric_node is changed
    - cm_remove_fabric_node_again is not changed
    - nm_remove_fabric_node_again is not changed


# QUERY NON-EXISTING LEAF PROFILE
- name: Query non-existing fabric_node (check_mode)
  cisco.aci.aci_fabric_node:
    <<: *aci_fabric_node_query
    serial: ansible_test
  check_mode: true
  register: cm_query_non_fabric_node

- name: Query non-existing fabric_node (normal mode)
  cisco.aci.aci_fabric_node:
    <<: *aci_fabric_node_query
    serial: ansible_test
  register: nm_query_non_fabric_node

- name: Verify query_non_fabric_node
  assert:
    that:
    - cm_query_non_fabric_node is not changed
    - nm_query_non_fabric_node is not changed
    - cm_query_non_fabric_node == nm_query_non_fabric_node
