# Test code for the ACI modules
# Copyright: (c) 2023, Gaspard Micol (@gmicol) <gmicol@cisco.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI APIC host, ACI username and ACI password
  fail:
    msg: 'Please define the following variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

- name: Set vars
  set_fact:
    aci_info: &aci_info
      host: "{{ aci_hostname }}"
      username: "{{ aci_username }}"
      password: "{{ aci_password }}"
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: debug

- name: Verify Cloud and Non-Cloud Sites in use.
  include_tasks: ../../../../../../integration/targets/aci_cloud_provider/tasks/main.yml

- name: Execute tasks only for non-cloud sites
  when: query_cloud.current == []  # This condition will execute only non-cloud sites
  block:  # block specifies execution of tasks within, based on conditions
  # Clean Environment
  - name: Ensure first mcp interface policy does not exist - APIC version >= 5.0
    aci_interface_policy_mcp: &aci_interface_policy_mcp_absent_5
      <<: *aci_info
      name: anstest_policy
      description: test for mcp interface policy
      mcp_mode: strict
      grace_period: 4
      grace_period_millisec: 500
      init_delay_time: 5
      tx_frequence: 2
      tx_frequence_millisec: 500
      admin_state: false
      state: absent
    when: version.current.0.topSystem.attributes.version is version('5', '>=')

  - name: Ensure first mcp interface policy does not exist
    aci_interface_policy_mcp: &aci_interface_policy_mcp_absent
      <<: *aci_info
      name: anstest_policy
      description: test for mcp interface policy
      admin_state: false
      state: absent
    when: version.current.0.topSystem.attributes.version is version('5', '<')

  - name: Ensure second mcp interface policy does not exist
    aci_interface_policy_mcp: &aci_interface_policy_mcp_2_absent
      <<: *aci_info
      name: anstest_policy_2
      state: absent

  - name: Create first mcp interface policy (check_mode) - APIC version >= 5.0
    aci_interface_policy_mcp: &aci_interface_policy_mcp_present_5
      <<: *aci_interface_policy_mcp_absent_5
      state: present
    check_mode: true
    register: cm_add_interface_policy_mcp_1_5
    when: version.current.0.topSystem.attributes.version is version('5', '>=')

  - name: Create first mcp interface policy (normal_mode) - APIC version >= 5.0
    aci_interface_policy_mcp:
      <<: *aci_interface_policy_mcp_present_5
    register: nm_add_interface_policy_mcp_1_5
    when: version.current.0.topSystem.attributes.version is version('5', '>=')

  - name: Create first mcp interface policy again - testing idempotency - APIC version >= 5.0
    aci_interface_policy_mcp:
      <<: *aci_interface_policy_mcp_present_5
    register: idempotency_add_interface_policy_mcp_1_5
    when: version.current.0.topSystem.attributes.version is version('5', '>=')

  - name: Create first mcp interface policy (check_mode) - APIC version < 5.0
    aci_interface_policy_mcp: &aci_interface_policy_mcp_present
      <<: *aci_interface_policy_mcp_absent
      state: present
    check_mode: true
    register: cm_add_interface_policy_mcp_1
    when: version.current.0.topSystem.attributes.version is version('5', '<')

  - name: Create first mcp interface policy (normal_mode) - APIC version < 5.0
    aci_interface_policy_mcp:
      <<: *aci_interface_policy_mcp_present
    register: nm_add_interface_policy_mcp_1
    when: version.current.0.topSystem.attributes.version is version('5', '<')

  - name: Create first mcp interface policy again - testing idempotency - APIC version < 5.0
    aci_interface_policy_mcp:
      <<: *aci_interface_policy_mcp_present
    register: idempotency_add_interface_policy_mcp_1
    when: version.current.0.topSystem.attributes.version is version('5', '<')

  - name: Create second mcp interface policy
    aci_interface_policy_mcp: &aci_interface_policy_mcp_2_present
      <<: *aci_interface_policy_mcp_2_absent
      state: present
    register: nm_add_interface_policy_mcp_2

  - name: Asserts for creation tasks for first mcp interface policy - APIC version >= 5.0
    assert:
      that:
        - cm_add_interface_policy_mcp_1_5 is changed
        - cm_add_interface_policy_mcp_1_5.previous == []
        - cm_add_interface_policy_mcp_1_5.current == []
        - nm_add_interface_policy_mcp_1_5 is changed
        - nm_add_interface_policy_mcp_1_5.current.0.mcpIfPol.attributes.name == "anstest_policy"
        - nm_add_interface_policy_mcp_1_5.current.0.mcpIfPol.attributes.adminSt == "disabled"
        - idempotency_add_interface_policy_mcp_1_5 is not changed
    when: version.current.0.topSystem.attributes.version is version('5', '>=')

  - name: Asserts for creation tasks for first mcp interface policy - APIC version < 5.0
    assert:
      that:
        - cm_add_interface_policy_mcp_1 is changed
        - cm_add_interface_policy_mcp_1.previous == []
        - cm_add_interface_policy_mcp_1.current == []
        - nm_add_interface_policy_mcp_1 is changed
        - nm_add_interface_policy_mcp_1.current.0.mcpIfPol.attributes.name == "anstest_policy"
        - nm_add_interface_policy_mcp_1.current.0.mcpIfPol.attributes.adminSt == "disabled"
        - idempotency_add_interface_policy_mcp_1 is not changed
    when: version.current.0.topSystem.attributes.version is version('5', '<')

  - name: Asserts for creation tasks for second mcp interface policy
    assert:
      that:
        - nm_add_interface_policy_mcp_2 is changed
        - nm_add_interface_policy_mcp_2.current.0.mcpIfPol.attributes.name == "anstest_policy_2"
        - nm_add_interface_policy_mcp_2.current.0.mcpIfPol.attributes.adminSt == "enabled"

  - name: Query all mcp interface policies
    aci_interface_policy_mcp:
      <<: *aci_info
      state: query
    register: query_all_interface_policy_mcp

  - name: Query first mcp interface policy
    aci_interface_policy_mcp:
      <<: *aci_interface_policy_mcp_present_5
      state: query
    register: query_first_interface_policy_mcp_5
    when: version.current.0.topSystem.attributes.version is version('5', '>=')

  - name: Query first mcp interface policy
    aci_interface_policy_mcp:
      <<: *aci_interface_policy_mcp_present
      state: query
    register: query_first_interface_policy_mcp
    when: version.current.0.topSystem.attributes.version is version('5', '<')

  - name: Asserts for query tasks
    assert:
      that:
        - query_all_interface_policy_mcp is not changed
        - query_all_interface_policy_mcp.current | length >= 2
        - '"class/mcpIfPol.json" in query_all_interface_policy_mcp.url'

  - name: Asserts for individual query tasks - APIC version >= 5.0
    assert:
      that:
        - query_first_interface_policy_mcp_5.current.0.mcpIfPol.attributes.name == "anstest_policy"
        - query_first_interface_policy_mcp_5.current.0.mcpIfPol.attributes.adminSt == "disabled"
    when: version.current.0.topSystem.attributes.version is version('5', '>=')
    
  - name: Asserts for individual query tasks - APIC version < 5.0
    assert:
      that:
        - query_first_interface_policy_mcp.current.0.mcpIfPol.attributes.name == "anstest_policy"
        - query_first_interface_policy_mcp.current.0.mcpIfPol.attributes.adminSt == "disabled"
    when: version.current.0.topSystem.attributes.version is version('5', '<')

  - name: Delete first mcp interface policy (check_mode) - APIC version >= 5.0
    aci_interface_policy_mcp:
      <<: *aci_interface_policy_mcp_present_5
      state: absent
    check_mode: true
    register: cm_delete_interface_policy_mcp_1_5
    when: version.current.0.topSystem.attributes.version is version('5', '>=')

  - name: Delete first mcp interface policy (normal_mode) - APIC version >= 5.0
    aci_interface_policy_mcp:
      <<: *aci_interface_policy_mcp_present_5
      state: absent
    register: nm_delete_interface_policy_mcp_1_5
    when: version.current.0.topSystem.attributes.version is version('5', '>=')

  - name: Delete first mcp interface policy again - testing idempotency - APIC version >= 5.0
    aci_interface_policy_mcp:
      <<: *aci_interface_policy_mcp_present_5
      state: absent
    register: idempotency_delete_interface_policy_mcp_1_5
    when: version.current.0.topSystem.attributes.version is version('5', '>=')

  - name: Delete first mcp interface policy (check_mode) - APIC version < 5.0
    aci_interface_policy_mcp:
      <<: *aci_interface_policy_mcp_present
      state: absent
    check_mode: true
    register: cm_delete_interface_policy_mcp_1
    when: version.current.0.topSystem.attributes.version is version('5', '<')

  - name: Delete first mcp interface policy (normal_mode) - APIC version < 5.0
    aci_interface_policy_mcp:
      <<: *aci_interface_policy_mcp_present
      state: absent
    register: nm_delete_interface_policy_mcp_1
    when: version.current.0.topSystem.attributes.version is version('5', '<')

  - name: Delete first mcp interface policy again - testing idempotency - APIC version < 5.0
    aci_interface_policy_mcp:
      <<: *aci_interface_policy_mcp_present
      state: absent
    register: idempotency_delete_interface_policy_mcp_1
    when: version.current.0.topSystem.attributes.version is version('5', '<')

  - name: Delete second mcp interface policy (normal_mode)
    aci_interface_policy_mcp:
      <<: *aci_interface_policy_mcp_2_present
      state: absent
    register: nm_delete_interface_policy_mcp_2

  - name: Asserts for first mcp interface policy deletion tasks - APIC version >= 5.0
    assert:
      that:
        - cm_delete_interface_policy_mcp_1_5 is changed
        - cm_delete_interface_policy_mcp_1_5.proposed == {}
        - nm_delete_interface_policy_mcp_1_5 is changed
        - nm_delete_interface_policy_mcp_1_5.previous != []
        - nm_delete_interface_policy_mcp_1_5.current == []
        - idempotency_delete_interface_policy_mcp_1_5 is not changed
        - idempotency_delete_interface_policy_mcp_1_5.previous == []
    when: version.current.0.topSystem.attributes.version is version('5', '>=')

  - name: Asserts for first mcp interface policy deletion tasks - APIC version < 5.0
    assert:
      that:
        - cm_delete_interface_policy_mcp_1 is changed
        - cm_delete_interface_policy_mcp_1.proposed == {}
        - nm_delete_interface_policy_mcp_1 is changed
        - nm_delete_interface_policy_mcp_1.previous != []
        - nm_delete_interface_policy_mcp_1.current == []
        - idempotency_delete_interface_policy_mcp_1 is not changed
        - idempotency_delete_interface_policy_mcp_1.previous == []
    when: version.current.0.topSystem.attributes.version is version('5', '<')
  
  - name: Asserts for second mcp interface policy deletion tasks
    assert:
      that:
        - nm_delete_interface_policy_mcp_2.previous != []
        - nm_delete_interface_policy_mcp_2.current == []
