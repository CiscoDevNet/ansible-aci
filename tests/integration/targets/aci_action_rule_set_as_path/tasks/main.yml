# Test code for the ACI modules
# Copyright: (c) 2023, Gaspard Micol (@gmicol) <gmicol@cisco.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI APIC host, ACI username and ACI password
  ansible.builtin.fail:
    msg: 'Please define the following variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

- name: Set vars
  ansible.builtin.set_fact:
    aci_info: &aci_info
      host: "{{ aci_hostname }}"
      username: "{{ aci_username }}"
      password: "{{ aci_password }}"
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: debug

- name: Verify Cloud and Non-Cloud Sites in use.
  ansible.builtin.include_tasks: ../../../../../../integration/targets/aci_cloud_provider/tasks/main.yml

- name: Execute tasks only for non-cloud sites
  when: query_cloud.current == []  # This condition will execute only non-cloud sites
  block:  # block specifies execution of tasks within, based on conditions

  - name: Remove the ansible_tenant
    cisco.aci.aci_tenant: &aci_tenant_absent
      <<: *aci_info
      tenant: ansible_tenant
      state: absent

  - name: Add a new tenant
    cisco.aci.aci_tenant:
      <<: *aci_tenant_absent
      state: present

  - name: Add a two action rule profiles
    cisco.aci.aci_tenant_action_rule_profile:
      <<: *aci_info
      tenant: ansible_tenant
      action_rule: "{{ item }}"
      description: description_on_create
      state: present
    loop:
      - ansible_action_rule
      - ansible_action_rule_2

  - name: Add a set AS path action rule (check_mode)
    cisco.aci.aci_action_rule_set_as_path: &aci_action_rule_set_as_path_present
      <<: *aci_info
      tenant: ansible_tenant
      action_rule: ansible_action_rule
      criteria: prepend
      state: present
    check_mode: true
    register: cm_add_action_rule_set_as_path

  - name: Add a set AS path action rule again
    cisco.aci.aci_action_rule_set_as_path:
      <<: *aci_action_rule_set_as_path_present
    register: nm_add_action_rule_set_as_path

  - name: Add a set AS path action rule again - testing idempotency
    cisco.aci.aci_action_rule_set_as_path:
      <<: *aci_action_rule_set_as_path_present
    register: nm_add_action_rule_set_as_path_again

  - name: Asserts for set AS path action rule creation tasks
    ansible.builtin.assert:
      that:
        - cm_add_action_rule_set_as_path is changed
        - cm_add_action_rule_set_as_path.previous == []
        - cm_add_action_rule_set_as_path.current == []
        - cm_add_action_rule_set_as_path.proposed.rtctrlSetASPath.attributes.lastnum is not defined
        - cm_add_action_rule_set_as_path.proposed.rtctrlSetASPath.attributes.criteria == "prepend"
        - cm_add_action_rule_set_as_path.proposed.rtctrlSetASPath.attributes.descr is not defined
        - nm_add_action_rule_set_as_path is changed
        - nm_add_action_rule_set_as_path.current.0.rtctrlSetASPath.attributes.lastnum == "0"
        - nm_add_action_rule_set_as_path.current.0.rtctrlSetASPath.attributes.criteria == "prepend"
        - nm_add_action_rule_set_as_path.current.0.rtctrlSetASPath.attributes.descr == ""
        - nm_add_action_rule_set_as_path_again is not changed
        - nm_add_action_rule_set_as_path_again.previous == nm_add_action_rule_set_as_path_again.current == nm_add_action_rule_set_as_path.current

  - name: Update a set AS path action rule (check_mode)
    cisco.aci.aci_action_rule_set_as_path: &update_action_rule_set_as_path
      <<: *aci_action_rule_set_as_path_present
      description: description_on_update
    check_mode: true
    register: cm_update_action_rule_set_as_path

  - name: Update a set AS path action rule
    cisco.aci.aci_action_rule_set_as_path:
      <<: *update_action_rule_set_as_path
    register: nm_update_action_rule_set_as_path

  - name: Update a set AS path action rule again
    cisco.aci.aci_action_rule_set_as_path:
      <<: *update_action_rule_set_as_path
    register: nm_update_action_rule_set_as_path_again

  - name: Asserts for set AS path action rule update tasks
    ansible.builtin.assert:
      that:
        - cm_update_action_rule_set_as_path is changed
        - cm_update_action_rule_set_as_path.previous == nm_add_action_rule_set_as_path.current
        - cm_update_action_rule_set_as_path.proposed.rtctrlSetASPath.attributes.lastnum is not defined
        - cm_update_action_rule_set_as_path.proposed.rtctrlSetASPath.attributes.criteria == "prepend"
        - cm_update_action_rule_set_as_path.proposed.rtctrlSetASPath.attributes.descr == "description_on_update"
        - nm_update_action_rule_set_as_path is changed
        - nm_update_action_rule_set_as_path.previous == nm_add_action_rule_set_as_path.current
        - nm_update_action_rule_set_as_path.current.0.rtctrlSetASPath.attributes.lastnum == "0"
        - nm_update_action_rule_set_as_path.current.0.rtctrlSetASPath.attributes.criteria == "prepend"
        - nm_update_action_rule_set_as_path.current.0.rtctrlSetASPath.attributes.descr == "description_on_update"
        - nm_update_action_rule_set_as_path_again is not changed
        - nm_update_action_rule_set_as_path_again.previous == nm_update_action_rule_set_as_path_again.current == nm_update_action_rule_set_as_path.current

  - name: Create another set AS path action rule with prepend-last-as criteria
    cisco.aci.aci_action_rule_set_as_path: &aci_action_rule_set_as_path_2_present
      <<: *aci_action_rule_set_as_path_present
      action_rule: ansible_action_rule_2
      last_as: 2
      criteria: prepend-last-as
    register: nm_create_another_action_rule_set_as_path

  - name: Update another set AS path action rule with prepend-last-as criteria
    cisco.aci.aci_action_rule_set_as_path:
      <<: *aci_action_rule_set_as_path_2_present
      last_as: 4
    register: nm_update_another_action_rule_set_as_path

  - name: Asserts for set AS path action rule update tasks
    ansible.builtin.assert:
      that:
        - nm_create_another_action_rule_set_as_path is changed
        - nm_create_another_action_rule_set_as_path.previous == []
        - nm_create_another_action_rule_set_as_path.current.0.rtctrlSetASPath.attributes.lastnum == "2"
        - nm_create_another_action_rule_set_as_path.current.0.rtctrlSetASPath.attributes.criteria == "prepend-last-as"
        - nm_update_another_action_rule_set_as_path is changed
        - nm_update_another_action_rule_set_as_path.previous == nm_create_another_action_rule_set_as_path.current
        - nm_update_another_action_rule_set_as_path.current.0.rtctrlSetASPath.attributes.lastnum == "4"
        - nm_update_another_action_rule_set_as_path.current.0.rtctrlSetASPath.attributes.criteria == "prepend-last-as"

  - name: Query all set AS path action rules
    cisco.aci.aci_action_rule_set_as_path:
      <<: *aci_info
      state: query
    register: query_all

  - name: Query ansible_action_rule_set_as_path set AS path action rule
    cisco.aci.aci_action_rule_set_as_path:
      <<: *aci_action_rule_set_as_path_present
      state: query
    register: query_one

  - name: Asserts query tasks
    ansible.builtin.assert:
      that:
        - query_all is not changed
        - query_all.current | length >= 2
        - query_one is not changed
        - query_one.current.0.rtctrlSetASPath.attributes.lastnum == "0"
        - query_one.current.0.rtctrlSetASPath.attributes.criteria == "prepend"

  - name: Remove set AS path action rule (check_mode)
    cisco.aci.aci_action_rule_set_as_path: &aci_action_rule_set_as_path_absent
      <<: *aci_action_rule_set_as_path_present
      state: absent
    check_mode: true
    register: cm_remove_action_rule_set_as_path

  - name: Remove set AS path action rule
    cisco.aci.aci_action_rule_set_as_path:
      <<: *aci_action_rule_set_as_path_absent
    register: nm_remove_action_rule_set_as_path

  - name: Remove set AS path action rule again
    cisco.aci.aci_action_rule_set_as_path:
      <<: *aci_action_rule_set_as_path_absent
    register: nm_remove_action_rule_set_as_path_again

  - name: Asserts deletion tasks
    ansible.builtin.assert:
      that:
        - cm_remove_action_rule_set_as_path is changed
        - cm_remove_action_rule_set_as_path.proposed == {}
        - cm_remove_action_rule_set_as_path.previous == nm_update_action_rule_set_as_path.current
        - nm_remove_action_rule_set_as_path is changed
        - nm_remove_action_rule_set_as_path.previous == nm_update_action_rule_set_as_path.current
        - nm_remove_action_rule_set_as_path.current == []
        - nm_remove_action_rule_set_as_path_again is not changed
        - nm_remove_action_rule_set_as_path_again.previous == nm_remove_action_rule_set_as_path_again.current == nm_remove_action_rule_set_as_path.current

  - name: Remove the ansible_tenant - cleanup before ending tests
    cisco.aci.aci_tenant:
      <<: *aci_tenant_absent
