# Test code for the ACI modules
# Copyright: (c) 2023, Akini Ross (@akinross)

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI APIC host, ACI username and ACI password
  fail:
    msg: 'Please define the following variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

- name: Set vars
  set_fact:
    aci_info: &aci_info
      host: "{{ aci_hostname }}"
      username: "{{ aci_username }}"
      password: "{{ aci_password }}"
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: '{{ aci_output_level | default("info") }}'

# CLEAN TEST ENVIRONMENT BEFORE TESTS

- name: Query all fabric span source groups ( clean before )
  cisco.aci.aci_fabric_span_src_group:
    <<: *aci_info
    state: query
  register: query_for_clean

- name: Clean fabric span source groups ( clean before )
  cisco.aci.aci_fabric_span_src_group:
    <<: *aci_info
    source_group: "{{ item.spanSrcGrp.attributes.name }}"
    state: absent
  loop: "{{ query_for_clean.current }}"

- name: Query all fabric span destination groups ( clean before )
  cisco.aci.aci_fabric_span_dst_group:
    <<: *aci_info
    state: query
  register: query_for_clean

- name: Clean fabric span destination groups ( clean before )
  cisco.aci.aci_fabric_span_dst_group:
    <<: *aci_info
    destination_group: "{{ item.spanDestGrp.attributes.name }}"
    state: absent
  loop: "{{ query_for_clean.current }}"

- name: Add fabric span destination group type epg ( clean before )
  cisco.aci.aci_fabric_span_dst_group:
    <<: *aci_info
    destination_group: span_dest_1
    description: test span epg
    destination_epg:
      destination_ip: 10.0.0.1
      source_ip: 10.0.2.1
      tenant: ansible_test
      ap: ansible_test
      epg: ansible_test
    state: present

- name: Add fabric span source groups ( clean before )
  cisco.aci.aci_fabric_span_src_group:
    <<: *aci_info
    source_group: "{{ item }}"
    destination_group: span_dest_1
    state: present
  loop:
    - span_src_group_1
    - span_src_group_2

# TEST CREATE AND UPDATE SOURCE

- name: Add fabric span source 1 ( checkmode )
  cisco.aci.aci_fabric_span_src_group_src: &fabric_span_src_1
    <<: *aci_info
    source_group: span_src_group_1
    source: fabric_span_src_1
    state: present
  check_mode: true
  register: cm_fabric_span_src_1

- name: Add fabric span source 1
  cisco.aci.aci_fabric_span_src_group_src:
    <<: *fabric_span_src_1
  register: nm_fabric_span_src_1

- name: Add fabric span source 1 again
  cisco.aci.aci_fabric_span_src_group_src:
    <<: *fabric_span_src_1
  register: nm_fabric_span_src_1_again

- name: Verify add fabric span source 1
  ansible.builtin.assert:
    that:
    - cm_fabric_span_src_1 is changed
    - cm_fabric_span_src_1.previous == []
    - cm_fabric_span_src_1.current == []
    - cm_fabric_span_src_1.proposed.spanSrc.attributes.name == "fabric_span_src_1"
    - cm_fabric_span_src_1.proposed.spanSrc.attributes.dn == "uni/fabric/srcgrp-span_src_group_1/src-fabric_span_src_1"
    - nm_fabric_span_src_1 is changed
    - nm_fabric_span_src_1.previous == []
    - nm_fabric_span_src_1.current.0.spanSrc.attributes.name == "fabric_span_src_1"
    - nm_fabric_span_src_1.current.0.spanSrc.attributes.descr == ""
    - nm_fabric_span_src_1.current.0.spanSrc.attributes.dir == "both"
    - nm_fabric_span_src_1.current.0.spanSrc.attributes.dn == "uni/fabric/srcgrp-span_src_group_1/src-fabric_span_src_1"
    - nm_fabric_span_src_1_again is not changed
    - nm_fabric_span_src_1_again.previous.0.spanSrc.attributes.name == "fabric_span_src_1"
    - nm_fabric_span_src_1_again.previous.0.spanSrc.attributes.descr == ""
    - nm_fabric_span_src_1_again.previous.0.spanSrc.attributes.dir == "both"
    - nm_fabric_span_src_1_again.previous.0.spanSrc.attributes.dn == "uni/fabric/srcgrp-span_src_group_1/src-fabric_span_src_1"
    - nm_fabric_span_src_1_again.current.0.spanSrc.attributes.name == "fabric_span_src_1"
    - nm_fabric_span_src_1_again.current.0.spanSrc.attributes.descr == ""
    - nm_fabric_span_src_1_again.current.0.spanSrc.attributes.dir == "both"
    - nm_fabric_span_src_1_again.current.0.spanSrc.attributes.dn == "uni/fabric/srcgrp-span_src_group_1/src-fabric_span_src_1"

- name: Change fabric span source 1
  cisco.aci.aci_fabric_span_src_group_src: &change_fabric_span_src_1
    <<: *fabric_span_src_1
    source: fabric_span_src_1
    description: "changed description"
    direction: both
  register: nm_changed_fabric_span_src_1

- name: Change fabric span source 1 direction incoming
  cisco.aci.aci_fabric_span_src_group_src:
    <<: *change_fabric_span_src_1
    direction: incoming
  register: nm_changed_fabric_span_src_1_incoming

- name: Change fabric span source 1 direction outgoing
  cisco.aci.aci_fabric_span_src_group_src: &change_fabric_span_src_1_again
    <<: *change_fabric_span_src_1
    direction: outgoing
  register: nm_changed_fabric_span_src_1_outgoing

- name: Change fabric span source 1 again
  cisco.aci.aci_fabric_span_src_group_src:
    <<: *change_fabric_span_src_1_again
  register: nm_changed_fabric_span_src_1_again

- name: Verify changed fabric span source 1
  ansible.builtin.assert:
    that:
    - nm_changed_fabric_span_src_1 is changed
    - nm_changed_fabric_span_src_1.previous.0.spanSrc.attributes.name == "fabric_span_src_1"
    - nm_changed_fabric_span_src_1.previous.0.spanSrc.attributes.descr == ""
    - nm_changed_fabric_span_src_1.previous.0.spanSrc.attributes.dir == "both"
    - nm_changed_fabric_span_src_1.previous.0.spanSrc.attributes.dn == "uni/fabric/srcgrp-span_src_group_1/src-fabric_span_src_1"
    - nm_changed_fabric_span_src_1.current.0.spanSrc.attributes.name == "fabric_span_src_1"
    - nm_changed_fabric_span_src_1.current.0.spanSrc.attributes.descr == "changed description"
    - nm_changed_fabric_span_src_1.current.0.spanSrc.attributes.dir == "both"
    - nm_changed_fabric_span_src_1.current.0.spanSrc.attributes.dn == "uni/fabric/srcgrp-span_src_group_1/src-fabric_span_src_1"
    - nm_changed_fabric_span_src_1_incoming.current.0.spanSrc.attributes.dir == "in"
    - nm_changed_fabric_span_src_1_outgoing.current.0.spanSrc.attributes.dir == "out"
    - nm_changed_fabric_span_src_1_again is not changed

- name: Add fabric span source 2 of bd type
  cisco.aci.aci_fabric_span_src_group_src: &span_src_bd
    <<: *aci_info
    source_group: span_src_group_1
    bd:
      tenant: tenant1
      bd: bd1
    source: fabric_span_src_2
    state: present
  register: nm_fabric_span_src_2

- name: Change fabric span source 2 of bd type
  cisco.aci.aci_fabric_span_src_group_src:
    <<: *span_src_bd
    bd:
      tenant: tenant1
      bd: bd2
  register: nm_changed_fabric_span_src_2

- name: Change fabric span source 2 of bd type to none type
  cisco.aci.aci_fabric_span_src_group_src:
    <<: *aci_info
    source_group: span_src_group_1
    source: fabric_span_src_2
    state: present
  register: nm_changed_fabric_span_src_2_type_none

- name: Add fabric span source 3 of vrf type
  cisco.aci.aci_fabric_span_src_group_src: &span_src_vrf
    <<: *aci_info
    source_group: span_src_group_1
    vrf:
      tenant: tenant1
      vrf: vrf1
    source: fabric_span_src_3
    state: present
  register: nm_fabric_span_src_3

- name: Change fabric span source 3 of vrf type
  cisco.aci.aci_fabric_span_src_group_src:
    <<: *span_src_vrf
    vrf:
      tenant: tenant1
      vrf: vrf2
  register: nm_changed_fabric_span_src_3

- name: Change fabric span source 3 of vrf type
  cisco.aci.aci_fabric_span_src_group_src:
    <<: *aci_info
    source_group: span_src_group_1
    source: fabric_span_src_3
    state: present
  register: nm_changed_fabric_span_src_3_type_none

- name: Verify changed fabric span source types group 2 and 3
  ansible.builtin.assert:
    that:
    - nm_fabric_span_src_2 is changed
    - nm_fabric_span_src_2.current.0.spanSrc.attributes.name == "fabric_span_src_2"
    - nm_fabric_span_src_2.current.0.spanSrc.children.0.spanRsSrcToBD.attributes.tDn == "uni/tn-tenant1/BD-bd1"
    - nm_changed_fabric_span_src_2 is changed
    - nm_changed_fabric_span_src_2.current.0.spanSrc.attributes.name == "fabric_span_src_2"
    - nm_changed_fabric_span_src_2.previous.0.spanSrc.children.0.spanRsSrcToBD.attributes.tDn == "uni/tn-tenant1/BD-bd1"
    - nm_changed_fabric_span_src_2.current.0.spanSrc.children.0.spanRsSrcToBD.attributes.tDn == "uni/tn-tenant1/BD-bd2"
    - nm_changed_fabric_span_src_2_type_none is changed
    - nm_changed_fabric_span_src_2_type_none.previous.0.spanSrc.children.0.spanRsSrcToBD.attributes.tDn == "uni/tn-tenant1/BD-bd2"
    - '"children" not in nm_changed_fabric_span_src_2_type_none.current.0.spanSrc'
    - nm_fabric_span_src_3 is changed
    - nm_fabric_span_src_3.current.0.spanSrc.attributes.name == "fabric_span_src_3"
    - nm_fabric_span_src_3.current.0.spanSrc.children.0.spanRsSrcToCtx.attributes.tDn == "uni/tn-tenant1/ctx-vrf1"
    - nm_changed_fabric_span_src_3 is changed
    - nm_changed_fabric_span_src_3.current.0.spanSrc.attributes.name == "fabric_span_src_3"
    - nm_changed_fabric_span_src_3.previous.0.spanSrc.children.0.spanRsSrcToCtx.attributes.tDn == "uni/tn-tenant1/ctx-vrf1"
    - nm_changed_fabric_span_src_3.current.0.spanSrc.children.0.spanRsSrcToCtx.attributes.tDn == "uni/tn-tenant1/ctx-vrf2"
    - nm_changed_fabric_span_src_3_type_none is changed
    - nm_changed_fabric_span_src_3_type_none.previous.0.spanSrc.children.0.spanRsSrcToCtx.attributes.tDn == "uni/tn-tenant1/ctx-vrf2"
    - '"children" not in nm_changed_fabric_span_src_3_type_none.current.0.spanSrc'

- name: Change fabric span source 4 drop_packets true
  cisco.aci.aci_fabric_span_src_group_src:
    <<: *aci_info
    source_group: span_src_group_2
    source: span_src_4
    drop_packets: true
    state: present
  register: nm_changed_span_src_4_type_drop_packets_true

- name: Change fabric span source 4 drop_packets false
  cisco.aci.aci_fabric_span_src_group_src:
    <<: *aci_info
    source_group: span_src_group_2
    source: span_src_4
    drop_packets: false
    state: present
  register: nm_changed_span_src_4_type_drop_packets_false

- name: Verify changed fabric span source group 1 drop packets
  ansible.builtin.assert:
    that:
    - nm_changed_span_src_4_type_drop_packets_true is changed
    - nm_changed_span_src_4_type_drop_packets_true.current.0.spanSrc.attributes.name == "span_src_4"
    - nm_changed_span_src_4_type_drop_packets_true.current.0.spanSrc.attributes.spanOnDrop == "yes"
    - nm_changed_span_src_4_type_drop_packets_false is changed
    - nm_changed_span_src_4_type_drop_packets_false.current.0.spanSrc.attributes.name == "span_src_4"
    - nm_changed_span_src_4_type_drop_packets_false.current.0.spanSrc.attributes.spanOnDrop == "no"

# TEST QUERY SOURCE

- name: Query fabric span source fabric_span_src_1
  cisco.aci.aci_fabric_span_src_group_src:
    <<: *aci_info
    source: fabric_span_src_1
    state: query
  register: query_one

- name: Query fabric all span sources
  cisco.aci.aci_fabric_span_src_group_src:
    <<: *aci_info
    state: query
  register: query_all

- name: Verify querying fabric span sources
  ansible.builtin.assert:
    that:
    - query_one is not changed
    - query_one.current | length == 1
    - query_one.current.0.spanSrc.attributes.dn == "uni/fabric/srcgrp-span_src_group_1/src-fabric_span_src_1"
    - query_all is not changed
    - query_all.current | length >= 3

# TEST ERRORS SOURCE

- name: Add fabric span source 4 with bd and vrf ( mutually exclusive error )
  cisco.aci.aci_fabric_span_src_group_src:
    <<: *aci_info
    source_group: span_src_group_4
    bd:
      tenant: tenant1
      bd: bd1
    vrf:
      tenant: tenant1
      vrf: vrf1
    source: span_src_4
    state: present
  ignore_errors: true
  register: err_mutually_exclusive_bd_vrf

- name: Add fabric span source 4 with bd and drop_packets( drop_packets true error )
  cisco.aci.aci_fabric_span_src_group_src:
    <<: *aci_info
    source_group: span_src_group_4
    source: span_src_4
    bd:
      tenant: tenant1
      bd: bd1
    drop_packets: true
  ignore_errors: true
  register: err_bd_drop_packets

- name: Add fabric span source 4 with vrf and drop_packets ( drop_packets true error )
  cisco.aci.aci_fabric_span_src_group_src:
    <<: *aci_info
    source_group: span_src_group_4
    source: span_src_4
    vrf:
      tenant: tenant1
      vrf: vrf1
    drop_packets: true
  ignore_errors: true
  register: err_vrf_drop_packets

- name: Verify errors on incorrect input
  ansible.builtin.assert:
    that:
    - err_mutually_exclusive_bd_vrf.msg == "parameters are mutually exclusive{{':'}} vrf|bd"
    - err_bd_drop_packets.msg == "It is not allowed to configure 'drop_packets{{':'}} true' when 'bd' is configured on the source."
    - err_vrf_drop_packets.msg == "It is not allowed to configure 'drop_packets{{':'}} true' when 'vrf' is configured on the source."

# TEST REMOVAL SOURCE

- name: Remove fabric span source 1 ( checkmode )
  cisco.aci.aci_fabric_span_src_group_src: &remove_fabric_span_src_1
    <<: *change_fabric_span_src_1
    state: absent
  check_mode: true
  register: cm_remove_fabric_span_src_1

- name: Remove fabric span source 1
  cisco.aci.aci_fabric_span_src_group_src:
    <<: *remove_fabric_span_src_1
  register: nm_remove_fabric_span_src_1

- name: Remove fabric span source 1 again
  cisco.aci.aci_fabric_span_src_group_src:
    <<: *remove_fabric_span_src_1
  register: nm_remove_fabric_span_src_1_again

- name: Verify remove fabric span source 1
  ansible.builtin.assert:
    that:
    - cm_remove_fabric_span_src_1 is changed
    - cm_remove_fabric_span_src_1.current | length == 1
    - cm_remove_fabric_span_src_1.previous | length == 1
    - cm_remove_fabric_span_src_1.proposed == {}
    - nm_remove_fabric_span_src_1 is changed
    - nm_remove_fabric_span_src_1.current == []
    - nm_remove_fabric_span_src_1.previous | length == 1
    - nm_remove_fabric_span_src_1_again is not changed
    - nm_remove_fabric_span_src_1_again.current == []
    - nm_remove_fabric_span_src_1_again.previous == []

# CLEAN TEST ENVIRONMENT AFTER TESTS

- name: Query all fabric span source groups ( clean after )
  cisco.aci.aci_fabric_span_src_group:
    <<: *aci_info
    state: query
  register: query_for_clean

- name: Clean fabric span source groups ( clean after )
  cisco.aci.aci_fabric_span_src_group:
    <<: *aci_info
    source_group: "{{ item.spanSrcGrp.attributes.name }}"
    state: absent
  loop: "{{ query_for_clean.current }}"

- name: Query all fabric span destination groups ( clean after )
  cisco.aci.aci_fabric_span_dst_group:
    <<: *aci_info
    state: query
  register: query_for_clean

- name: Clean fabric span destination groups ( clean after )
  cisco.aci.aci_fabric_span_dst_group:
    <<: *aci_info
    destination_group: "{{ item.spanDestGrp.attributes.name }}"
    state: absent
  loop: "{{ query_for_clean.current }}"
