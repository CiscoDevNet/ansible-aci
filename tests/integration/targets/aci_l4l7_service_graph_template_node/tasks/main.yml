# Test code for the ACI modules
# Copyright: (c) 2021, Tim Cragg (@timcragg)

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI APIC host, ACI username and ACI password
  fail:
    msg: 'Please define the following variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

  # GET Credentials from the inventory
- name: Set vars
  set_fact:
    aci_info: &aci_info
      host: "{{ aci_hostname }}"
      username: "{{ aci_username }}"
      password: "{{ aci_password }}"
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: debug

# CLEAN ENVIRONMENT
- name: Remove ansible_tenant if it already exists
  aci_tenant:
    <<: *aci_info
    name: ansible_tenant
    state: absent

# CREATE TENANT
- name: Create ansible_tenant
  aci_tenant:
    <<: *aci_info
    name: ansible_tenant
    state: present

# CREATE DOMAIN
- name: Create ansible_phys_domain
  aci_domain:
    <<: *aci_info
    domain: ansible_phys_dom
    domain_type: phys
    state: present

# ADD DEVICE
- name: Create L4-L7 Device
  aci_l4l7_device:
    <<: *aci_info
    tenant: ansible_tenant
    device: ansible_device
    domain: ansible_phys_dom
    func_type: GoTo
    context_aware: single
    is_copy: no
    managed: no
    dev_type: physical
    svc_type: adc
    trunking: no
    prom_mode: yes
    state: present

# ADD SERVICE GRAPH TEMPLATE
- name: Create L4-L7 Service Graph Template
  aci_l4l7_service_graph_template:
    <<: *aci_info
    tenant: ansible_tenant
    service_graph: ansible_graph
    state: present

# ADD SERVICE GRAPH NODE
- name: Create L4-L7 Service Graph Node
  aci_l4l7_service_graph_template_node:
    <<: *aci_info
    tenant: ansible_tenant
    service_graph: ansible_graph
    node: ansible_node
    func_template_type: adc_one_arm
    func_type: GoTo
    device: ansible_device
    managed: no
    routing_mode: Redirect
    state: present
  register: add_l4l7_node

# VERIFY NODE CREATION
- name: Verify Node has been created correctly
  assert:
    that:
    - add_l4l7_node.current.0.vnsAbsNode.attributes.dn == "uni/tn-ansible_tenant/AbsGraph-ansible_graph/AbsNode-ansible_node"
    - add_l4l7_node.current.0.vnsAbsNode.attributes.name == "ansible_node"
    - add_l4l7_node.current.0.vnsAbsNode.attributes.funcType == "GoTo"
    - add_l4l7_node.current.0.vnsAbsNode.attributes.funcTemplateType == "ADC_ONE_ARM"
    - add_l4l7_node.current.0.vnsAbsNode.attributes.managed == "no"
    - add_l4l7_node.current.0.vnsAbsNode.attributes.routingMode == "Redirect"

# VERIFY NODE BINDING TO LOGICAL DEVICE
- name: Verify Node Binding to Logical Device
  assert:
    that:
    - add_l4l7_node.current.0.vnsAbsNode.children.0.vnsRsNodeToLDev.attributes.tDn == "uni/tn-ansible_tenant/lDevVip-ansible_device"

# ADD NODE AGAIN TO TEST IDEMPOTENCE
- name: Add Node again to check idempotence
  aci_l4l7_service_graph_template_node:
    <<: *aci_info
    tenant: ansible_tenant
    service_graph: ansible_graph
    node: ansible_node
    func_template_type: adc_one_arm
    func_type: GoTo
    device: ansible_device
    managed: no
    routing_mode: Redirect
    state: present
  register: add_l4l7_node_again

# VERIFY NODE IS NOT MODIFIED
- name: Verify Node has not changed
  assert:
    that:
    - add_l4l7_node_again is not changed
    - add_l4l7_node_again.current.0.vnsAbsNode.attributes.dn == "uni/tn-ansible_tenant/AbsGraph-ansible_graph/AbsNode-ansible_node"
    - add_l4l7_node_again.current.0.vnsAbsNode.attributes.name == "ansible_node"
    - add_l4l7_node_again.current.0.vnsAbsNode.attributes.funcType == "GoTo"
    - add_l4l7_node_again.current.0.vnsAbsNode.attributes.funcTemplateType == "ADC_ONE_ARM"
    - add_l4l7_node_again.current.0.vnsAbsNode.attributes.managed == "no"
    - add_l4l7_node_again.current.0.vnsAbsNode.attributes.routingMode == "Redirect"

# VERIFY NODE BINDING TO LOGICAL DEVICE
- name: Verify Node Binding to Logical Device is not changed
  assert:
    that:
    - add_l4l7_node_again is not changed
    - add_l4l7_node_again.current.0.vnsAbsNode.children.0.vnsRsNodeToLDev.attributes.tDn == "uni/tn-ansible_tenant/lDevVip-ansible_device"

# MODIFY L4-L7 NODE
- name: Update L4-L7 Service Graph Node
  aci_l4l7_service_graph_template_node:
    <<: *aci_info
    tenant: ansible_tenant
    service_graph: ansible_graph
    node: ansible_node
    func_template_type: adc_two_arm
    func_type: GoThrough
    device: ansible_device
    managed: yes
    routing_mode: Redirect
    state: present
  register: update_l4l7_node

# VERIFY NODE ATTRIBUTES
- name: Verify Node has not changed
  assert:
    that:
    - update_l4l7_node is changed
    - update_l4l7_node.current.0.vnsAbsNode.attributes.dn == "uni/tn-ansible_tenant/AbsGraph-ansible_graph/AbsNode-ansible_node"
    - update_l4l7_node.current.0.vnsAbsNode.attributes.name == "ansible_node"
    - update_l4l7_node.current.0.vnsAbsNode.attributes.funcType == "GoThrough"
    - update_l4l7_node.current.0.vnsAbsNode.attributes.funcTemplateType == "ADC_TWO_ARM"
    - update_l4l7_node.current.0.vnsAbsNode.attributes.managed == "yes"
    - update_l4l7_node.current.0.vnsAbsNode.attributes.routingMode == "Redirect"

# VERIFY NODE BINDING TO LOGICAL DEVICE
- name: Verify Node Binding to Logical Device
  assert:
    that:
    - add_l4l7_node_again is not changed
    - add_l4l7_node_again.current.0.vnsAbsNode.children.0.vnsRsNodeToLDev.attributes.tDn == "uni/tn-ansible_tenant/lDevVip-ansible_device"

# QUERY L4-L7 NODE
- name: Query L4-L7 Service Graph Node
  aci_l4l7_service_graph_template_node:
    <<: *aci_info
    tenant: ansible_tenant
    service_graph: ansible_graph
    node: ansible_node
    state: query
  register: query_l4l7_node

# VERIFY NODE ATTRIBUTES
- name: Verify Node has not changed
  assert:
    that:
    - query_l4l7_node is not changed
    - query_l4l7_node.current.0.vnsAbsNode.attributes.dn == "uni/tn-ansible_tenant/AbsGraph-ansible_graph/AbsNode-ansible_node"
    - query_l4l7_node.current.0.vnsAbsNode.attributes.name == "ansible_node"
    - query_l4l7_node.current.0.vnsAbsNode.attributes.funcType == "GoThrough"
    - query_l4l7_node.current.0.vnsAbsNode.attributes.funcTemplateType == "ADC_TWO_ARM"
    - query_l4l7_node.current.0.vnsAbsNode.attributes.managed == "yes"
    - query_l4l7_node.current.0.vnsAbsNode.attributes.routingMode == "Redirect"

# VERIFY NODE BINDING TO LOGICAL DEVICE
- name: Verify Node Binding to Logical Device
  assert:
    that:
    - query_l4l7_node is not changed
    - query_l4l7_node.current.0.vnsAbsNode.children.0.vnsRsNodeToLDev.attributes.tDn == "uni/tn-ansible_tenant/lDevVip-ansible_device"

# DELETE L4-L7 NODE
- name: Remove L4-L7 Service Graph Node
  aci_l4l7_service_graph_template_node:
    <<: *aci_info
    tenant: ansible_tenant
    service_graph: ansible_graph
    node: ansible_node
    state: absent
  register: delete_l4l7_node

# VERIFY NODE REMOVAL
- name: Verify Node removal
  assert:
    that:
    - delete_l4l7_node is changed
    - delete_l4l7_node.current == []
    - delete_l4l7_node.previous.0.vnsAbsNode.attributes.dn == "uni/tn-ansible_tenant/AbsGraph-ansible_graph/AbsNode-ansible_node"
    - delete_l4l7_node.previous.0.vnsAbsNode.attributes.name == "ansible_node"
    - delete_l4l7_node.previous.0.vnsAbsNode.attributes.funcType == "GoThrough"
    - delete_l4l7_node.previous.0.vnsAbsNode.attributes.funcTemplateType == "ADC_TWO_ARM"
    - delete_l4l7_node.previous.0.vnsAbsNode.attributes.managed == "yes"
    - delete_l4l7_node.previous.0.vnsAbsNode.attributes.routingMode == "Redirect"

# DELETE L4-L7 NODE AGAIN TO TEST IDEMPOTENCE
- name: Remove L4-L7 Service Graph Node again
  aci_l4l7_service_graph_template_node:
    <<: *aci_info
    tenant: ansible_tenant
    service_graph: ansible_graph
    node: ansible_node
    state: absent
  register: delete_l4l7_node_again

# VERIFY NODE REMOVAL IDEMPOTENCE
- name: Verify Node removal idempotence
  assert:
    that:
    - delete_l4l7_node_again is not changed
    - delete_l4l7_node_again.current == []

# CLEAN UP
- name: Remove ansible_tenant
  aci_tenant:
    <<: *aci_info
    name: ansible_tenant
    state: absent

- name: Remove ansible_phys_dom
  aci_domain:
    <<: *aci_info
    domain: ansible_phys_dom
    domain_type: phys
    state: absent
