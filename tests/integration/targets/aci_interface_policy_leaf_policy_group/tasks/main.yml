# Test code for the ACI modules
# Copyright: (c) 2023, Anvitha Jain <anvjain@cisco.com>
# Copyright: (c) 2017, Bruno Calogero <brunocalogero@hotmail.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI APIC host, ACI username and ACI password
  fail:
    msg: 'Please define the following variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

# GET Credentials from the inventory
- name: Set vars
  set_fact:
    aci_info: &aci_info
      host: "{{ aci_hostname }}"
      username: "{{ aci_username }}"
      password: "{{ aci_password }}"
      validate_certs: "{{ aci_validate_certs | default(false) }}"
      use_ssl: "{{ aci_use_ssl | default(true) }}"
      use_proxy: "{{ aci_use_proxy | default(true) }}"
      output_level: debug

- name: Query system information
  cisco.aci.aci_system:
    <<: *aci_info
    id: 1
    state: query
  register: version

- name: Verify Cloud and Non-Cloud Sites in use.
  include_tasks: ../../../../../../integration/targets/aci_cloud_provider/tasks/main.yml

- name: Execute tasks only for non-cloud sites
  when: query_cloud.current == []  # This condition will execute only non-cloud sites
  block:  # block specifies execution of tasks within, based on conditions
  - name: Making sure interface_policy_leaf_policy_group doesn't exist at beginning of test (PC)
    cisco.aci.aci_interface_policy_leaf_policy_group: &aci_interface_policy_leaf_policy_group_link_absent
      <<: *aci_info
      policy_group: policygroupname_link
      lag_type: link
      state: absent

  - name: Making sure interface_policy_leaf_policy_group doesn't exist at beginning of test (VPC)
    cisco.aci.aci_interface_policy_leaf_policy_group: &aci_interface_policy_leaf_policy_group_node_absent
      <<: *aci_info
      policy_group: policygroupname_node
      lag_type: node
      state: absent

  - name: Making sure interface_policy_leaf_policy_group doesn't exist at beginning of test (Leaf Access Port)
    cisco.aci.aci_interface_policy_leaf_policy_group: &aci_interface_policy_leaf_policy_group_leaf_absent
      <<: *aci_info
      policy_group: policygroupname_leaf
      lag_type: leaf
      state: absent

  # ==== TESTING Port Channel (PC), lag_type: link ====

  - name: Adding a interface policy leaf policy group (PC) - check mode works
    cisco.aci.aci_interface_policy_leaf_policy_group: &aci_interface_policy_leaf_policy_group_link_present
      <<: *aci_info
      policy_group: policygroupname_link
      lag_type: link
      link_level_policy: linklevelpolicy
      fibre_channel_interface_policy: fiberchannelpolicy
      state: present
    check_mode: true
    register: intf_policy_leaf_polgrp_check_mode_present

  - name: Adding a interface policy leaf policy group (PC) - creation works
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_interface_policy_leaf_policy_group_link_present
    register: intf_policy_leaf_polgrp_present

  - name: Adding a interface policy leaf policy group (PC) - idempotency works
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_interface_policy_leaf_policy_group_link_present
    register: intf_policy_leaf_polgrp_idempotent

  - name: Adding a interface policy leaf policy group description (PC) - update works
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_interface_policy_leaf_policy_group_link_present
      description: policygroup description
    register: intf_policy_leaf_polgrp_update

  # TODO: also test for errors
  - name: present assertions for interface policy leaf policy group (PC)
    assert:
      that:
      - intf_policy_leaf_polgrp_check_mode_present is changed
      - intf_policy_leaf_polgrp_present is changed
      - intf_policy_leaf_polgrp_present.previous == []
      - intf_policy_leaf_polgrp_present.sent.infraAccBndlGrp.attributes.lagT == 'link'
      - intf_policy_leaf_polgrp_present.sent.infraAccBndlGrp.attributes.name == 'policygroupname_link'
      - intf_policy_leaf_polgrp_present.sent.infraAccBndlGrp.children.0.infraRsFcIfPol.attributes.tnFcIfPolName == 'fiberchannelpolicy'
      - intf_policy_leaf_polgrp_present.sent.infraAccBndlGrp.children.1.infraRsHIfPol.attributes.tnFabricHIfPolName == 'linklevelpolicy'
      - intf_policy_leaf_polgrp_present.current.0.infraAccBndlGrp.attributes.annotation == 'orchestrator:ansible'
      - intf_policy_leaf_polgrp_idempotent is not changed
      - intf_policy_leaf_polgrp_idempotent.sent == {}
      - intf_policy_leaf_polgrp_update is changed
      - intf_policy_leaf_polgrp_update.sent.infraAccBndlGrp.attributes.descr == 'policygroup description'

  - name: Query interface policy leaf policy group (PC)
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_info
      policy_group: policygroupname_link
      lag_type: link
      state: query
    register: binding_query

  - name: Query assertions for interface policy leaf policy group (PC)
    assert:
      that:
        - binding_query is not changed
        - binding_query.current | length >= 1
        - '"/api/mo/uni/infra/funcprof/accbundle-policygroupname_link.json" in binding_query.url'

  - name: Remove interface policy leaf policy group (PC) - check mode
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_interface_policy_leaf_policy_group_link_absent
    check_mode: true
    register: intf_policy_leaf_polgrp_check_mode_absent

  - name: Remove interface policy leaf policy group (PC) - delete works
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_interface_policy_leaf_policy_group_link_absent
    register: intf_policy_leaf_polgrp_absent

  - name: Remove interface policy leaf policy group (PC) - idempotency works
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_interface_policy_leaf_policy_group_link_absent
    register: intf_policy_leaf_polgrp_absent_idempotent

  - name: Remove interface policy leaf policy group (PC) - check mode
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_info
      policy_group: policygroupname_link
      #lag_type: link
      state: absent
    ignore_errors: true
    register: intf_policy_leaf_polgrp_absent_missing_param

  - name: absent assertions for interface policy leaf policy group (PC)
    assert:
      that:
        - intf_policy_leaf_polgrp_check_mode_absent is changed
        - intf_policy_leaf_polgrp_check_mode_absent.previous != []
        - intf_policy_leaf_polgrp_absent is changed
        - intf_policy_leaf_polgrp_absent.previous == intf_policy_leaf_polgrp_absent.previous
        - intf_policy_leaf_polgrp_absent_idempotent is not changed
        - intf_policy_leaf_polgrp_absent_idempotent.previous == []
        - intf_policy_leaf_polgrp_absent_missing_param is failed
        - 'intf_policy_leaf_polgrp_absent_missing_param.msg == "missing required arguments: lag_type"'

  # ==== END TESTING Port Channel (PC), lag_type: link ====


  # ==== START TESTING Virtual Port Channel (VPC), lag_type: node ====

  - name: Making sure interface_policy_leaf_policy_group doesn't exist at beginning of test (VPC)
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_interface_policy_leaf_policy_group_node_absent

  - name: Adding a interface policy leaf policy group (VPC) - check mode works
    cisco.aci.aci_interface_policy_leaf_policy_group: &aci_interface_policy_leaf_policy_group_node_present
      <<: *aci_info
      policy_group: policygroupname_node
      lag_type: node
      link_level_policy: linklevelpolicy
      fibre_channel_interface_policy: fiberchannelpolicy
      state: present
    check_mode: true
    register: intf_policy_leaf_polgrp_check_mode_present

  - name: Adding a interface policy leaf policy group (VPC) - creation works
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_interface_policy_leaf_policy_group_node_present
    register: intf_policy_leaf_polgrp_present

  - name: Adding a interface policy leaf policy group (VPC) - idempotency works
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_interface_policy_leaf_policy_group_node_present
    register: intf_policy_leaf_polgrp_idempotent

  - name: Adding a interface policy leaf policy group description (VPC) - update works
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_interface_policy_leaf_policy_group_node_present
      description: policygroup description
    register: intf_policy_leaf_polgrp_update

  # TODO: also test for errors
  - name: present assertions for interface policy leaf policy group (VPC)
    assert:
      that:
      - intf_policy_leaf_polgrp_check_mode_present is changed
      - intf_policy_leaf_polgrp_present is changed
      - intf_policy_leaf_polgrp_present.previous == []
      - intf_policy_leaf_polgrp_present.sent.infraAccBndlGrp.attributes.lagT == 'node'
      - intf_policy_leaf_polgrp_present.sent.infraAccBndlGrp.attributes.name == 'policygroupname_node'
      - intf_policy_leaf_polgrp_present.sent.infraAccBndlGrp.children.0.infraRsFcIfPol.attributes.tnFcIfPolName == 'fiberchannelpolicy'
      - intf_policy_leaf_polgrp_present.sent.infraAccBndlGrp.children.1.infraRsHIfPol.attributes.tnFabricHIfPolName == 'linklevelpolicy'
      - intf_policy_leaf_polgrp_present.sent.infraAccBndlGrp.attributes.name == 'policygroupname_node'
      - intf_policy_leaf_polgrp_idempotent is not changed
      - intf_policy_leaf_polgrp_idempotent.sent == {}
      - intf_policy_leaf_polgrp_update is changed
      - intf_policy_leaf_polgrp_update.sent.infraAccBndlGrp.attributes.descr == 'policygroup description'

  - name: Query interface policy leaf policy group (VPC)
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_info
      policy_group: policygroupname_node
      lag_type: node
      state: query
    register: binding_query

  - name: Query assertions for interface policy leaf policy group (VPC)
    assert:
      that:
        - binding_query is not changed
        - binding_query.current | length >= 1
        - '"/api/mo/uni/infra/funcprof/accbundle-policygroupname_node.json" in binding_query.url'

  # Add lag_type link to see what we get back
  - name: Adding a interface policy leaf policy group (PC) - creation works
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_interface_policy_leaf_policy_group_link_present
    register: intf_policy_leaf_polgrp_present

  - name: Query interface policy leaf policy group (VPC)
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_info
      lag_type: node
      state: query
    register: binding_query_node_all

  - name: Query assertions for interface policy leaf policy group (VPC)
    assert:
      that:
        - binding_query_node_all is not changed
        - binding_query_node_all.current | length >= 1
        - binding_query_node_all.current | selectattr("infraAccBndlGrp.attributes.lagT", "equalto", "link") | list == []
        - '"/api/class/infraAccBndlGrp.json" in binding_query_node_all.url'

  - name: Remove interface policy leaf policy group (VPC) - check mode
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_interface_policy_leaf_policy_group_node_absent
    check_mode: true
    register: intf_policy_leaf_polgrp_check_mode_absent

  - name: Remove interface policy leaf policy group (VPC) - delete works
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_interface_policy_leaf_policy_group_node_absent
    register: intf_policy_leaf_polgrp_absent

  - name: Remove interface policy leaf policy group (VPC) - idempotency works
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_interface_policy_leaf_policy_group_node_absent
    register: intf_policy_leaf_polgrp_absent_idempotent

  - name: Remove interface policy leaf policy group (VPC) - without lag_type
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_info
      policy_group: policygroupname_node
      state: absent
    ignore_errors: true
    register: intf_policy_leaf_polgrp_absent_missing_param

  - name: absent assertions for interface policy leaf policy group (VPC)
    assert:
      that:
        - intf_policy_leaf_polgrp_check_mode_absent is changed
        - intf_policy_leaf_polgrp_check_mode_absent.previous != []
        - intf_policy_leaf_polgrp_absent is changed
        - intf_policy_leaf_polgrp_absent.previous == intf_policy_leaf_polgrp_absent.previous
        - intf_policy_leaf_polgrp_absent_idempotent is not changed
        - intf_policy_leaf_polgrp_absent_idempotent.previous == []
        - intf_policy_leaf_polgrp_absent_missing_param is failed
        - 'intf_policy_leaf_polgrp_absent_missing_param.msg == "missing required arguments: lag_type"'

  - name: Adding a interface policy leaf policy group (VPC) - port_channel_policy not supported error
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_interface_policy_leaf_policy_group_link_present
      port_authentication: "default"
    ignore_errors: true
    register: intf_policy_leaf_polgrp_pa_policy_error

  - name: VPC error assertions (adding invalid parameters)
    assert:
      that:
      - intf_policy_leaf_polgrp_pa_policy_error.msg == 'port_authentication is not a valid parameter for link/node (Port Channel, Virtual Port Channel), if used assign null to it (port_authentication{{":"}} null).'

  # ==== END TESTING Virtual Port Channel (VPC), lag_type: node ====


  # ==== START TESTING Virtual Port Channel (VPC), lag_type: leaf ====

  - name: Making sure interface_policy_leaf_policy_group doesn't exist at beginning of test (Leaf Access Port)
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_interface_policy_leaf_policy_group_leaf_absent

  - name: Adding a interface policy leaf policy group (Leaf Access Port) - check mode works
    cisco.aci.aci_interface_policy_leaf_policy_group: &aci_interface_policy_leaf_policy_group_leaf_present
      <<: *aci_info
      policy_group: policygroupname_leaf
      lag_type: leaf
      link_level_policy: linklevelpolicy
      fibre_channel_interface_policy: fiberchannelpolicy
      aep: test_aep
      state: present
    check_mode: true
    register: intf_policy_leaf_polgrp_check_mode_present

  - name: Adding a interface policy leaf policy group (Leaf Access Port) - creation works
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_interface_policy_leaf_policy_group_leaf_present
    register: intf_policy_leaf_polgrp_present

  - name: Adding a interface policy leaf policy group (Leaf Access Port) - idempotency works
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_interface_policy_leaf_policy_group_leaf_present
    register: intf_policy_leaf_polgrp_idempotent

  - name: Adding a interface policy leaf policy group description (Leaf Access Port) - update works
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_interface_policy_leaf_policy_group_leaf_present
      description: policygroup description
    register: intf_policy_leaf_polgrp_update

  - name: Adding a interface policy leaf policy group (Leaf Access Port) - null parameter works
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_interface_policy_leaf_policy_group_leaf_present
      port_channel_policy: null
    ignore_errors: true
    register: intf_policy_leaf_polgrp_parameter

  - name: Adding a interface policy leaf policy group (Leaf Access Port) - port_channel_policy not supported error
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_interface_policy_leaf_policy_group_leaf_present
      port_channel_policy: "default"
    ignore_errors: true
    register: intf_policy_leaf_polgrp_pc_policy_error

  # TODO: also test for errors
  - name: present assertions for interface policy leaf policy group (Leaf Access Port)
    assert:
      that:
      - intf_policy_leaf_polgrp_check_mode_present is changed
      - intf_policy_leaf_polgrp_present is changed
      - intf_policy_leaf_polgrp_present.previous == []
      - intf_policy_leaf_polgrp_present.sent.infraAccPortGrp.attributes.name == 'policygroupname_leaf'
      - intf_policy_leaf_polgrp_present.sent.infraAccPortGrp.children.0.infraRsFcIfPol.attributes.tnFcIfPolName == 'fiberchannelpolicy'
      - intf_policy_leaf_polgrp_present.sent.infraAccPortGrp.children.1.infraRsHIfPol.attributes.tnFabricHIfPolName == 'linklevelpolicy'
      - intf_policy_leaf_polgrp_present.sent.infraAccPortGrp.children.2.infraRsAttEntP.attributes.tDn == "uni/infra/attentp-test_aep"
      - intf_policy_leaf_polgrp_idempotent is not changed
      - intf_policy_leaf_polgrp_idempotent.sent == {}
      - intf_policy_leaf_polgrp_update is changed
      - intf_policy_leaf_polgrp_update.sent.infraAccPortGrp.attributes.descr == 'policygroup description'
      - intf_policy_leaf_polgrp_parameter is not changed
      - intf_policy_leaf_polgrp_pc_policy_error.msg == 'port_channel_policy is not a valid parameter for leaf (leaf access port policy group), if used assign null to it (port_channel_policy{{":"}} null).'

  - name: Query interface policy leaf policy group (Leaf Access Port)
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_info
      policy_group: policygroupname_leaf
      lag_type: leaf
      state: query
    register: binding_query

  - name: Query assertions interface policy leaf policy group (Leaf Access Port)
    assert:
      that:
        - binding_query is not changed
        - binding_query.current | length >= 1
        - '"/api/mo/uni/infra/funcprof/accportgrp-policygroupname_leaf.json" in binding_query.url'
        - binding_query.current.0.infraAccPortGrp.children.14.infraRsAttEntP.attributes.tDn == "uni/infra/attentp-test_aep"

  - name: Remove interface policy leaf policy group (Leaf Access Port) - check mode
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_interface_policy_leaf_policy_group_leaf_absent
    check_mode: true
    register: intf_policy_leaf_polgrp_check_mode_absent

  - name: Remove interface policy leaf policy group (Leaf Access Port) - delete works
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_interface_policy_leaf_policy_group_leaf_absent
    register: intf_policy_leaf_polgrp_absent

  - name: Remove interface policy leaf policy group (Leaf Access Port) - idempotency works
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_interface_policy_leaf_policy_group_leaf_absent
    register: intf_policy_leaf_polgrp_absent_idempotent

  - name: Remove interface policy leaf policy group (Leaf Access Port) - without lag_type
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_info
      policy_group: policygroupname_leaf
      state: absent
    ignore_errors: true
    register: intf_policy_leaf_polgrp_absent_missing_param

  - name: absent assertions for interface policy leaf policy group (Leaf Access Port)
    assert:
      that:
        - intf_policy_leaf_polgrp_check_mode_absent is changed
        - intf_policy_leaf_polgrp_check_mode_absent.previous != []
        - intf_policy_leaf_polgrp_absent is changed
        - intf_policy_leaf_polgrp_absent.previous == intf_policy_leaf_polgrp_absent.previous
        - intf_policy_leaf_polgrp_absent_idempotent is not changed
        - intf_policy_leaf_polgrp_absent_idempotent.previous == []
        - intf_policy_leaf_polgrp_absent_missing_param is failed
        - 'intf_policy_leaf_polgrp_absent_missing_param.msg == "missing required arguments: lag_type"'
        
  # ==== END TESTING Virtual Port Channel (VPC), lag_type: leaf ====


  # ==== START TESTING PortCHannel (PC - lag_type: link), Virtual Port Channel (VPC - node: leaf) and Leaf Interface (lag_type: leaf) ====
  # ==== For parameters avaiable only for APIC versions > 5 ====

  - name: Execute tasks only for the APIC version version > 5
    when: version.current.0.topSystem.attributes.version is version('5', '>')
    block:

      # ==== TESTING Port Channel (PC) ====
      - name: Adding a interface policy leaf policy group (PC) - APIC version > 5
        cisco.aci.aci_interface_policy_leaf_policy_group:
          <<: *aci_interface_policy_leaf_policy_group_link_present
          sync_e_interface_policy: synceinterfacepolicy
          state: present
        register: intf_policy_leaf_policy_group_link_present_2

      - name: present assertions (PC) for APIC version > 5
        assert:
          that:
          - intf_policy_leaf_policy_group_link_present_2 is changed
          - intf_policy_leaf_policy_group_link_present_2.previous != []
          - intf_policy_leaf_policy_group_link_present_2.current[0].infraAccBndlGrp.attributes.name == 'policygroupname_link'
          - intf_policy_leaf_policy_group_link_present_2.sent.infraAccBndlGrp.children.0.infraRsSynceEthIfPolBndlGrp.attributes.tnSynceEthIfPolName == 'synceinterfacepolicy'

      # ==== TESTING Leaf Interface ====
      - name: Adding a interface policy leaf policy group (Leaf Access Port) - APIC version > 5
        cisco.aci.aci_interface_policy_leaf_policy_group:
          <<: *aci_interface_policy_leaf_policy_group_leaf_present
          sync_e_interface_policy: synceinterfacepolicy
          state: present
        register: intf_policy_leaf_polgrp_present_2

      - name: present assertions (Leaf Access Port) for APIC version > 5
        assert:
          that:
          - intf_policy_leaf_polgrp_present_2 is changed
          - intf_policy_leaf_polgrp_present_2.previous == []
          - intf_policy_leaf_polgrp_present_2.sent.infraAccPortGrp.attributes.name == 'policygroupname_leaf'
          - intf_policy_leaf_polgrp_present_2.sent.infraAccPortGrp.children.0.infraRsFcIfPol.attributes.tnFcIfPolName == 'fiberchannelpolicy'
          - intf_policy_leaf_polgrp_present_2.sent.infraAccPortGrp.children.1.infraRsHIfPol.attributes.tnFabricHIfPolName == 'linklevelpolicy'
          - intf_policy_leaf_polgrp_present_2.sent.infraAccPortGrp.children.2.infraRsAttEntP.attributes.tDn == 'uni/infra/attentp-test_aep'
          - intf_policy_leaf_polgrp_present_2.sent.infraAccPortGrp.children.3.infraRsSynceEthIfPol.attributes.tnSynceEthIfPolName == 'synceinterfacepolicy'

  # ==== END TESTING for parameters avaiable only for APIC versions > 5 ====


  # ==== START TESTING PortCHannel (PC - lag_type: link), Virtual Port Channel (VPC - node: leaf) and Leaf Interface (lag_type: leaf) ====
  # ==== For parameters avaiable only for APIC versions >= 6 ====

  - name: Execute tasks only for the APIC version version >= 6
    when: version.current.0.topSystem.attributes.version is version('6', '>=')
    block:
      # ==== TESTING Virtual Port Channel (VPC) ====
      - name: Adding a interface policy leaf policy group (VPC) - APIC version > 6
        cisco.aci.aci_interface_policy_leaf_policy_group:
          <<: *aci_interface_policy_leaf_policy_group_node_present
          sync_e_interface_policy: synceinterfacepolicy
          state: present
        register: intf_policy_leaf_policy_group_node_present_2

      - name: present assertions (VPC) for APIC version > 6
        assert:
          that:
          - intf_policy_leaf_policy_group_node_present_2 is changed
          - intf_policy_leaf_policy_group_node_present_2.previous == []
          - intf_policy_leaf_policy_group_node_present_2.current[0].infraAccBndlGrp.attributes.name == 'policygroupname_node'
          - intf_policy_leaf_policy_group_node_present_2.sent.infraAccBndlGrp.children.0.infraRsFcIfPol.attributes.tnFcIfPolName == 'fiberchannelpolicy'
          - intf_policy_leaf_policy_group_node_present_2.sent.infraAccBndlGrp.children.1.infraRsHIfPol.attributes.tnFabricHIfPolName == 'linklevelpolicy'
          - intf_policy_leaf_policy_group_node_present_2.sent.infraAccBndlGrp.children.2.infraRsSynceEthIfPolBndlGrp.attributes.tnSynceEthIfPolName == 'synceinterfacepolicy'

  - name: Execute tasks only for the APIC version version >= 6.0.2
    when: version.current.0.topSystem.attributes.version is version('6.0(2h)', '>=')
    block:
      # ==== TESTING Leaf Interface ====
      - name: Adding a interface policy leaf policy group (Leaf Access Port) - APIC version >= 6.0.2
        cisco.aci.aci_interface_policy_leaf_policy_group:
          <<: *aci_interface_policy_leaf_policy_group_leaf_present
          transceiver_policy: 
            name: transceiverpolicy
            type: zr
          state: present
        register: intf_policy_leaf_polgrp_present_3

      - name: present assertions (Leaf Access Port) for APIC version >= 6.0.2
        assert:
          that:
          - intf_policy_leaf_polgrp_present_3 is changed
          - intf_policy_leaf_polgrp_present_3.previous != []
          - intf_policy_leaf_polgrp_present_3.current[0].infraAccPortGrp.attributes.name == 'policygroupname_leaf'
          - intf_policy_leaf_polgrp_present_3.sent.infraAccPortGrp.children.0.infraRsOpticsIfPol.attributes.tDn == 'uni/infra/zr-transceiverpolicy'

      - name: Adding all the policies for leaf policy group (Leaf Access Port)
        cisco.aci.aci_interface_policy_leaf_policy_group:
          <<: *aci_interface_policy_leaf_policy_group_leaf_present
          cdp_policy: cdppolicy
          mcp_policy: mcppolicy
          lldp_policy: lldppolicy
          stp_interface_policy: stppolicy
          egress_data_plane_policing_policy: egressdataplanepolicingpolicy
          ingress_data_plane_policing_policy: ingressdataplanepolicingpolicy
          priority_flow_control_policy: priorityflowcontrolpolicy
          slow_drain_policy: slowdrainpolicy
          monitoring_policy: monitoringpolicy
          storm_control_interface_policy: stormcontrolinterfacepolicy
          l2_interface_policy: l2interfacepolicy
          port_security_policy: portsecuritypolicy
          link_flap_policy: linkflappolicy
          link_level_flow_control: linklevelflowcontrol
          mac_sec_interface_policy: macsecinterfacepolicy
          copp_policy: copppolicy
          dwdm: dwdmpolicy
          port_authentication: portauthenticationpolicy
          poe_interface_policy: poeinterfacepolicy
          state: present
        register: intf_policy_leaf_polgrp_all_policy_present

      - name: present assertions (Leaf Access Port) for all the policies.
        assert:
          that:
          - intf_policy_leaf_polgrp_all_policy_present is changed
          - intf_policy_leaf_polgrp_all_policy_present.previous != []
          - intf_policy_leaf_polgrp_all_policy_present.current[0].infraAccPortGrp.attributes.name == 'policygroupname_leaf'
          - intf_policy_leaf_polgrp_all_policy_present.sent.infraAccPortGrp.children.0.infraRsCdpIfPol.attributes.tnCdpIfPolName == 'cdppolicy'
          - intf_policy_leaf_polgrp_all_policy_present.sent.infraAccPortGrp.children.1.infraRsL2IfPol.attributes.tnL2IfPolName == 'l2interfacepolicy'
          - intf_policy_leaf_polgrp_all_policy_present.sent.infraAccPortGrp.children.2.infraRsL2PortSecurityPol.attributes.tnL2PortSecurityPolName == 'portsecuritypolicy'
