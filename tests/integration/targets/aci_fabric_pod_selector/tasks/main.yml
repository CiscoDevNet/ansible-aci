# Test code for the ACI modules
# Copyright: (c) 2023, Tim Cragg (@timcragg)

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI APIC host, ACI username and ACI password
  fail:
    msg: 'Please define the following variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

- name: Set vars
  set_fact:
   aci_info: &aci_info
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: '{{ aci_output_level | default("info") }}'

# STORE EXISTING FABRIC POD SELECTOR
- name: Query existing Fabric Pod Selector
  cisco.aci.aci_fabric_pod_selector:
    <<: *aci_info
    name: default
    type: all
    pod_profile: default
    state: query
  register: existing_selector

# UPDATE FABRIC POD SELECTOR
- name: Create the ansible_fabric_pod_pol_grp Policy Group
  cisco.aci.aci_fabric_pod_policy_group:
    <<: *aci_info
    name: ansible_fabric_pod_pol_grp

- name: Update Fabric Pod Selector
  cisco.aci.aci_fabric_pod_selector:
    <<: *aci_info
    name: default
    type: all
    pod_profile: default
    description: Updated Ansible Pod Selector
    policy_group: ansible_fabric_pod_pol_grp
  register: update_pod_sel

- name: Verify update of Pod Selector
  ansible.builtin.assert:
    that:
    - update_pod_sel is changed
    - update_pod_sel.current.0.fabricPodS.attributes.dn == "uni/fabric/podprof-default/pods-default-typ-ALL"
    - update_pod_sel.current.0.fabricPodS.attributes.name == "default"
    - update_pod_sel.current.0.fabricPodS.attributes.descr == "Updated Ansible Pod Selector"
    - update_pod_sel.current.0.fabricPodS.attributes.type == "ALL"
    - update_pod_sel.current.0.fabricPodS.children.0.fabricRsPodPGrp.attributes.tDn == "uni/fabric/funcprof/podpgrp-ansible_fabric_pod_pol_grp"

# QUERY FABRIC POD SELECTOR
- name: Query a Fabric Pod Selector
  cisco.aci.aci_fabric_pod_selector:
    <<: *aci_info
    name: default
    type: all
    pod_profile: default
    state: query
  register: query_one

- name: Query all Fabric Pod Selectors
  cisco.aci.aci_fabric_pod_selector:
    <<: *aci_info
    state: query
  register: query_all

- name: Verify Fabric Pod Selector queries
  ansible.builtin.assert:
    that:
    - query_one is not changed
    - query_one.current.0.fabricPodS.attributes.dn == "uni/fabric/podprof-default/pods-default-typ-ALL"
    - query_one.current.0.fabricPodS.attributes.name == "default"
    - query_one.current.0.fabricPodS.attributes.descr == "Updated Ansible Pod Selector"
    - query_one.current.0.fabricPodS.attributes.type == "ALL"
    - query_one.current.0.fabricPodS.children.0.fabricRsPodPGrp.attributes.tDn == "uni/fabric/funcprof/podpgrp-ansible_fabric_pod_pol_grp"
    - query_all is not changed

# CLEAN UP
- name: Remove the ansible_fabric_pod_pol_grp1 Policy Group
  cisco.aci.aci_fabric_pod_policy_group:
    <<: *aci_info
    name: ansible_fabric_pod_pol_grp1
    state: absent

- name: Restore original Pod Selector settings
  cisco.aci.aci_fabric_pod_selector:
    <<: *aci_info
    name: default
    type: all
    pod_profile: default
    description: "{{ existing_selector.current.0.fabricPodS.attributes.descr }}"
    policy_group: "{{ existing_selector.current.0.fabricPodS.children.0.fabricRsPodPGrp.attributes.tDn | split('/podpgrp-') | last }}"
