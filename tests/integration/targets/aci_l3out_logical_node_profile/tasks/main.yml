# Test code for the ACI modules
# Copyright: (c) 2021, Jason Juenger (@jasonjuenger)
# Copyright: (c) 2023, Akini Ross (@akinross) <akinross@cisco.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI APIC host, ACI username and ACI password
  ansible.builtin.fail:
    msg: 'Please define the following variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

- name: Set vars
  ansible.builtin.set_fact:
    aci_info: &aci_info
      host: "{{ aci_hostname }}"
      username: "{{ aci_username }}"
      password: "{{ aci_password }}"
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: info

- name: Query system information
  cisco.aci.aci_system:
    <<: *aci_info
    id: 1
    state: query
  register: version

# CLEAN ENVIRONMENT
- name: Remove the ansible_tenant
  cisco.aci.aci_tenant:
    <<: *aci_info
    tenant: ansible_tenant
    state: absent

- name: Verify Cloud and Non-Cloud Sites in use.
  ansible.builtin.include_tasks: ../../../../../../integration/targets/aci_cloud_provider/tasks/main.yml

- name: Execute tasks only for non-cloud sites
  when: query_cloud.current == []  # This condition will execute only non-cloud sites
  block:  # block specifies execution of tasks within, based on conditions
  - name: Create tenant for tests
    cisco.aci.aci_tenant:
      <<: *aci_info
      state: present
      tenant: ansible_tenant
    register: tenant_present

  - name: Create L3out for tests
    cisco.aci.aci_l3out:
      <<: *aci_info
      state: present
      tenant: ansible_tenant
      l3out: ansible_l3out
      domain: ansible_dom
      route_control: export
      vrf: ansible_vrf
      l3protocol: ospf
    register: l3out_present

  - name: Add L3out node profile (check mode)
    cisco.aci.aci_l3out_logical_node_profile: &aci_node_profile_present
      <<: *aci_info
      node_profile: ansible_node_profile
      description: 'Node profile for Ansible testing'
      dscp: CS0
      l3out: ansible_l3out
      tenant: ansible_tenant
      state: present
    check_mode: true
    register: cm_add_node_profile

  - name: Add L3out node profile (normal mode)
    cisco.aci.aci_l3out_logical_node_profile: *aci_node_profile_present
    register: nm_add_node_profile

  - name: Add another L3out node profile (normal mode)
    cisco.aci.aci_l3out_logical_node_profile:
      <<: *aci_info
      node_profile: ansible_node_profile2
      description: 'Second node profile for Ansible testing'
      dscp: CS0
      l3out: ansible_l3out
      tenant: ansible_tenant
      state: present
    register: nm_add_second_node_profile

  - name: Verify add_node_profile
    ansible.builtin.assert:
      that:
      - cm_add_node_profile is changed
      - nm_add_node_profile is changed
      - nm_add_second_node_profile is changed
      - cm_add_node_profile.sent.l3extLNodeP.attributes.descr == nm_add_node_profile.sent.l3extLNodeP.attributes.descr == 'Node profile for Ansible testing'
      - cm_add_node_profile.sent.l3extLNodeP.attributes.name == nm_add_node_profile.sent.l3extLNodeP.attributes.name == 'ansible_node_profile'
      - cm_add_node_profile.proposed.l3extLNodeP.attributes.descr == nm_add_node_profile.proposed.l3extLNodeP.attributes.descr == 'Node profile for Ansible testing'
      - cm_add_node_profile.proposed.l3extLNodeP.attributes.name == nm_add_node_profile.proposed.l3extLNodeP.attributes.name == 'ansible_node_profile'
      - cm_add_node_profile.current == cm_add_node_profile.previous == nm_add_node_profile.previous == []
      - nm_add_node_profile.current.0.l3extLNodeP.attributes.dn == 'uni/tn-ansible_tenant/out-ansible_l3out/lnodep-ansible_node_profile'
      - nm_add_node_profile.current.0.l3extLNodeP.attributes.name == 'ansible_node_profile'
      - nm_add_node_profile.current.0.l3extLNodeP.attributes.annotation == 'orchestrator:ansible'
      - nm_add_second_node_profile.current.0.l3extLNodeP.attributes.dn == 'uni/tn-ansible_tenant/out-ansible_l3out/lnodep-ansible_node_profile2'
      - nm_add_second_node_profile.current.0.l3extLNodeP.attributes.name == 'ansible_node_profile2'

  - name: Modify node profile (check mode)
    cisco.aci.aci_l3out_logical_node_profile: &aci_node_profile_modify
      <<: *aci_info
      node_profile: ansible_node_profile
      description: 'my_updated_descr'
      l3out: ansible_l3out
      tenant: ansible_tenant
      state: present
    check_mode: true
    register: cm_mod_node_profile

  - name: Modify node profile (normal mode)
    cisco.aci.aci_l3out_logical_node_profile: *aci_node_profile_modify
    register: nm_mod_node_profile

  - name: Verify mod_node_profile
    ansible.builtin.assert:
      that:
      - cm_mod_node_profile is changed
      - nm_mod_node_profile is changed
      - cm_mod_node_profile.sent.l3extLNodeP.attributes.descr == nm_mod_node_profile.sent.l3extLNodeP.attributes.descr == 'my_updated_descr'
      - cm_mod_node_profile.proposed.l3extLNodeP.attributes.descr == nm_mod_node_profile.proposed.l3extLNodeP.attributes.descr == 'my_updated_descr'
      - nm_mod_node_profile.current.0.l3extLNodeP.attributes.dn == 'uni/tn-ansible_tenant/out-ansible_l3out/lnodep-ansible_node_profile'
      - nm_mod_node_profile.current.0.l3extLNodeP.attributes.name == 'ansible_node_profile'

  - name: Execute tasks only for APIC version 5.x and above
    when:
    - version.current.0.topSystem.attributes.version is version('5', '>=')  # This condition will execute only for APIC version 5.x and above
    block: 

    - name: Ensure infra SR-MPLS l3out does not exist
      cisco.aci.aci_l3out: &aci_infra_sr_mpls_l3out_absent
        <<: *aci_info
        tenant: infra
        name: ansible_infra_sr_mpls_l3out
        domain: ansible_dom
        vrf: overlay-1
        mpls: "yes"
        l3protocol: bgp
        state: absent

    - name: Add a infra SR-MPLS l3out 
      cisco.aci.aci_l3out:
        <<: *aci_infra_sr_mpls_l3out_absent
        state: present

    - name: Add a node profile with MPLS custom QoS policy 
      cisco.aci.aci_l3out_logical_node_profile: &aci_infra_node_profile_qos
        <<: *aci_info
        tenant: infra
        l3out: ansible_infra_sr_mpls_l3out
        node_profile: ansible_infra_sr_mpls_l3out_node_profile
        mpls_custom_qos_policy: ansible_test_mpls_custom_qos_policy
      register: nm_add_node_profile_qos

    - name: Modify MPLS custom QoS policy to node profile
      cisco.aci.aci_l3out_logical_node_profile: &aci_infra_node_profile_qos_changed
        <<: *aci_infra_node_profile_qos
        mpls_custom_qos_policy: ansible_test_mpls_custom_qos_policy_changed
      register: nm_mod_node_profile_qos_changed

    - name: Modify MPLS custom QoS policy to node profile again
      cisco.aci.aci_l3out_logical_node_profile: 
        <<: *aci_infra_node_profile_qos_changed
      register: nm_mod_node_profile_qos_again

    - name: Remove MPLS custom QoS policy from node profile again
      cisco.aci.aci_l3out_logical_node_profile: 
        <<: *aci_infra_node_profile_qos_changed
        mpls_custom_qos_policy: ""
      register: nm_del_node_profile_qos

    - name: Verify MPLS custom QoS policy configuration on node profile
      assert:
        that:
        - nm_add_node_profile_qos is changed
        - nm_add_node_profile_qos.previous == []
        - nm_add_node_profile_qos.current.0.l3extLNodeP.children.0.l3extRsLNodePMplsCustQosPol.attributes.tDn == "uni/tn-infra/qosmplscustom-ansible_test_mpls_custom_qos_policy"
        - nm_mod_node_profile_qos_changed is changed
        - nm_mod_node_profile_qos_changed.previous.0.l3extLNodeP.children.0.l3extRsLNodePMplsCustQosPol.attributes.tDn == "uni/tn-infra/qosmplscustom-ansible_test_mpls_custom_qos_policy"
        - nm_mod_node_profile_qos_changed.current.0.l3extLNodeP.children.0.l3extRsLNodePMplsCustQosPol.attributes.tDn == "uni/tn-infra/qosmplscustom-ansible_test_mpls_custom_qos_policy_changed"
        - nm_mod_node_profile_qos_again is not changed
        - nm_mod_node_profile_qos_again.previous.0.l3extLNodeP.children.0.l3extRsLNodePMplsCustQosPol.attributes.tDn == "uni/tn-infra/qosmplscustom-ansible_test_mpls_custom_qos_policy_changed"
        - nm_mod_node_profile_qos_again.current.0.l3extLNodeP.children.0.l3extRsLNodePMplsCustQosPol.attributes.tDn == "uni/tn-infra/qosmplscustom-ansible_test_mpls_custom_qos_policy_changed"
        - nm_del_node_profile_qos is changed
        - nm_del_node_profile_qos.previous.0.l3extLNodeP.children.0.l3extRsLNodePMplsCustQosPol.attributes.tDn == "uni/tn-infra/qosmplscustom-ansible_test_mpls_custom_qos_policy_changed"
        - nm_del_node_profile_qos.current.0.l3extLNodeP.children is undefined

    - name: Remove a infra SR-MPLS l3out 
      cisco.aci.aci_l3out:
        <<: *aci_infra_sr_mpls_l3out_absent

  - name: Query existing node profile (check mode)
    cisco.aci.aci_l3out_logical_node_profile: &query_existing_node_profile
      <<: *aci_info
      node_profile: ansible_node_profile
      l3out: ansible_l3out
      tenant: ansible_tenant
      state: query
    check_mode: true
    register: cm_query_node_profile

  - name: Query existing node profile (normal mode)
    cisco.aci.aci_l3out_logical_node_profile: *query_existing_node_profile
    register: nm_query_node_profile

  - name: Query non-existent node profile
    cisco.aci.aci_l3out_logical_node_profile:
      <<: *aci_info
      node_profile: ansible_fake_node_profile
      l3out: ansible_l3out
      tenant: ansible_tenant
      state: query
    check_mode: true
    register: nm_query_fake_node_profile

  - name: Query all node profile for L3out
    cisco.aci.aci_l3out_logical_node_profile:
      <<: *aci_info
      l3out: ansible_l3out
      tenant: ansible_tenant
      state: query
    register: nm_query_all_node_profiles

  - name: Verify query_node_profile
    ansible.builtin.assert:
      that:
      - cm_query_node_profile is not changed
      - nm_query_node_profile is not changed
      - nm_query_fake_node_profile is not changed
      - nm_query_all_node_profiles is not changed
      - cm_query_node_profile.current.0.l3extLNodeP.attributes.name == 'ansible_node_profile'
      - nm_query_node_profile.current.0.l3extLNodeP.attributes.name == 'ansible_node_profile'
      - nm_query_fake_node_profile.current == []
      - nm_query_all_node_profiles.current.0.l3extOut.children.0.l3extLNodeP.attributes.name == 'ansible_node_profile2'
      - nm_query_all_node_profiles.current.0.l3extOut.children.1.l3extLNodeP.attributes.name == 'ansible_node_profile'

  - name: Remove node profile (check mode)
    cisco.aci.aci_l3out_logical_node_profile: &aci_node_profile_absent
      <<: *aci_info
      node_profile: ansible_node_profile
      l3out: ansible_l3out
      tenant: ansible_tenant
      state: absent
    check_mode: true
    register: cm_remove_node_profile

  - name: Remove node profile (normal mode)
    cisco.aci.aci_l3out_logical_node_profile: *aci_node_profile_absent
    register: nm_remove_node_profile

  - name: Remove node profile (normal mode) again
    cisco.aci.aci_l3out_logical_node_profile: *aci_node_profile_absent
    register: nm_remove_node_profile_again

  - name: Remove second node profile (check mode)
    cisco.aci.aci_l3out_logical_node_profile: &aci_second_node_profile_absent
      <<: *aci_info
      node_profile: ansible_node_profile2
      l3out: ansible_l3out
      tenant: ansible_tenant
      state: absent
    check_mode: true
    register: cm_remove_second_node_profile

  - name: Remove second node profile (normal mode)
    cisco.aci.aci_l3out_logical_node_profile: *aci_second_node_profile_absent
    register: nm_remove_second_node_profile

  - name: Verify remove_node_profile
    ansible.builtin.assert:
      that:
      - cm_remove_node_profile is changed
      - cm_remove_second_node_profile is changed
      - nm_remove_node_profile is changed
      - nm_remove_node_profile_again is not changed
      - nm_remove_second_node_profile is changed

  # Remove L3out after testing
  - name: Remove L3out (normal_mode)
    cisco.aci.aci_l3out:
      <<: *aci_info
      tenant: ansible_tenant
      l3out: ansible_l3out
      state: absent

  # Remove Tenant after testing
  - name: Remove tenant (normal_mode)
    cisco.aci.aci_tenant:
      <<: *aci_info
      tenant: ansible_tenant
      state: absent
