# Test code for the ACI modules
# Copyright: (c) 2023, Akini Ross (akinross@cisco.com)

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI APIC host, ACI username and ACI password
  ansible.builtin.fail:
    msg: 'Please define the following variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

- name: Set vars
  ansible.builtin.set_fact:
    aci_info: &aci_info
      host: "{{ aci_hostname }}"
      username: "{{ aci_username }}"
      password: "{{ aci_password }}"
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: '{{ aci_output_level | default("info") }}'
    aci_tenant: ansible_test

- name: Verify Cloud and Non-Cloud Sites in use.
  ansible.builtin.include_tasks: ../../../../../../integration/targets/aci_cloud_provider/tasks/main.yml

- name: Execute tasks only for non-cloud sites
  when:
  - query_cloud.current == []
  block:

  - name: Query system information
    aci_system:
      <<: *aci_info
      id: 1
      state: query
    register: version
  
  # CLEAN TEST ENVIRONMENT
  
  - name: Ensure clean tenant configuration
    cisco.aci.aci_tenant:
      <<: *aci_info
      tenant: "{{ aci_tenant }}"
      state: "{{ item }}"
    loop:
    - absent
    - present

  - name: Ensure clean vrf configuration
    cisco.aci.aci_vrf:
      <<: *aci_info
      tenant: "{{ aci_tenant }}"
      vrf: vrf_1

  - name: Ensure clean l3out configuration
    cisco.aci.aci_l3out:
      <<: *aci_info
      tenant: "{{ aci_tenant }}"
      l3out: "{{ item }}"
      vrf: vrf_1
      domain: dom_1
    loop:
    - l3out_1
    - l3out_2

  # TEST CREATE L3OUT EXTERNAL EPG
  
  - name: Add l3out external epg 1 ( check mode )
    cisco.aci.aci_l3out_extepg: &add_l3out_extepg_1
      <<: *aci_info
      tenant: "{{ aci_tenant }}"
      l3out: l3out_1
      extepg: extepg_1
      state: present
    check_mode: true
    register: cm_add_l3out_extepg_1

  - name: Add l3out external epg 1
    cisco.aci.aci_l3out_extepg:
      <<: *add_l3out_extepg_1
      route_control_profiles: 
          import_profile: ""
    register: nm_add_l3out_extepg_1

  - name: Add l3out external epg 1 again
    cisco.aci.aci_l3out_extepg:
      <<: *add_l3out_extepg_1
    register: nm_add_l3out_extepg_1_again

  - name: Verify add l3out external epg 1
    ansible.builtin.assert:
      that:
      - cm_add_l3out_extepg_1 is changed
      - cm_add_l3out_extepg_1.current == []
      - cm_add_l3out_extepg_1.previous == []
      - cm_add_l3out_extepg_1.proposed.l3extInstP.attributes.name == "extepg_1"
      - nm_add_l3out_extepg_1 is changed
      - nm_add_l3out_extepg_1.previous == []
      - nm_add_l3out_extepg_1.current.0.l3extInstP.attributes.name == "extepg_1"
      - nm_add_l3out_extepg_1.current.0.l3extInstP.attributes.descr == ""
      - nm_add_l3out_extepg_1.current.0.l3extInstP.attributes.prefGrMemb == "exclude"
      - nm_add_l3out_extepg_1.current.0.l3extInstP.attributes.targetDscp == "unspecified"
      - nm_add_l3out_extepg_1_again is not changed
      - nm_add_l3out_extepg_1_again.previous.0.l3extInstP.attributes.name == "extepg_1"
      - nm_add_l3out_extepg_1_again.previous.0.l3extInstP.attributes.descr == ""
      - nm_add_l3out_extepg_1_again.previous.0.l3extInstP.attributes.prefGrMemb == "exclude"
      - nm_add_l3out_extepg_1_again.previous.0.l3extInstP.attributes.targetDscp == "unspecified"
      - nm_add_l3out_extepg_1_again.current.0.l3extInstP.attributes.name == "extepg_1"
      - nm_add_l3out_extepg_1_again.current.0.l3extInstP.attributes.descr == ""
      - nm_add_l3out_extepg_1_again.current.0.l3extInstP.attributes.prefGrMemb == "exclude"
      - nm_add_l3out_extepg_1_again.current.0.l3extInstP.attributes.targetDscp == "unspecified"
  
  - name: Change l3out external epg 1
    cisco.aci.aci_l3out_extepg:
      <<: *add_l3out_extepg_1
      description: "changed description"
      preferred_group: true
      dscp: AF12
    register: nm_change_l3out_extepg_1
  
  - name: Verify change l3out external epg 1
    ansible.builtin.assert:
      that:
      - nm_change_l3out_extepg_1 is changed
      - nm_change_l3out_extepg_1.previous.0.l3extInstP.attributes.name == "extepg_1"
      - nm_change_l3out_extepg_1.previous.0.l3extInstP.attributes.descr == ""
      - nm_change_l3out_extepg_1.previous.0.l3extInstP.attributes.prefGrMemb == "exclude"
      - nm_change_l3out_extepg_1.previous.0.l3extInstP.attributes.targetDscp == "unspecified"
      - nm_change_l3out_extepg_1.current.0.l3extInstP.attributes.name == "extepg_1"
      - nm_change_l3out_extepg_1.current.0.l3extInstP.attributes.descr == "changed description"
      - nm_change_l3out_extepg_1.current.0.l3extInstP.attributes.prefGrMemb == "include"
      - nm_change_l3out_extepg_1.current.0.l3extInstP.attributes.targetDscp == "AF12"

  - name: Add two more l3out external epgs
    cisco.aci.aci_l3out_extepg:
      <<: *aci_info
      tenant: "{{ aci_tenant }}"
      l3out: "{{ item.l3out }}"
      extepg: "{{ item.extepg }}"
      state: present
    loop:
      - {l3out: l3out_1, extepg: extepg_2}
      - {l3out: l3out_2, extepg: extepg_3}

  - name: Add l3out external epg with the new optional params
    cisco.aci.aci_l3out_extepg:
        <<: *aci_info
        tenant: ansible_test
        l3out: l3out_1
        extepg: extepg_params
        contract_exception_tag: contract_excepted
        qos_class: level6
        route_control_profiles: 
          import_profile: profile1
          export_profile: profile2
        state: present
    register: nm_l3out_extepg_optional_params

  - name: Add l3out external epg with the new optional params again
    cisco.aci.aci_l3out_extepg:
        <<: *aci_info
        tenant: ansible_test
        l3out: l3out_1
        extepg: extepg_params
        contract_exception_tag: contract_excepted
        qos_class: level6
        route_control_profiles: 
          import_profile: profile1
          export_profile: profile2
        state: present
    register: nm_l3out_extepg_optional_params_again

  - name: Add l3out external epg with no export route control profile in the task
    cisco.aci.aci_l3out_extepg:
        <<: *aci_info
        tenant: ansible_test
        l3out: l3out_1
        extepg: extepg_params
        contract_exception_tag: contract_excepted
        qos_class: level6
        route_control_profiles:
          import_profile: profile1
        state: present
    register: nm_l3out_extepg_non_existent_export_profile

  - name: Add l3out external epg with export route control profile having ""
    cisco.aci.aci_l3out_extepg:
        <<: *aci_info
        tenant: ansible_test
        l3out: l3out_1
        extepg: extepg_params
        contract_exception_tag: contract_excepted
        qos_class: level6
        route_control_profiles: 
          import_profile: profile1
          export_profile: ""
        state: present
    register: nm_l3out_extepg_remove_export_profile

  - name: Add l3out external epg with export route control profile again
    cisco.aci.aci_l3out_extepg:
        <<: *aci_info
        tenant: ansible_test
        l3out: l3out_1
        extepg: extepg_params
        contract_exception_tag: contract_excepted
        qos_class: level6
        route_control_profiles: 
          import_profile: profile1
          export: profile2
        state: present
    register: nm_l3out_extepg_add_export_profile

  - name: Add l3out external epg with intra_ext_epg_isolation
    cisco.aci.aci_l3out_extepg:
        <<: *aci_info
        tenant: ansible_test
        l3out: l3out_1
        extepg: extepg_isolation
        intra_ext_epg_isolation: enforced
        state: present
    register: nm_l3out_extepg_isolation
    when:
      - version.current.0.topSystem.attributes.version is version('5.0', '>=')

  # TEST QUERY L3OUT EXTERNAL EPG

  - name: Query l3out external epg 1
    cisco.aci.aci_l3out_extepg:
      <<: *add_l3out_extepg_1
      state: query
    register: query_one

  - name: Query all l3out external epgs ( class query )
    cisco.aci.aci_l3out_extepg:
      <<: *aci_info
      state: query
    register: query_all

  - name: Verify query l3out external epgs
    ansible.builtin.assert:
      that:
      - query_one is not changed
      - query_one.current | length == 1
      - query_one.current.0.l3extInstP.attributes.name == "extepg_1"
      - query_all is not changed
      - query_all.current | length >= 3

  - name: Query l3out external epg with the new optional params
    cisco.aci.aci_l3out_extepg:
      <<: *aci_info
      tenant: ansible_test
      l3out: l3out_1
      extepg: extepg_params
      state: query
    register: query_l3out_extepg_optional_params

  - name: Query l3out external epg with intra_ext_epg_isolation
    cisco.aci.aci_l3out_extepg:
        <<: *aci_info
        tenant: ansible_test
        l3out: l3out_1
        extepg: extepg_isolation
        state: query
    register: query_l3out_extepg_isolation
    when:
      - version.current.0.topSystem.attributes.version is version('5.0', '>=')

  - name: Gather attribute search results using regex
    ansible.builtin.set_fact:
      profile1_name: "{{ nm_l3out_extepg_optional_params.current.0.l3extInstP.children | regex_search('profile1') }}"
      profile1_direction: "{{ nm_l3out_extepg_optional_params.current.0.l3extInstP.children | regex_search('import') }}"
      profile2_name: "{{ nm_l3out_extepg_optional_params.current.0.l3extInstP.children | regex_search('profile2') }}"
      profile2_direction: "{{ nm_l3out_extepg_optional_params.current.0.l3extInstP.children | regex_search('export') }}"
      profile2_exists: "{{ nm_l3out_extepg_non_existent_export_profile.current.0.l3extInstP.children | regex_search('profile2') }}"
      profile2_removed: "{{ nm_l3out_extepg_remove_export_profile.current.0.l3extInstP.children | regex_search('profile2') }}"
      profile2_direction_removed: "{{ nm_l3out_extepg_remove_export_profile.current.0.l3extInstP.children | regex_search('export') }}"
      query_profile1_name: "{{ query_l3out_extepg_optional_params.current.0.l3extInstP.children | regex_search('profile1') }}"
      query_profile1_direction: "{{ query_l3out_extepg_optional_params.current.0.l3extInstP.children | regex_search('import') }}"
      query_profile2_name: "{{ query_l3out_extepg_optional_params.current.0.l3extInstP.children | regex_search('profile2') }}"
      query_profile2_direction: "{{ query_l3out_extepg_optional_params.current.0.l3extInstP.children | regex_search('export') }}"

  - name: Verify l3out external epg with the new optional params
    ansible.builtin.assert:
      that:
      - nm_l3out_extepg_optional_params is changed
      - nm_l3out_extepg_optional_params_again is not changed
      - nm_l3out_extepg_non_existent_export_profile is not changed
      - nm_l3out_extepg_remove_export_profile is changed
      - nm_l3out_extepg_add_export_profile is changed
      - query_l3out_extepg_optional_params is not changed
      - nm_l3out_extepg_optional_params.current.0.l3extInstP.attributes.name == "extepg_params"
      - nm_l3out_extepg_optional_params.current.0.l3extInstP.attributes.prio == "level6"
      - profile1_name == "profile1"
      - profile1_direction == "import"
      - profile2_name == "profile2"
      - profile2_direction == "export"
      - query_profile1_name == "profile1"
      - query_profile1_direction == "import"
      - query_profile2_name == "profile2"
      - query_profile2_direction == "export"
      - profile2_exists == "profile2"
      - profile2_removed == ""
      - profile2_direction_removed == ""

  - name: Verify l3out external epg with intra_ext_epg_isolation
    ansible.builtin.assert:
      that:
      - nm_l3out_extepg_isolation.current.0.l3extInstP.attributes.pcEnfPref == "enforced"
      - query_l3out_extepg_isolation.current.0.l3extInstP.attributes.pcEnfPref == "enforced"
    when:
      - version.current.0.topSystem.attributes.version is version('5.0', '>=')
      
    # TEST REMOVAL L3OUT EXTERNAL EPG

  - name: Remove l3out external epg 1 ( check mode )
    cisco.aci.aci_l3out_extepg: &remove_l3out_extepg_1
      <<: *add_l3out_extepg_1
      state: absent
    check_mode: true
    register: cm_remove_l3out_extepg_1

  - name: Remove l3out external epg 1
    cisco.aci.aci_l3out_extepg:
      <<: *remove_l3out_extepg_1
    register: nm_remove_l3out_extepg_1

  - name: Remove l3out external epg 1 again
    cisco.aci.aci_l3out_extepg:
      <<: *remove_l3out_extepg_1
    register: nm_remove_l3out_extepg_1_again

  - name: Remove l3out external epg params
    cisco.aci.aci_l3out_extepg:
      <<: *aci_info
      tenant: ansible_test
      l3out: l3out_1
      extepg: extepg_params
      state: absent
    register: remove_l3out_extepg_params

  - name: Remove l3out external epg with intra_ext_epg_isolation
    cisco.aci.aci_l3out_extepg:
      <<: *aci_info
      tenant: ansible_test
      l3out: l3out_1
      extepg: extepg_isolation
      state: absent
    register: remove_l3out_extepg_isolation

  - name: Verify removal epg monitoring policies
    ansible.builtin.assert:
      that:
      - cm_remove_l3out_extepg_1 is changed
      - cm_remove_l3out_extepg_1.proposed == {}
      - nm_remove_l3out_extepg_1 is changed
      - nm_remove_l3out_extepg_1.previous.0.l3extInstP.attributes.name == "extepg_1"
      - nm_remove_l3out_extepg_1.current == []
      - nm_remove_l3out_extepg_1_again is not changed
      - nm_remove_l3out_extepg_1_again.previous == []
      - nm_remove_l3out_extepg_1_again.current == []
      - remove_l3out_extepg_params is changed
      - remove_l3out_extepg_params.current == []
      - remove_l3out_extepg_isolation.current == []
