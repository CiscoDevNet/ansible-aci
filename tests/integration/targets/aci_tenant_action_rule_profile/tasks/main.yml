# Test code for the ACI modules
# Copyright: (c) 2023, Gaspard Micol (@gmicol) <gmicol@cisco.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI APIC host, ACI username and ACI password
  fail:
    msg: 'Please define the following variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

- name: Set vars
  set_fact:
    aci_info: &aci_info
      host: "{{ aci_hostname }}"
      username: "{{ aci_username }}"
      password: "{{ aci_password }}"
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: debug

- name: Verify Cloud and Non-Cloud Sites in use.
  include_tasks: ../../../../../../integration/targets/aci_cloud_provider/tasks/main.yml

- name: Execute tasks only for non-cloud sites
  when: query_cloud.current == []  # This condition will execute only non-cloud sites
  block:  # block specifies execution of tasks within, based on conditions
  # Clean Environment
  - name: create tenant
    aci_tenant: &aci_tenant_present
      <<: *aci_info
      tenant: ansible_test
      state: present

  - name: Ensure first action rule profile does not exist
    aci_tenant_action_rule_profile: &aci_tenant_action_rule_profile_absent
      <<: *aci_tenant_present
      name: anstest
      description: test for action rule profile
      state: absent

  - name: Ensure second action rule profile does not exist
    aci_tenant_action_rule_profile: &aci_tenant_action_rule_profile_2_absent
      <<: *aci_tenant_present
      name: anstest_2
      state: absent

  - name: Create first action rule profile (check_mode)
    aci_tenant_action_rule_profile: &aci_tenant_action_rule_profile_present
      <<: *aci_tenant_action_rule_profile_absent
      state: present
    check_mode: true
    register: cm_add_tenant_action_rule_profile_1

  - name: Create first action rule profile (normal_mode)
    aci_tenant_action_rule_profile:
      <<: *aci_tenant_action_rule_profile_present
    register: nm_add_tenant_action_rule_profile_1

  - name: Create first action rule profile again - testing idempotency
    aci_tenant_action_rule_profile:
      <<: *aci_tenant_action_rule_profile_present
    register: idempotency_add_tenant_action_rule_profile_1

  - name: Create second action rule profile
    aci_tenant_action_rule_profile: &aci_tenant_action_rule_profile_2_present
      <<: *aci_tenant_action_rule_profile_2_absent
      state: present
    register: nm_add_tenant_action_rule_profile_2

  - name: Asserts for creation tasks
    assert:
      that:
        - cm_add_tenant_action_rule_profile_1 is changed
        - cm_add_tenant_action_rule_profile_1.previous == []
        - cm_add_tenant_action_rule_profile_1.current == []
        - nm_add_tenant_action_rule_profile_1 is changed
        - nm_add_tenant_action_rule_profile_1.current.0.rtctrlAttrP.attributes.name == "anstest"
        - idempotency_add_tenant_action_rule_profile_1 is not changed
        - nm_add_tenant_action_rule_profile_2 is changed
        - nm_add_tenant_action_rule_profile_2.current.0.rtctrlAttrP.attributes.name == "anstest_2"

  - name: Query all action rule profiles
    aci_tenant_action_rule_profile:
      <<: *aci_info
      state: query
    register: query_all_tenant_action_rule_profile

  - name: Query first action rule profile
    aci_tenant_action_rule_profile:
      <<: *aci_tenant_action_rule_profile_present
      state: query
    register: query_first_tenant_action_rule_profile

  - name: Asserts for query tasks
    assert:
      that:
        - query_all_tenant_action_rule_profile is not changed
        - query_all_tenant_action_rule_profile.current | length >= 2
        - '"class/rtctrlAttrP.json" in query_all_tenant_action_rule_profile.url'
        - query_first_tenant_action_rule_profile is not changed
        - query_first_tenant_action_rule_profile.current.0.rtctrlAttrP.attributes.name == "anstest"

  - name: Delete first action rule profile (check_mode)
    aci_tenant_action_rule_profile:
      <<: *aci_tenant_action_rule_profile_present
      state: absent
    check_mode: true
    register: cm_delete_tenant_action_rule_profile_1

  - name: Delete first action rule profile (normal_mode)
    aci_tenant_action_rule_profile:
      <<: *aci_tenant_action_rule_profile_present
      state: absent
    register: nm_delete_tenant_action_rule_profile_1

  - name: Delete first action rule profile again - testing idempotency
    aci_tenant_action_rule_profile:
      <<: *aci_tenant_action_rule_profile_present
      state: absent
    register: idempotency_delete_tenant_action_rule_profile_1

  - name: Delete second action rule profile (normal_mode)
    aci_tenant_action_rule_profile:
      <<: *aci_tenant_action_rule_profile_2_present
      state: absent
    register: nm_delete_tenant_action_rule_profile_2

  - name: Asserts for deletion tasks
    assert:
      that:
        - cm_delete_tenant_action_rule_profile_1 is changed
        - cm_delete_tenant_action_rule_profile_1.proposed == {}
        - nm_delete_tenant_action_rule_profile_1 is changed
        - nm_delete_tenant_action_rule_profile_1.previous != []
        - nm_delete_tenant_action_rule_profile_1.current == []
        - idempotency_delete_tenant_action_rule_profile_1 is not changed
        - idempotency_delete_tenant_action_rule_profile_1.previous == []
        - nm_delete_tenant_action_rule_profile_2 is changed
        - nm_delete_tenant_action_rule_profile_2.previous != []
        - nm_delete_tenant_action_rule_profile_2.current == []

  - name: Delete tenant - clean up the environment
    aci_tenant:
      <<: *aci_tenant_present
      state: absent