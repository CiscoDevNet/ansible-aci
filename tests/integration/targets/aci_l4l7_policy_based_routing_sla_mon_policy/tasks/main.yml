# Test code for the ACI modules
# Copyright: (c) 2021, Tim Cragg (@timcragg)

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI APIC host, ACI username and ACI password
  fail:
    msg: 'Please define the following variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

# GET Credentials from the inventory
- name: Set vars
  set_fact:
    aci_info: &aci_info
      host: "{{ aci_hostname }}"
      username: "{{ aci_username }}"
      password: "{{ aci_password }}"
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: debug

# CLEAN ENVIRONMENT
- name: Remove ansible_tenant if it already exists
  cisco.aci.aci_tenant:
    <<: *aci_info
    name: ansible_tenant
    state: absent

# CREATE TENANT
- name: Create ansible_tenant
  cisco.aci.aci_tenant:
    <<: *aci_info
    name: ansible_tenant
    state: present

# CREATE SLA POLICIES
- name: Create ICMP SLA policy
  cisco.aci.aci_ip_sla_monitoring_policy:
    <<: *aci_info
    tenant: ansible_tenant
    sla_policy: ansible_icmp_sla
    sla_type: icmp
    frequency: 40
    multiplier: 6
    state: present

- name: Create TCP SLA policy
  cisco.aci.aci_ip_sla_monitoring_policy:
    <<: *aci_info
    tenant: ansible_tenant
    sla_policy: ansible_tcp_sla
    sla_type: tcp
    sla_port: 8080
    frequency: 40
    multiplier: 6
    state: present

# CREATE L4-L7 POLICY BASED REDIRECT POLICY
- name: Create PBR policy
  cisco.aci.aci_l4l7_policy_based_redirect:
    <<: *aci_info
    tenant: ansible_tenant
    policy_name: ansible_pbr_policy
    dest_type: L3
    hash_algorithm: dip
    resilient_hash: yes
    state: present

# BIND SLA POLICY TO POLICY BASED REDIRECT
- name: Bind ICMP SLA policy to PBR
  cisco.aci.aci_l4l7_policy_based_redirect_sla_mon_policy:
    <<: *aci_info
    tenant: ansible_tenant
    pbr_name: ansible_pbr_policy
    monitor_policy: ansible_icmp_sla
    state: present
  register: add_icmp_sla_binding

- name: Verify SLA policy binding
  assert:
    that:
    - add_icmp_sla_binding.current.0.vnsRsIPSLAMonitoringPol.attributes.dn == "uni/tn-ansible_tenant/svcCont/svcRedirectPol-ansible_pbr_policy/rsIPSLAMonitoringPol"
    - add_icmp_sla_binding.current.0.vnsRsIPSLAMonitoringPol.attributes.tDn == "uni/tn-ansible_tenant/ipslaMonitoringPol-ansible_icmp_sla"

# BIND SLA POLICY AGAIN TO TEST IDEMPOTENCE
- name: Bind ICMP SLA policy to PBR again
  cisco.aci.aci_l4l7_policy_based_redirect_sla_mon_policy:
    <<: *aci_info
    tenant: ansible_tenant
    pbr_name: ansible_pbr_policy
    monitor_policy: ansible_icmp_sla
    state: present
  register: add_icmp_sla_binding_again

- name: Verify SLA policy binding is unchanged
  assert:
    that:
    - add_icmp_sla_binding_again is not changed
    - add_icmp_sla_binding_again.current.0.vnsRsIPSLAMonitoringPol.attributes.dn == "uni/tn-ansible_tenant/svcCont/svcRedirectPol-ansible_pbr_policy/rsIPSLAMonitoringPol"
    - add_icmp_sla_binding_again.current.0.vnsRsIPSLAMonitoringPol.attributes.tDn == "uni/tn-ansible_tenant/ipslaMonitoringPol-ansible_icmp_sla"

# CHANGE BINDING TO TCP SLA POLICY
- name: Bind TCP SLA policy to PBR
  cisco.aci.aci_l4l7_policy_based_redirect_sla_mon_policy:
    <<: *aci_info
    tenant: ansible_tenant
    pbr_name: ansible_pbr_policy
    monitor_policy: ansible_tcp_sla
    state: present
  register: add_tcp_sla_binding

- name: Verify SLA policy binding is updated
  assert:
    that:
    - add_tcp_sla_binding is changed
    - add_tcp_sla_binding.current.0.vnsRsIPSLAMonitoringPol.attributes.dn == "uni/tn-ansible_tenant/svcCont/svcRedirectPol-ansible_pbr_policy/rsIPSLAMonitoringPol"
    - add_tcp_sla_binding.current.0.vnsRsIPSLAMonitoringPol.attributes.tDn == "uni/tn-ansible_tenant/ipslaMonitoringPol-ansible_tcp_sla"

# QUERY SLA POLICY BINDING
- name: Query SLA policy binding
  cisco.aci.aci_l4l7_policy_based_redirect_sla_mon_policy:
    <<: *aci_info
    tenant: ansible_tenant
    pbr_name: ansible_pbr_policy
    state: query
  register: query_sla_binding

- name: Verify SLA policy binding query
  assert:
    that:
    - query_sla_binding is not changed
    - query_sla_binding.current.0.vnsSvcRedirectPol.children.0.vnsRsIPSLAMonitoringPol.attributes.tDn == "uni/tn-ansible_tenant/ipslaMonitoringPol-ansible_tcp_sla"

- name: Query all SLA policy bindings
  cisco.aci.aci_l4l7_policy_based_redirect_sla_mon_policy:
    <<: *aci_info
    state: query
  register: query_sla_binding_all

- name: Verify query all bindings
  assert:
    that:
    - query_sla_binding_all is not changed

# REMOVE SLA POLICY BINDING
- name: Delete SLA policy binding
  cisco.aci.aci_l4l7_policy_based_redirect_sla_mon_policy:
    <<: *aci_info
    tenant: ansible_tenant
    pbr_name: ansible_pbr_policy
    monitor_policy: ansible_tcp_sla
    state: absent
  register: delete_sla_binding

- name: Verify SLA policy binding deletion
  assert:
    that:
    - delete_sla_binding is changed
    - delete_sla_binding.current == []
    - delete_sla_binding.previous.0.vnsRsIPSLAMonitoringPol.attributes.dn == "uni/tn-ansible_tenant/svcCont/svcRedirectPol-ansible_pbr_policy/rsIPSLAMonitoringPol"
    - delete_sla_binding.previous.0.vnsRsIPSLAMonitoringPol.attributes.tDn == "uni/tn-ansible_tenant/ipslaMonitoringPol-ansible_tcp_sla"

# REMOVE SLA POLICY BINDING AGAIN TO TEST IDEMPOTENCE
- name: Delete SLA policy binding again
  cisco.aci.aci_l4l7_policy_based_redirect_sla_mon_policy:
    <<: *aci_info
    tenant: ansible_tenant
    pbr_name: ansible_pbr_policy
    monitor_policy: ansible_tcp_sla
    state: absent
  register: delete_sla_binding_again

- name: Verify SLA policy binding deletion idempotence
  assert:
    that:
    - delete_sla_binding_again is not changed

# CLEAN UP
- name: remove ansible_tenant
  cisco.aci.aci_tenant:
    <<: *aci_info
    name: ansible_tenant
    state: absent

