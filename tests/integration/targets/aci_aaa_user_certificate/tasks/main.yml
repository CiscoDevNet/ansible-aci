# Test code for the ACI modules
# Copyright: (c) 2017, Dag Wieers (dagwieers) <dag@wieers.com>
#
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI APIC host, ACI username and ACI password
  fail:
    msg: 'Please define the following variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined


# CLEAN ENVIRONMENT
- name: Making sure running user has correct cert
  cisco.aci.aci_aaa_user_certificate:
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: '{{ aci_output_level | default("info") }}'
    aaa_user: '{{ aci_username }}'
    certificate_name: admin
    certificate: "{{ lookup('file', 'pki/admin.crt') }}"
    state: present

- name: Remove any pre-existing certificate
  cisco.aci.aci_aaa_user_certificate: &cert_absent
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: '{{ aci_output_level | default("info") }}'
    aaa_user: '{{ aci_username }}'
    certificate_name: "{{ item }}"
    state: absent
  loop:
    - admin
    - user
    - rsa_user

# ADD USER CERTIFICATE
- name: Add user certificate (check_mode)
  cisco.aci.aci_aaa_user_certificate: &cert_present
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: '{{ aci_output_level | default("info") }}'
    aaa_user: '{{ aci_username }}'
    certificate_name: admin
    certificate: "{{ lookup('file', 'pki/admin.crt') }}"
    state: present
  check_mode: yes
  register: cm_add_cert

- name: Add user certificate (normal mode)
  cisco.aci.aci_aaa_user_certificate: *cert_present
  register: nm_add_cert

- name: Add user certificate again (check mode)
  cisco.aci.aci_aaa_user_certificate: *cert_present
  check_mode: yes
  register: cm_add_cert_again

- name: Add user certificate again (normal mode)
  cisco.aci.aci_aaa_user_certificate: *cert_present
  register: nm_add_cert_again

- name: Verify add_cert
  assert:
    that:
    - cm_add_cert is changed
    - nm_add_cert is change
    - cm_add_cert_again is not changed
    - nm_add_cert_again is not changed

- name: Add rsa_user certificates
  cisco.aci.aci_aaa_user_certificate:
    <<: *cert_present
    certificate_name: "{{ item }}"
    certificate: "{{ lookup('file', 'pki/rsa_user.crt') }}"
    state: present
  loop:
    - user
    - rsa_user

- name: Add admin certificate with user name
  cisco.aci.aci_aaa_user_certificate:
    <<: *cert_present
    certificate_name: '{{ aci_username }}'
    state: present

# QUERY ALL USER CERTIFICATES
- name: Query all user certificates using signature-based authentication (check_mode)
  cisco.aci.aci_aaa_user_certificate: &cert_query
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    #password: '{{ aci_password }}'
    private_key: '{{ role_path }}/pki/admin.key'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: '{{ aci_output_level | default("info") }}'
    aaa_user: '{{ aci_username }}'
    state: query
  check_mode: yes
  register: cm_query_all_certs

- name: Query all user certificates using signature-based authentication (normal mode)
  cisco.aci.aci_aaa_user_certificate: *cert_query
  register: nm_query_all_certs

- name: Verify query_all_certs
  assert:
    that:
    - cm_query_all_certs is not changed
    - nm_query_all_certs is not changed
    # NOTE: Order of certs is not stable between calls
    #- cm_query_all_certs == nm_query_all_certs

- name: Query all user certificates using signature-based authentication (valid rsa private key)
  cisco.aci.aci_aaa_user_certificate:
    <<: *cert_query
    private_key: '{{ role_path }}/pki/rsa_user.key'
  register: nm_query_all_rsa

- name: Verify nm_query_all_rsa
  assert:
    that:
      - nm_query_all_rsa is not changed
      - nm_query_all_rsa.current.0.aaaUser.children | length >= 4

- name: Query all certificates using signature-based authentication (private key content for admin certificate)
  cisco.aci.aci_aaa_user_certificate:
    <<: *cert_query
    private_key: |
      -----BEGIN PRIVATE KEY-----
      MIICdwIBADANBgkqhkiG9w0BAQEFAASCAmEwggJdAgEAAoGBAKIRv+2sbbewm0mj
      D+6/tpoUymzYIdFsN+gu02teIr/lZi8ipEB514pyhoaerstzboPteWvniLuwq4KQ
      VTEHgoln7J8EaHCnECViGA61pVx8RkJ99cmCkepspROw3I96zBcm58oXs6+Q/BnD
      /OWET5sBvR9oTv9GNRVJ1rvSMAEJAgMBAAECgYByu3QO0qF9h7X3JEu0Ld4cKBnB
      giQ2uJC/et7KxIJ/LOvw9GopBthyt27KwG1ntBkJpkTuAaQHkyNns7vLkNB0S0IR
      +owVFEcKYq9VCHTaiQU8TDp24gN+yPTrpRuH8YhDVq5SfVdVuTMgHVQdj4ya4VlF
      Gj+a7+ipxtGiLsVGrQJBAM7p0Fm0xmzi+tBOASUAcVrPLcteFIaTBFwfq16dm/ON
      00Khla8Et5kMBttTbqbukl8mxFjBEEBlhQqb6EdQQ0sCQQDIhHx1a9diG7y/4DQA
      4KvR3FCYwP8PBORlSamegzCo+P1OzxiEo0amX7yQMA5UyiP/kUsZrme2JBZgna8S
      p4R7AkEAr7rMhSOPUnMD6V4WgsJ5g1Jp5kqkzBaYoVUUSms5RASz4+cwJVCwTX91
      Y1jcpVIBZmaaY3a0wrx13ajEAa0dOQJBAIpjnb4wqpsEh7VpmJqOdSdGxb1XXfFQ
      sA0T1OQYqQnFppWwqrxIL+d9pZdiA1ITnNqyvUFBNETqDSOrUHwwb2cCQGArE+vu
      ffPUWQ0j+fiK+covFG8NL7H+26NSGB5+Xsn9uwOGLj7K/YT6CbBtr9hJiuWjM1Al
      0V4ltlTuu2mTMaw=
      -----END PRIVATE KEY-----
  register: nm_query_all_key_content

# QUERY OUR USER CERTIFICATE
- name: Query our certificate using signature-based authentication (check_mode)
  cisco.aci.aci_aaa_user_certificate:
    <<: *cert_query
    certificate_name: admin
  check_mode: yes
  register: cm_query_cert

- name: Query our certificate using signature-based authentication (normal mode)
  cisco.aci.aci_aaa_user_certificate:
    <<: *cert_query
    certificate_name: admin
  register: nm_query_cert

- name: Verify query_cert
  assert:
    that:
    - cm_query_cert is not changed
    - nm_query_cert is not changed
    - cm_query_cert == nm_query_cert

- name: Query our certificate using signature-based authentication (invalid private key file)
  cisco.aci.aci_aaa_user_certificate:
    <<: *cert_query
    private_key: '{{ role_path }}/pki/admin_invalid.key'
    certificate_name: admin
  register: query_cert_invalid_key
  ignore_errors: yes

- name: Query our certificate using signature-based authentication (certificate file)
  cisco.aci.aci_aaa_user_certificate:
    <<: *cert_query
    private_key: '{{ role_path }}/pki/admin.crt'
    certificate_name: admin
  register: query_cert_invalid_key
  ignore_errors: yes


- name: Query our certificate using signature-based authentication (ansible rsa private key file)
  cisco.aci.aci_aaa_user_certificate:
    <<: *cert_query
    private_key: '{{ role_path }}/pki/rsa_ansible.key'
    certificate_name: admin
  register: query_cert_openssh_rsa_key
  ignore_errors: yes

- name: Query our certificate using signature-based authentication (valid rsa private key file)
  cisco.aci.aci_aaa_user_certificate:
    <<: *cert_query
    private_key: '{{ role_path }}/pki/rsa_user.key'
    certificate_name: "{{ item }}"
  register: query_cert_ansible_rsa_key
  loop:
    - "rsa_user"
    - "user"
    #- "admin"

- name: Query our certificate using signature-based authentication (private key content for rsa_user certificate)
  cisco.aci.aci_aaa_user_certificate:
    <<: *cert_query
    private_key: |
      -----BEGIN PRIVATE KEY-----
      MIICdwIBADANBgkqhkiG9w0BAQEFAASCAmEwggJdAgEAAoGBAMI29/1t8f2z1/m8
      pYdj4123BT8KXUzycKk8QnVIpyUSrx11u68EYlfU3aDWWfeOkb1TOpdi81CcmiuM
      GWR3+liidr3i+iyKzkQN9rzfqH5qZ13EwFENSVch264stBmk/tcGApaiJlo/B8Yr
      JIKQ/qSnPpM4Jd98cMMKsrhdTe4pAgMBAAECgYAX8c8BX9zF+rZWA/wkhRwzIa1z
      6EM4iWt6cgN/kkWJPJR6fVl2aoP1cDki60qMSveM8AX5RCnbdnNLiypWSLSEogdd
      bRWyFeF4ZXvivd+Lds2u5Ni3PiCrIpHfNvid2ERCaKhblQRdhi/dTH9Z+3kGspwc
      jpKzWMmGjBpqWjWOQQJBAOB3cS/AxbwJ6Fzvbi6sLiK6Ry8eSIMlce3Yyw89oU+M
      DGkIbggICCYKxXYIWtBbyxthdQudKFZYbLpCkLSMBXsCQQDdf5ICNN2R0ptYLhSX
      kQ4tiGigi1hq93+25Ov1rI8eIFSYlKNcyA/cvwv5ptlXmy1UAyoAdGCbS47pgCwT
      Nz+rAkEAtzHkR5PuDXSMluS2KRNPJ/qdxB/UEGzMGdEYkNy8vX5QVpyRqK5dcCbU
      V2ukKm7wSe11KEBgPnA2dKGFFkU85wJAD895Vpr7bdtAp2yyn5cFEg74mO0ZZJlC
      DoYMqb6lgJsCLtn9RzQonbMtYaadQPmcpLCNIPctpiggjV5OxxhcfQJBAM1ETm8p
      /9beBPTS8cJdWHvCRE149H/ZCUxqjFZriJzFYvi0xor85eK8/3V7xaWtTkK25i3+
      xWk+sA3DYYDPGM8=
      -----END PRIVATE KEY-----
    certificate_name: "{{ item }}"
  register: query_cert_key_content
  loop:
    - "rsa_user"
    - "user"
    #- "admin"

# REMOVE CERTIFICATE
- name: Remove certificate (check_mode)
  cisco.aci.aci_aaa_user_certificate: &cert_delete
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: '{{ aci_output_level | default("info") }}'
    aaa_user: '{{ aci_username }}'
    certificate_name: admin
    state: absent
  check_mode: yes
  register: cm_remove_cert

- name: Remove certificate (normal mode)
  cisco.aci.aci_aaa_user_certificate: *cert_delete
  register: nm_remove_cert

- name: Remove certificate again (check_mode)
  cisco.aci.aci_aaa_user_certificate: *cert_delete
  check_mode: yes
  register: cm_remove_cert_again

- name: Remove certificate again (normal mode)
  cisco.aci.aci_aaa_user_certificate: *cert_delete
  register: nm_remove_cert_again

- name: Verify remove_cert
  assert:
    that:
    - cm_remove_cert is changed
    - nm_remove_cert is changed
    - cm_remove_cert_again is not changed
    - nm_remove_cert_again is not changed