# Test code for the ACI modules
# Copyright: (c) 2020, Cindy Zhao (@cizhao) <cizhao@cisco.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI APIC host, ACI username and ACI password
  fail:
    msg: 'Please define the following variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

# CLEAN ENVIRONMENT
- name: Set vars
  set_fact:
    aci_info: &aci_info
      host: "{{ aci_hostname }}"
      username: "{{ aci_username }}"
      password: "{{ aci_password }}"
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: '{{ aci_output_level | default("info") }}'

- name: Verify Cloud and Non-Cloud Sites in use.
  include_tasks: ../../../../../../integration/targets/aci_cloud_provider/tasks/main.yml

- name: Execute tasks only for cloud sites
  when: query_cloud.current | length > 0  # This condition will execute only cloud sites
  block:  # block specifies execution of tasks within, based on conditions
  - name: Query all regions
    aci_cloud_region:
      <<: *aci_info
      cloud: "{{ cloud_type }}"
      state: query
    register: query_all

  - name: Verify query_all
    assert:
      that:
      - query_all is not changed
      - query_all.current.0.cloudProvP.attributes.dn == "uni/clouddomp/provp-{{cloud_type}}"
      - query_all.current.0.cloudProvP.attributes.vendor == "{{cloud_type}}"
      - query_all.current.0.cloudProvP.children | length > 10
    when: query_all.current != []

  - name: Query a specific region
    aci_cloud_region:
      <<: *aci_info
      cloud: "{{ cloud_type }}"
      region: "{{ region_2 }}"
      state: query
    register: query_region

  - name: Verify query_region
    assert:
      that:
      - query_region is not changed
      - query_region.current.0.cloudRegion.attributes.adminSt == "managed"
      - query_region.current.0.cloudRegion.attributes.dn == "uni/clouddomp/provp-{{cloud_type}}/region-{{region_2}}"
      - query_region.current.0.cloudRegion.attributes.name == "{{region_2}}"
    when: query_region.current != []

  - name: Query non_existing region
    aci_cloud_region:
      <<: *aci_info
      cloud: "{{ cloud_type }}"
      region: non_existing
      state: query
    register: query_non_existing_region

  - name: Verify query_non_existing_region
    assert:
      that:
      - query_non_existing_region is not changed
      - query_non_existing_region.current == []
