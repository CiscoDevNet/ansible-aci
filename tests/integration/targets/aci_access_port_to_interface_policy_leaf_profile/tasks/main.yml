# Test code for the ACI modules
# Copyright: (c) 2020, Shreyas Srish <ssrish@cisco.com>
# Copyright: (c) 2017, Bruno Calogero <brunocalogero@hotmail.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI APIC host, ACI username and ACI password
  fail:
    msg: 'Please define the following variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

# SET VARS
- name: Set vars
  set_fact:
    aci_info: &aci_info
      host: '{{ aci_hostname }}'
      username: '{{ aci_username }}'
      password: '{{ aci_password }}'
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: '{{ aci_output_level | default("info") }}'

- name: Remove Interface policy leaf profile - Cleanup
  cisco.aci.aci_interface_policy_leaf_profile: &aci_interface_policy_leaf_profile_absent
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    leaf_interface_profile: leafintprftest
    state: absent

- name: Remove Interface policy fex profile - Cleanup
  cisco.aci.aci_interface_policy_leaf_profile:
    <<: *aci_interface_policy_leaf_profile_absent
    type: fex
    leaf_interface_profile: fexintprftest
    state: absent

- name: Ensuring bindings do not already exist
  cisco.aci.aci_access_port_to_interface_policy_leaf_profile: &aci_access_port_to_interface_policy_leaf_profile_absent
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    leaf_interface_profile: leafintprftest
    access_port_selector: anstest_accessportselector
    state: absent

- name: Ensuring bindings do not already exist
  cisco.aci.aci_access_port_to_interface_policy_leaf_profile:
    <<: *aci_access_port_to_interface_policy_leaf_profile_absent
    leaf_interface_profile: leafintprftest_fex
    access_port_selector: anstest_accessportselector_fex
    state: absent

- name: Ensuring Interface Policy Leaf profile exists for kick off
  cisco.aci.aci_interface_policy_leaf_profile: &aci_interface_policy_leaf_profile_present
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: debug
    state: present
    leaf_interface_profile: leafintprftest
  register: leaf_profile_present

- name: Ensuring Interface Policy Fex profile exists for kick off
  cisco.aci.aci_interface_policy_leaf_profile: 
    <<: *aci_interface_policy_leaf_profile_present
    type: fex
    leaf_interface_profile: fexintprftest

# TODO: Ensure that leaf Policy Group Exists (module missing) (infra:AccPortGrp)

- name: Bind an Interface Access Port Selector to an Interface Policy Leaf Profile with a Policy Group - check mode works
  cisco.aci.aci_access_port_to_interface_policy_leaf_profile: &aci_access_port_to_interface_policy_leaf_profile_present
    <<: *aci_interface_policy_leaf_profile_present
    access_port_selector: anstest_accessportselector
  check_mode: yes
  register: accessport_to_intf_check_mode_present

- name: Bind an Interface Access Port Selector to an Interface Policy Leaf Profile with a Policy Group - creation works
  cisco.aci.aci_access_port_to_interface_policy_leaf_profile:
    <<: *aci_access_port_to_interface_policy_leaf_profile_present
  register: accessport_to_intf_present

- name: Bind an Interface Access Port Selector to an Interface Policy Leaf Profile with a Policy Group - idempotency works
  cisco.aci.aci_access_port_to_interface_policy_leaf_profile:
    <<: *aci_access_port_to_interface_policy_leaf_profile_present
  register: accessport_to_intf_idempotent

- name: Bind an Interface Access Port Selector to an Interface Policy Profile with a Policy Group - update works
  cisco.aci.aci_access_port_to_interface_policy_leaf_profile:
    <<: *aci_access_port_to_interface_policy_leaf_profile_present
    policy_group: anstest_policygroupname
  register: accessport_to_intf_update

- name: Bind an Interface Access Port Selector to an Interface Policy Fex Profile with a Policy Group - creation works
  cisco.aci.aci_access_port_to_interface_policy_leaf_profile:
    <<: *aci_access_port_to_interface_policy_leaf_profile_present
    type: fex
    access_port_selector: anstest_fex_accessportselector
    leaf_interface_profile: fexintprftest
  register: accessport_to_intf_present_fex

- name: Bind an Interface Access Port Selector to an Interface Policy Fex Profile with a Policy Group - idempotency works
  cisco.aci.aci_access_port_to_interface_policy_leaf_profile:
    <<: *aci_access_port_to_interface_policy_leaf_profile_present
    type: fex
    access_port_selector: anstest_fex_accessportselector
    leaf_interface_profile: fexintprftest
  register: accessport_to_intf_idempotent_fex

- name: Bind an Interface Access Port Selector to an Interface Policy Fex Profile with a Policy Group - update works
  cisco.aci.aci_access_port_to_interface_policy_leaf_profile:
    <<: *aci_access_port_to_interface_policy_leaf_profile_present
    policy_group: anstest_fex_policygroupname
    access_port_selector: anstest_fex_accessportselector
    type: fex
    leaf_interface_profile: fexintprftest
  register: accessport_to_intf_update_fex

# TODO: also test for errors
- name: present assertions
  assert:
    that:
    - accessport_to_intf_check_mode_present is changed
    - accessport_to_intf_present is changed
    - accessport_to_intf_present.current.0.infraHPortS.attributes.annotation == 'orchestrator:ansible'
    - accessport_to_intf_present.previous == []
    - accessport_to_intf_present.sent.infraHPortS.attributes.name == 'anstest_accessportselector'
    - accessport_to_intf_idempotent is not changed
    - accessport_to_intf_idempotent.sent == {}
    - accessport_to_intf_update is changed
    - accessport_to_intf_update.sent.infraHPortS.attributes == {}
    - accessport_to_intf_update.sent.infraHPortS.children[0].infraRsAccBaseGrp.attributes.tDn == 'uni/infra/funcprof/accportgrp-anstest_policygroupname'
    - accessport_to_intf_present_fex is changed
    - accessport_to_intf_present_fex.previous == []
    - accessport_to_intf_present_fex.sent.infraHPortS.attributes.name == 'anstest_fex_accessportselector'
    - accessport_to_intf_idempotent_fex is not changed
    - accessport_to_intf_idempotent_fex.sent == {}
    - accessport_to_intf_update_fex is changed
    - accessport_to_intf_update_fex.sent.infraHPortS.children[0].infraRsAccBaseGrp.attributes.tDn == 'uni/infra/funcprof/accportgrp-anstest_fex_policygroupname'

- name: Query Specific access_port_selector and leaf_interface_profile binding
  cisco.aci.aci_access_port_to_interface_policy_leaf_profile:
    <<: *aci_interface_policy_leaf_profile_present
    access_port_selector: anstest_accessportselector # "{{ fake_var | default(omit) }}" ?
    state: query
  register: binding_query

- name: Query Specific access_port_selector and fex_interface_profile binding
  cisco.aci.aci_access_port_to_interface_policy_leaf_profile:
    <<: *aci_interface_policy_leaf_profile_present
    type: fex
    access_port_selector: anstest_fex_accessportselector
    leaf_interface_profile: fexintprftest
    state: query
  register: binding_query_fex

- name: present assertions
  assert:
    that:
      - binding_query is not changed
      - binding_query_fex is not changed
      - binding_query.current | length >= 1
      - '"api/mo/uni/infra/accportprof-leafintprftest/hports-anstest_accessportselector-typ-range.json" in binding_query.url'

- name: Remove binding of interface access port selector and Interface Policy Leaf Profile - check mode
  cisco.aci.aci_access_port_to_interface_policy_leaf_profile:
    <<: *aci_access_port_to_interface_policy_leaf_profile_absent
  check_mode: yes
  register: accessport_to_intf_check_mode_absent

- name: Remove binding of interface access port selector and Interface Policy Leaf Profile - delete works
  cisco.aci.aci_access_port_to_interface_policy_leaf_profile:
    <<: *aci_access_port_to_interface_policy_leaf_profile_absent
  register: accessport_to_intf_absent

- name: Remove binding of interface access port selector and Interface Policy Leaf Profile - idempotency works
  cisco.aci.aci_access_port_to_interface_policy_leaf_profile:
    <<: *aci_access_port_to_interface_policy_leaf_profile_absent
  register: accessport_to_intf_absent_idempotent

- name: Remove binding of interface access port selector and Interface Policy Fex Profile
  cisco.aci.aci_access_port_to_interface_policy_leaf_profile:
    <<: *aci_access_port_to_interface_policy_leaf_profile_absent
    type: fex
    access_port_selector: anstest_fex_accessportselector
    leaf_interface_profile: fexintprftest
    state: absent
  register: accessport_to_intf_absent_fex

- name: absent assertions
  assert:
    that:
      - accessport_to_intf_check_mode_absent is changed
      - accessport_to_intf_absent_fex is changed
      - accessport_to_intf_absent is changed
      - accessport_to_intf_absent_idempotent is not changed

- name: Remove Interface policy fex profile - Cleanup
  cisco.aci.aci_interface_policy_leaf_profile:
    <<: *aci_interface_policy_leaf_profile_absent

- name: Remove Interface policy fex profile - Cleanup
  cisco.aci.aci_interface_policy_leaf_profile:
    <<: *aci_interface_policy_leaf_profile_absent
    type: fex
    leaf_interface_profile: fexintprftest
    state: absent

- name: Add anstest_fex_port_channel - Interface Policy Leaf Profile with type Fex
  cisco.aci.aci_interface_policy_leaf_profile: &anstest_fex_port_channel_present
    <<: *aci_interface_policy_leaf_profile_present
    type: fex
    leaf_interface_profile: anstest_fex_port_channel

- name: Add policygroupname_link_fpc - Policy Group with lag type link
  cisco.aci.aci_interface_policy_leaf_policy_group:
    <<: *aci_info
    policy_group: policygroupname_link_fpc
    lag_type: link
    link_level_policy: link_level_policy
    fibre_channel_interface_policy: fiber_channel_policy
    state: present

- name: Bind anstest_fex_port_channel Access Port Selector with policygroupname_link_fpc Policy Group - check mode
  cisco.aci.aci_access_port_to_interface_policy_leaf_profile: &cm_fpc_present
    <<: *anstest_fex_port_channel_present
    interface_type: fex_port_channel
    access_port_selector: anstest_fex_port_channel
    policy_group: policygroupname_link_fpc
  check_mode: yes
  register: cm_fpc_present

- name: Assertion check for bind anstest_fex_port_channel Access Port Selector with policygroupname_link_fpc Policy Group - check mode
  assert:
    that:
    - cm_fpc_present.current | length == 0
    - cm_fpc_present.previous | length == 0
    - cm_fpc_present.sent.infraHPortS.attributes.name == "anstest_fex_port_channel"
    - cm_fpc_present.sent.infraHPortS.children.0.infraRsAccBaseGrp.attributes.tDn == "uni/infra/funcprof/accbundle-policygroupname_link_fpc"

- name: Bind anstest_fex_port_channel Access Port Selector with policygroupname_link_fpc Policy Group - normal mode
  cisco.aci.aci_access_port_to_interface_policy_leaf_profile: &nm_fpc_present
    <<: *cm_fpc_present
  register: nm_fpc_present

- name: Assertion check for bind anstest_fex_port_channel Access Port Selector with policygroupname_link_fpc Policy Group - normal mode
  assert:
    that:
    - nm_fpc_present.current | length == 1
    - nm_fpc_present.previous | length == 0
    - nm_fpc_present.current.0.infraHPortS.attributes.name == "anstest_fex_port_channel"
    - nm_fpc_present.current.0.infraHPortS.children.0.infraRsAccBaseGrp.attributes.tDn == "uni/infra/funcprof/accbundle-policygroupname_link_fpc"
    - nm_fpc_present.current.0.infraHPortS.children.0.infraRsAccBaseGrp.attributes.fexId == "101"

- name: Remove anstest_fex_port_channel Access Port Selector with policygroupname_link_fpc Policy Group - check mode
  cisco.aci.aci_access_port_to_interface_policy_leaf_profile: &cm_fpc_absent
    <<: *nm_fpc_present
    state: absent
  check_mode: yes
  register: cm_fpc_absent

- name: Assertion check for remove anstest_fex_port_channel Access Port Selector with policygroupname_link_fpc Policy Group - check mode
  assert:
    that:
    - cm_fpc_absent.current | length == 1
    - cm_fpc_absent.previous | length == 1
    - cm_fpc_absent.current.0.infraHPortS.attributes.name == "anstest_fex_port_channel"
    - cm_fpc_absent.previous.0.infraHPortS.attributes.name == "anstest_fex_port_channel"
    - cm_fpc_absent.current.0.infraHPortS.children.0.infraRsAccBaseGrp.attributes.tDn == "uni/infra/funcprof/accbundle-policygroupname_link_fpc"
    - cm_fpc_absent.previous.0.infraHPortS.children.0.infraRsAccBaseGrp.attributes.tDn == "uni/infra/funcprof/accbundle-policygroupname_link_fpc"
    - cm_fpc_absent.current.0.infraHPortS.children.0.infraRsAccBaseGrp.attributes.fexId == "101"
    - cm_fpc_absent.previous.0.infraHPortS.children.0.infraRsAccBaseGrp.attributes.fexId == "101"

- name: Remove anstest_fex_port_channel Access Port Selector with policygroupname_link_fpc Policy Group - normal mode
  cisco.aci.aci_access_port_to_interface_policy_leaf_profile:
    <<: *cm_fpc_absent
  register: nm_fpc_absent

- name: Assertion check for remove anstest_fex_port_channel Access Port Selector with policygroupname_link_fpc Policy Group - normal mode
  assert:
    that:
    - nm_fpc_absent.current | length == 0
    - nm_fpc_absent.previous | length == 1
    - nm_fpc_absent.previous.0.infraHPortS.attributes.name == "anstest_fex_port_channel"
    - nm_fpc_absent.previous.0.infraHPortS.children.0.infraRsAccBaseGrp.attributes.tDn == "uni/infra/funcprof/accbundle-policygroupname_link_fpc"
    - nm_fpc_absent.previous.0.infraHPortS.children.0.infraRsAccBaseGrp.attributes.fexId == "101"

- name: Add anstest_fex_vpc - Interface Policy Leaf Profile with type Fex
  cisco.aci.aci_interface_policy_leaf_profile: &anstest_fex_vpc
    <<: *aci_interface_policy_leaf_profile_present
    type: fex
    leaf_interface_profile: anstest_fex_vpc
  register: anstest_fex_vpc_present

- name: Assertion check for add anstest_fex_vpc - Interface Policy Leaf Profile with type Fex
  assert:
    that:
    - anstest_fex_vpc_present.current | length == 1
    - anstest_fex_vpc_present.current.0.infraFexP.attributes.name == "anstest_fex_vpc"
    - anstest_fex_vpc_present.current.0.infraFexP.attributes.dn == "uni/infra/fexprof-anstest_fex_vpc"

- name: Add policygroupname_node_fvpc - Policy Group with lag type node
  cisco.aci.aci_interface_policy_leaf_policy_group:
    <<: *aci_info
    policy_group: policygroupname_node_fvpc
    lag_type: node
    link_level_policy: link_level_policy
    fibre_channel_interface_policy: fiber_channel_policy
    state: present
  register: policygroupname_node_fvpc_present

- name: Assertion check for add policygroupname_node_fvpc - Policy Group with lag type node
  assert:
    that:
    - policygroupname_node_fvpc_present.current | length == 1
    - policygroupname_node_fvpc_present.current.0.infraAccBndlGrp.attributes.name == "policygroupname_node_fvpc"
    - policygroupname_node_fvpc_present.current.0.infraAccBndlGrp.attributes.lagT == "node"

- name: Bind anstest_fex_vpc Access Port Selector with policygroupname_node_fvpc Policy Group - check mode
  cisco.aci.aci_access_port_to_interface_policy_leaf_profile: &cm_fex_vpc_present
    <<: *anstest_fex_vpc
    interface_type: fex_vpc
    access_port_selector: anstest_fex_vpc
    policy_group: policygroupname_node_fvpc
  check_mode: yes
  register: cm_fex_vpc_present

- name: Assertion check for bind anstest_fex_vpc Access Port Selector with policygroupname_node_fvpc Policy Group - check mode
  assert:
    that:
    - cm_fex_vpc_present.current | length == 0
    - cm_fex_vpc_present.previous | length == 0
    - cm_fex_vpc_present.sent.infraHPortS.attributes.name == "anstest_fex_vpc"
    - cm_fex_vpc_present.sent.infraHPortS.children.0.infraRsAccBaseGrp.attributes.tDn == "uni/infra/funcprof/accbundle-policygroupname_node_fvpc"

- name: Bind anstest_fex_vpc Access Port Selector with policygroupname_node_fvpc Policy Group - normal mode
  cisco.aci.aci_access_port_to_interface_policy_leaf_profile:
    <<: *cm_fex_vpc_present
  register: nm_fex_vpc_present

- name: Assertion check for bind anstest_fex_vpc Access Port Selector with policygroupname_node_fvpc Policy Group - normal mode
  assert:
    that:
    - nm_fex_vpc_present.current | length == 1
    - nm_fex_vpc_present.previous | length == 0
    - nm_fex_vpc_present.current.0.infraHPortS.attributes.name == "anstest_fex_vpc"
    - nm_fex_vpc_present.current.0.infraHPortS.children.0.infraRsAccBaseGrp.attributes.fexId == "101"
    - nm_fex_vpc_present.current.0.infraHPortS.children.0.infraRsAccBaseGrp.attributes.tDn == "uni/infra/funcprof/accbundle-policygroupname_node_fvpc"

- name: Remove anstest_fex_vpc Access Port Selector with policygroupname_node_fvpc Policy Group - check mode
  cisco.aci.aci_access_port_to_interface_policy_leaf_profile: &cm_fex_vpc_absent
    <<: *cm_fex_vpc_present
    state: absent
  check_mode: yes
  register: cm_fex_vpc_absent

- name: Assertion check for remove anstest_fex_vpc Access Port Selector with policygroupname_node_fvpc Policy Group - check mode
  assert:
    that:
    - cm_fex_vpc_absent.current | length == 1
    - cm_fex_vpc_absent.previous | length == 1
    - cm_fex_vpc_absent.current.0.infraHPortS.attributes.name == "anstest_fex_vpc"
    - cm_fex_vpc_absent.previous.0.infraHPortS.attributes.name == "anstest_fex_vpc"
    - cm_fex_vpc_absent.current.0.infraHPortS.children.0.infraRsAccBaseGrp.attributes.fexId == "101"
    - cm_fex_vpc_absent.previous.0.infraHPortS.children.0.infraRsAccBaseGrp.attributes.fexId == "101"
    - cm_fex_vpc_absent.current.0.infraHPortS.children.0.infraRsAccBaseGrp.attributes.tDn == "uni/infra/funcprof/accbundle-policygroupname_node_fvpc"
    - cm_fex_vpc_absent.previous.0.infraHPortS.children.0.infraRsAccBaseGrp.attributes.tDn == "uni/infra/funcprof/accbundle-policygroupname_node_fvpc"

- name: Remove anstest_fex_vpc Access Port Selector with policygroupname_node_fvpc Policy Group - normal mode
  cisco.aci.aci_access_port_to_interface_policy_leaf_profile:
    <<: *cm_fex_vpc_absent
  register: nm_fex_vpc_absent

- name: Assertion check for remove anstest_fex_vpc Access Port Selector with policygroupname_node_fvpc Policy Group - normal mode
  assert:
    that:
    - nm_fex_vpc_absent.current | length == 0
    - nm_fex_vpc_absent.previous | length == 1
    - nm_fex_vpc_absent.previous.0.infraHPortS.attributes.name == "anstest_fex_vpc"
    - nm_fex_vpc_absent.previous.0.infraHPortS.children.0.infraRsAccBaseGrp.attributes.fexId == "101"
    - nm_fex_vpc_absent.previous.0.infraHPortS.children.0.infraRsAccBaseGrp.attributes.tDn == "uni/infra/funcprof/accbundle-policygroupname_node_fvpc"

# Removing profiles
- name: Remove anstest_fex_vpc - Interface Policy Leaf Profile with type Fex
  cisco.aci.aci_interface_policy_leaf_profile:
    <<: *anstest_fex_vpc
    state: absent
  register: anstest_fex_vpc_absent

- name: Assertion check for remove anstest_fex_vpc - Interface Policy Leaf Profile with type Fex
  assert:
    that:
    - anstest_fex_vpc_absent.current | length == 0
    - anstest_fex_vpc_absent.previous | length == 1
    - anstest_fex_vpc_absent.previous.0.infraFexP.attributes.name == "anstest_fex_vpc"

- name: Remove anstest_fex_port_channel - Interface Policy Leaf Profile with type Fex
  cisco.aci.aci_interface_policy_leaf_profile:
    <<: *anstest_fex_port_channel_present
    state: absent
  register: anstest_fex_port_channel_absent

- name: Assertion check for remove anstest_fex_port_channel - Interface Policy Leaf Profile with type Fex
  assert:
    that:
    - anstest_fex_port_channel_absent.current | length == 0
    - anstest_fex_port_channel_absent.previous | length == 1
    - anstest_fex_port_channel_absent.previous.0.infraFexP.attributes.name == "anstest_fex_port_channel"
