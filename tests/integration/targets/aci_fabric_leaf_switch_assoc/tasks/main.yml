# Test code for the ACI modules
# Copyright: (c) 2021, Tim Cragg (@timcragg)

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI APIC host, ACI username and ACI password
  fail:
    msg: 'Please define the following variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

# GET Credentials from the inventory
- name: Set vars
  set_fact:
    aci_info: &aci_info
      host: "{{ aci_hostname }}"
      username: "{{ aci_username }}"
      password: "{{ aci_password }}"
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: debug

# CLEAN ENVIRONMENT
- name: Remove ansible_leaf_switch_prf if it already exists
  aci_fabric_leaf_profile:
    <<: *aci_info
    name: ansible_leaf_switch_prf
    state: absent

# CREATE SPINE SWITCH POLICY
- name: Create ansible_leaf_switch_prf
  aci_fabric_leaf_profile:
    <<: *aci_info
    name: ansible_leaf_switch_prf
    state: present

# CREATE SPINE SWITCH ASSOCIATION
- name: Create a leaf switch profile association
  aci_fabric_leaf_switch_assoc:
    <<: *aci_info
    profile: ansible_leaf_switch_prf
    name: ansible_leaf_switch_assoc
    policy_group: ansible_leaf_pol_grp1
    state: present
  register: add_association

- name: Verify association creation
  assert:
    that:
    - add_association.current.0.fabricLeafS.attributes.dn == "uni/fabric/leprof-ansible_leaf_switch_prf/leaves-ansible_leaf_switch_assoc-typ-range"
    - add_association.current.0.fabricLeafS.attributes.name == "ansible_leaf_switch_assoc"
    - add_association.current.0.fabricLeafS.attributes.type == "range"
    - add_association.current.0.fabricLeafS.attributes.annotation == 'orchestrator:ansible'

- name: Verify Policy Group association
  assert:
    that:
    - add_association.current.0.fabricLeafS.children.0.fabricRsLeNodePGrp.attributes.tDn == "uni/fabric/funcprof/lenodepgrp-ansible_leaf_pol_grp1"

# CREATE SPINE SWITCH ASSOCIATION AGAIN TO TEST IDEMPOTENCE
- name: Create a leaf switch profile association again
  aci_fabric_leaf_switch_assoc:
    <<: *aci_info
    profile: ansible_leaf_switch_prf
    name: ansible_leaf_switch_assoc
    policy_group: ansible_leaf_pol_grp1
    state: present
  register: add_association_again

- name: Verify association creation idempotence
  assert:
    that:
    - add_association_again is not changed
    - add_association_again.current.0.fabricLeafS.attributes.dn == "uni/fabric/leprof-ansible_leaf_switch_prf/leaves-ansible_leaf_switch_assoc-typ-range"
    - add_association_again.current.0.fabricLeafS.attributes.name == "ansible_leaf_switch_assoc"
    - add_association_again.current.0.fabricLeafS.attributes.type == "range"

- name: Verify Policy Group association idempotence
  assert:
    that:
    - add_association_again.current.0.fabricLeafS.children.0.fabricRsLeNodePGrp.attributes.tDn == "uni/fabric/funcprof/lenodepgrp-ansible_leaf_pol_grp1"

# CREATE SPINE SWITCH ASSOCIATION WITHOUT POLICY GROUP
- name: Create a leaf switch profile association without a policy group
  aci_fabric_leaf_switch_assoc:
    <<: *aci_info
    profile: ansible_leaf_switch_prf
    name: ansible_leaf_switch_assoc2
    state: present
  register: add_association_without_policy_group

- name: Verify association creation
  assert:
    that:
    - add_association_without_policy_group.current.0.fabricLeafS.attributes.dn == "uni/fabric/leprof-ansible_leaf_switch_prf/leaves-ansible_leaf_switch_assoc2-typ-range"
    - add_association_without_policy_group.current.0.fabricLeafS.attributes.name == "ansible_leaf_switch_assoc2"
    - add_association_without_policy_group.current.0.fabricLeafS.attributes.type == "range"

# UPDATE SPINE SWITCH POLICY GROUP ASSOCIATION
- name: Update a leaf switch profile association
  aci_fabric_leaf_switch_assoc:
    <<: *aci_info
    profile: ansible_leaf_switch_prf
    name: ansible_leaf_switch_assoc
    policy_group: ansible_leaf_pol_grp2
    state: present
  register: update_association

- name: Verify association update
  assert:
    that:
    - update_association is changed
    - update_association.current.0.fabricLeafS.attributes.dn == "uni/fabric/leprof-ansible_leaf_switch_prf/leaves-ansible_leaf_switch_assoc-typ-range"
    - update_association.current.0.fabricLeafS.attributes.name == "ansible_leaf_switch_assoc"
    - update_association.current.0.fabricLeafS.attributes.type == "range"

- name: Verify Policy Group association update
  assert:
    that:
    - update_association.current.0.fabricLeafS.children.0.fabricRsLeNodePGrp.attributes.tDn == "uni/fabric/funcprof/lenodepgrp-ansible_leaf_pol_grp2"

# QUERY SPINE SWITCH ASSOCIATION
- name: Query leaf switch profile association
  aci_fabric_leaf_switch_assoc:
    <<: *aci_info
    profile: ansible_leaf_switch_prf
    name: ansible_leaf_switch_assoc
    state: query
  register: query_association

- name: Verify query data
  assert:
    that:
    - query_association is not changed
    - query_association.current.0.fabricLeafS.attributes.dn == "uni/fabric/leprof-ansible_leaf_switch_prf/leaves-ansible_leaf_switch_assoc-typ-range"
    - query_association.current.0.fabricLeafS.attributes.name == "ansible_leaf_switch_assoc"
    - query_association.current.0.fabricLeafS.attributes.type == "range"

- name: Verify Policy Group association
  assert:
    that:
    - query_association.current.0.fabricLeafS.children.0.fabricRsLeNodePGrp.attributes.tDn == "uni/fabric/funcprof/lenodepgrp-ansible_leaf_pol_grp2"

# QUERY ALL SPINE SWITCH ASSOCIATIONS
- name: Query leaf switch profile association
  aci_fabric_leaf_switch_assoc:
    <<: *aci_info
    state: query
  register: query_association_all

- name: Verify query all idempotence
  assert:
    that:
    - query_association_all is not changed

# DELETE SPINE SWITCH ASSOCIATION
- name: Delete leaf switch profile association
  aci_fabric_leaf_switch_assoc:
    <<: *aci_info
    profile: ansible_leaf_switch_prf
    name: ansible_leaf_switch_assoc
    state: absent
  register: delete_association

- name: Verify association removal
  assert:
    that:
    - delete_association is changed
    - delete_association.current == []
    - delete_association.previous.0.fabricLeafS.attributes.dn == "uni/fabric/leprof-ansible_leaf_switch_prf/leaves-ansible_leaf_switch_assoc-typ-range"
    - delete_association.previous.0.fabricLeafS.attributes.name == "ansible_leaf_switch_assoc"
    - delete_association.previous.0.fabricLeafS.attributes.type == "range"

# DELETE SPINE SWITCH ASSOCIATION AGAIN TO TEST IDEMPOTENCE
- name: Delete leaf switch profile association again
  aci_fabric_leaf_switch_assoc:
    <<: *aci_info
    profile: ansible_leaf_switch_prf
    name: ansible_leaf_switch_assoc
    state: absent
  register: delete_association_again

- name: Verify association removal idempotence
  assert:
    that:
    - delete_association_again is not changed
    - delete_association_again.current == []

# CLEAN UP ENVIRONMENT
- name: Remove ansible_leaf_switch_prf
  aci_fabric_leaf_profile:
    <<: *aci_info
    name: ansible_leaf_switch_prf
    state: absent
