# Test code for the ACI modules
# Copyright: (c) 2023, Sabari Jaganathan (@sajagana)

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI APIC host, ACI username and ACI password
  fail:
    msg: "Please define the following variables: aci_hostname, aci_username and aci_password."
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

# SET VARS
- name: Set vars
  set_fact:
    aci_info: &aci_info
      host: "{{ aci_hostname }}"
      username: "{{ aci_username }}"
      password: "{{ aci_password }}"
      validate_certs: "{{ aci_validate_certs | default(false) }}"
      use_ssl: "{{ aci_use_ssl | default(true) }}"
      use_proxy: "{{ aci_use_proxy | default(true) }}"
      output_level: '{{ aci_output_level | default("info") }}'

- name: Query system information
  cisco.aci.aci_system:
    <<: *aci_info
    id: 1
    state: query
  register: version

- name: Ensure leaf_policy_group does not exist
  aci_fabric_interface_policy_group:
    <<: *aci_info
    name: leaf_policy_group
    type: leaf
    state: absent

- name: Ensure spine_policy_group does not exist
  aci_fabric_interface_policy_group:
    <<: *aci_info
    name: spine_policy_group
    type: spine
    state: absent

- name: Add a leaf fabric interface policy group with check mode
  aci_fabric_interface_policy_group: &cm_leaf_policy_group_present
    <<: *aci_info
    name: leaf_policy_group
    type: leaf
    descr: leaf_policy_group created
    state: present
  check_mode: true
  register: cm_leaf_policy_group_present

- name: Add a leaf fabric interface policy group with normal mode
  aci_fabric_interface_policy_group: &nm_leaf_policy_group_present
    <<: *cm_leaf_policy_group_present
    dwdm_policy: default
    link_level_policy: default
    link_flap_policy: default
    l3_interface_policy: default
    macsec_policy: default
    monitoring_policy: default
  register: nm_leaf_policy_group_present

- name: Add a leaf fabric interface policy group with normal mode again
  aci_fabric_interface_policy_group:
    <<: *nm_leaf_policy_group_present
  register: nm_leaf_policy_group_present_again

- name: Add a spine fabric interface policy group with check mode
  aci_fabric_interface_policy_group: &cm_spine_policy_group_present
    <<: *aci_info
    name: spine_policy_group
    type: spine
    descr: spine_policy_group created
    dwdm_policy: default
    link_level_policy: default
    link_flap_policy: default
    l3_interface_policy: default
    macsec_policy: default
    monitoring_policy: default
    state: present
  check_mode: true
  register: cm_spine_policy_group_present

- name: Execute tasks only for ACI v6.0(2h)+
  when: version.current.0.topSystem.attributes.version is version('6.0(2h)', '>=')
  block:
    - name: Add a spine fabric interface policy group with transceiver_policy_tdn
      aci_fabric_interface_policy_group: &tp_spine_policy_group_present
        <<: *aci_info
        name: spine_policy_group
        type: spine
        descr: spine_policy_group created
        transceiver_policy_tdn: "uni/fabric/zrfab-default"
        state: present
      register: tp_spine_policy_group_present

    - name: Remove the transceiver_policy from the spine fabric interface policy group
      aci_fabric_interface_policy_group:
        <<: *aci_info
        name: spine_policy_group
        type: spine
        descr: spine_policy_group created
        transceiver_policy_tdn: ""
        state: present
      register: tp_spine_policy_group_absent

    - name: Assertions check for add fabric interface policy groups
      assert:
        that:
          - tp_spine_policy_group_present is changed
          - tp_spine_policy_group_absent is changed
          - tp_spine_policy_group_present.current.0.fabricSpPortPGrp.children | selectattr('fabricRsOpticsFabIfPol.attributes.tDn', 'defined') | selectattr('fabricRsOpticsFabIfPol.attributes.tDn', 'equalto', "uni/fabric/zrfab-default")
          - tp_spine_policy_group_absent.current.0.fabricSpPortPGrp.children | selectattr('fabricRsOpticsFabIfPol.attributes.tDn', 'defined') | selectattr('fabricRsOpticsFabIfPol.attributes.tDn', 'equalto', "")

- name: Add a spine fabric interface policy group with normal mode
  aci_fabric_interface_policy_group:
    <<: *cm_spine_policy_group_present
  register: nm_spine_policy_group_present

- name: Add a spine fabric interface policy group with normal mode again
  aci_fabric_interface_policy_group:
    <<: *cm_spine_policy_group_present
  register: nm_spine_policy_group_present_again

- name: Update a spine fabric interface policy group with check mode
  aci_fabric_interface_policy_group: &cm_spine_policy_group_update
    <<: *cm_spine_policy_group_present
    descr: spine_policy_group updated
    dwdm_policy: ""
    link_level_policy: ""
    link_flap_policy: ""
    l3_interface_policy: ""
    macsec_policy: ""
    monitoring_policy: ""
  check_mode: true
  register: cm_spine_policy_group_update

- name: Update a spine fabric interface policy group with normal mode
  aci_fabric_interface_policy_group:
    <<: *cm_spine_policy_group_update
  register: nm_spine_policy_group_update

- name: Update a spine fabric interface policy group with normal mode again
  aci_fabric_interface_policy_group:
    <<: *cm_spine_policy_group_update
  register: nm_spine_policy_group_update_again

- name: Assertions check for add fabric interface policy groups
  assert:
    that:
      - cm_leaf_policy_group_present is changed
      - cm_leaf_policy_group_present.current == []
      - cm_leaf_policy_group_present.previous == []
      - cm_leaf_policy_group_present.mo.fabricLePortPGrp.attributes.name == "leaf_policy_group"
      - cm_leaf_policy_group_present.mo.fabricLePortPGrp.attributes.descr == "leaf_policy_group created"
      - nm_leaf_policy_group_present is changed
      - nm_leaf_policy_group_present.current != []
      - nm_leaf_policy_group_present.previous == []
      - nm_leaf_policy_group_present.current.0.fabricLePortPGrp.attributes.name == "leaf_policy_group"
      - nm_leaf_policy_group_present.current.0.fabricLePortPGrp.attributes.descr == "leaf_policy_group created"
      - nm_leaf_policy_group_present.current.0.fabricLePortPGrp.attributes.dn == "uni/fabric/funcprof/leportgrp-leaf_policy_group"
      - nm_leaf_policy_group_present.current.0.fabricLePortPGrp.children | length >= 6
      - nm_leaf_policy_group_present_again is not changed
      - nm_leaf_policy_group_present_again.current != []
      - nm_leaf_policy_group_present_again.previous != []
      - nm_leaf_policy_group_present_again.current.0.fabricLePortPGrp.attributes.name == nm_leaf_policy_group_present_again.previous.0.fabricLePortPGrp.attributes.name == "leaf_policy_group"
      - nm_leaf_policy_group_present_again.current.0.fabricLePortPGrp.attributes.descr == nm_leaf_policy_group_present_again.previous.0.fabricLePortPGrp.attributes.descr == "leaf_policy_group created"
      - nm_leaf_policy_group_present_again.current.0.fabricLePortPGrp.attributes.dn == nm_leaf_policy_group_present_again.previous.0.fabricLePortPGrp.attributes.dn == "uni/fabric/funcprof/leportgrp-leaf_policy_group"
      - cm_spine_policy_group_present is changed
      - cm_spine_policy_group_present.current == []
      - cm_spine_policy_group_present.previous == []
      - cm_spine_policy_group_present.mo.fabricSpPortPGrp.attributes.name == "spine_policy_group"
      - cm_spine_policy_group_present.mo.fabricSpPortPGrp.attributes.descr == "spine_policy_group created"
      - nm_spine_policy_group_present is changed
      - nm_spine_policy_group_present.current != []
      - nm_spine_policy_group_present.current.0.fabricSpPortPGrp.attributes.name == "spine_policy_group"
      - nm_spine_policy_group_present.current.0.fabricSpPortPGrp.attributes.descr == "spine_policy_group created"
      - nm_spine_policy_group_present.current.0.fabricSpPortPGrp.attributes.dn == "uni/fabric/funcprof/spportgrp-spine_policy_group"
      - nm_spine_policy_group_present.current.0.fabricSpPortPGrp.children | length >= 6
      - nm_spine_policy_group_present.current.0.fabricSpPortPGrp.children  | selectattr('fabricRsDwdmFabIfPol.attributes.tnDwdmFabIfPolName', 'defined') | selectattr('fabricRsDwdmFabIfPol.attributes.tnDwdmFabIfPolName', 'equalto', "default")
      - nm_spine_policy_group_present.current.0.fabricSpPortPGrp.children  | selectattr('fabricRsFIfPol.attributes.tnFabricFIfPolName', 'defined') | selectattr('fabricRsFIfPol.attributes.tnFabricFIfPolName', 'equalto', "default")
      - nm_spine_policy_group_present.current.0.fabricSpPortPGrp.children  | selectattr('fabricRsFLinkFlapPol.attributes.tnFabricFLinkFlapPolName', 'defined') | selectattr('fabricRsFLinkFlapPol.attributes.tnFabricFLinkFlapPolName', 'equalto', "default")
      - nm_spine_policy_group_present.current.0.fabricSpPortPGrp.children  | selectattr('fabricRsL3IfPol.attributes.tnL3IfPolName', 'defined') | selectattr('fabricRsL3IfPol.attributes.tnL3IfPolName', 'equalto', "default")
      - nm_spine_policy_group_present.current.0.fabricSpPortPGrp.children  | selectattr('fabricRsMacsecFabIfPol.attributes.tnMacsecFabIfPolName', 'defined') | selectattr('fabricRsMacsecFabIfPol.attributes.tnMacsecFabIfPolName', 'equalto', "default")
      - nm_spine_policy_group_present.current.0.fabricSpPortPGrp.children  | selectattr('fabricRsMonIfFabricPol.attributes.tnMonFabricPolName', 'defined') | selectattr('fabricRsMonIfFabricPol.attributes.tnMonFabricPolName', 'equalto', "default")
      - nm_spine_policy_group_present_again is not changed
      - nm_spine_policy_group_present_again.current != []
      - nm_spine_policy_group_present_again.previous != []
      - nm_spine_policy_group_present_again.current.0.fabricSpPortPGrp.attributes.name == nm_spine_policy_group_present_again.previous.0.fabricSpPortPGrp.attributes.name == "spine_policy_group"
      - nm_spine_policy_group_present_again.current.0.fabricSpPortPGrp.attributes.descr == nm_spine_policy_group_present_again.previous.0.fabricSpPortPGrp.attributes.descr == "spine_policy_group created"
      - nm_spine_policy_group_present_again.current.0.fabricSpPortPGrp.attributes.dn == nm_spine_policy_group_present_again.previous.0.fabricSpPortPGrp.attributes.dn == "uni/fabric/funcprof/spportgrp-spine_policy_group"
      - cm_spine_policy_group_update is changed
      - cm_spine_policy_group_update.previous.0.fabricSpPortPGrp.attributes.descr == "spine_policy_group created"
      - cm_spine_policy_group_update.current.0.fabricSpPortPGrp.attributes.descr == "spine_policy_group created"
      - nm_spine_policy_group_update is changed
      - nm_spine_policy_group_update.previous.0.fabricSpPortPGrp.attributes.descr == "spine_policy_group created"
      - nm_spine_policy_group_update.current.0.fabricSpPortPGrp.attributes.descr == "spine_policy_group updated"
      - nm_spine_policy_group_update.previous.0.fabricSpPortPGrp.children  | selectattr('fabricRsDwdmFabIfPol.attributes.tnDwdmFabIfPolName', 'defined') | selectattr('fabricRsDwdmFabIfPol.attributes.tnDwdmFabIfPolName', 'equalto', "default")
      - nm_spine_policy_group_update.previous.0.fabricSpPortPGrp.children  | selectattr('fabricRsFIfPol.attributes.tnFabricFIfPolName', 'defined') | selectattr('fabricRsFIfPol.attributes.tnFabricFIfPolName', 'equalto', "default")
      - nm_spine_policy_group_update.previous.0.fabricSpPortPGrp.children  | selectattr('fabricRsFLinkFlapPol.attributes.tnFabricFLinkFlapPolName', 'defined') | selectattr('fabricRsFLinkFlapPol.attributes.tnFabricFLinkFlapPolName', 'equalto', "default")
      - nm_spine_policy_group_update.previous.0.fabricSpPortPGrp.children  | selectattr('fabricRsL3IfPol.attributes.tnL3IfPolName', 'defined') | selectattr('fabricRsL3IfPol.attributes.tnL3IfPolName', 'equalto', "default")
      - nm_spine_policy_group_update.previous.0.fabricSpPortPGrp.children  | selectattr('fabricRsMacsecFabIfPol.attributes.tnMacsecFabIfPolName', 'defined') | selectattr('fabricRsMacsecFabIfPol.attributes.tnMacsecFabIfPolName', 'equalto', "default")
      - nm_spine_policy_group_update.previous.0.fabricSpPortPGrp.children  | selectattr('fabricRsMonIfFabricPol.attributes.tnMonFabricPolName', 'defined') | selectattr('fabricRsMonIfFabricPol.attributes.tnMonFabricPolName', 'equalto', "default")
      - nm_spine_policy_group_update.current.0.fabricSpPortPGrp.children  | selectattr('fabricRsDwdmFabIfPol.attributes.tnDwdmFabIfPolName', 'defined') | selectattr('fabricRsDwdmFabIfPol.attributes.tnDwdmFabIfPolName', 'equalto', "")
      - nm_spine_policy_group_update.current.0.fabricSpPortPGrp.children  | selectattr('fabricRsFIfPol.attributes.tnFabricFIfPolName', 'defined') | selectattr('fabricRsFIfPol.attributes.tnFabricFIfPolName', 'equalto', "")
      - nm_spine_policy_group_update.current.0.fabricSpPortPGrp.children  | selectattr('fabricRsFLinkFlapPol.attributes.tnFabricFLinkFlapPolName', 'defined') | selectattr('fabricRsFLinkFlapPol.attributes.tnFabricFLinkFlapPolName', 'equalto', "")
      - nm_spine_policy_group_update.current.0.fabricSpPortPGrp.children  | selectattr('fabricRsL3IfPol.attributes.tnL3IfPolName', 'defined') | selectattr('fabricRsL3IfPol.attributes.tnL3IfPolName', 'equalto', "")
      - nm_spine_policy_group_update.current.0.fabricSpPortPGrp.children  | selectattr('fabricRsMacsecFabIfPol.attributes.tnMacsecFabIfPolName', 'defined') | selectattr('fabricRsMacsecFabIfPol.attributes.tnMacsecFabIfPolName', 'equalto', "")
      - nm_spine_policy_group_update.current.0.fabricSpPortPGrp.children  | selectattr('fabricRsMonIfFabricPol.attributes.tnMonFabricPolName', 'defined') | selectattr('fabricRsMonIfFabricPol.attributes.tnMonFabricPolName', 'equalto', "")
      - nm_spine_policy_group_update_again is not changed
      - nm_spine_policy_group_update_again.previous.0.fabricSpPortPGrp.attributes.descr == "spine_policy_group updated"
      - nm_spine_policy_group_update_again.current.0.fabricSpPortPGrp.attributes.descr == "spine_policy_group updated"

- name: Invalid test - add a fabric interface policy group without type
  aci_fabric_interface_policy_group:
    <<: *aci_info
    name: nt_spine_policy_group
    descr: negative test nt_spine_policy_group
    state: present
  register: nt_without_type
  ignore_errors: true

- name: Invalid test - add a fabric interface policy group without name
  aci_fabric_interface_policy_group:
    <<: *aci_info
    type: spine
    descr: negative test spine_policy_group
    state: present
  register: nt_without_name
  ignore_errors: true

- name: Assertions check for invalid test - add fabric interface policy groups
  assert:
    that:
      - nt_without_type is not changed
      - nt_without_type.msg == "missing required arguments{{':'}} type"
      - nt_without_name is not changed
      - nt_without_name.msg == "state is present but all of the following are missing{{':'}} name"

- name: Query a leaf fabric interface policy group with name
  aci_fabric_interface_policy_group:
    <<: *aci_info
    name: leaf_policy_group
    type: leaf
    state: query
  register: query_leaf_policy_group

- name: Query all leaf fabric interface policy groups
  aci_fabric_interface_policy_group:
    <<: *aci_info
    type: leaf
    state: query
  register: query_all_leaf_policy_group

- name: Query a spine fabric interface policy group with name
  aci_fabric_interface_policy_group:
    <<: *aci_info
    name: spine_policy_group
    type: spine
    state: query
  register: query_a_spine_policy_group

- name: Query all spine fabric interface policy groups
  aci_fabric_interface_policy_group:
    <<: *aci_info
    type: spine
    state: query
  register: query_all_spine_policy_group

- name: Assertions check for query a fabric interface policy groups
  assert:
    that:
      - query_leaf_policy_group is not changed
      - query_leaf_policy_group.current != []
      - query_leaf_policy_group.current.0.fabricLePortPGrp.attributes.name == "leaf_policy_group"
      - query_leaf_policy_group.current.0.fabricLePortPGrp.attributes.dn == "uni/fabric/funcprof/leportgrp-leaf_policy_group"
      - query_leaf_policy_group.current.0.fabricLePortPGrp.attributes.descr == "leaf_policy_group created"
      - query_all_leaf_policy_group is not changed
      - query_all_leaf_policy_group.current != []
      - query_all_leaf_policy_group.current | length >= 1
      - query_a_spine_policy_group is not changed
      - query_a_spine_policy_group.current != []
      - query_a_spine_policy_group.current.0.fabricSpPortPGrp.attributes.name == "spine_policy_group"
      - query_a_spine_policy_group.current.0.fabricSpPortPGrp.attributes.dn == "uni/fabric/funcprof/spportgrp-spine_policy_group"
      - query_a_spine_policy_group.current.0.fabricSpPortPGrp.attributes.descr == "spine_policy_group updated"
      - query_all_spine_policy_group is not changed
      - query_all_spine_policy_group.current != []
      - query_all_spine_policy_group.current | length >= 1

- name: Remove a leaf fabric interface policy group with check mode
  aci_fabric_interface_policy_group: &cm_leaf_policy_group_absent
    <<: *cm_leaf_policy_group_present
    state: absent
  check_mode: true
  register: cm_leaf_policy_group_absent

- name: Remove a leaf fabric interface policy group with normal mode
  aci_fabric_interface_policy_group:
    <<: *cm_leaf_policy_group_absent
  register: nm_leaf_policy_group_absent

- name: Remove a leaf fabric interface policy group with normal mode again
  aci_fabric_interface_policy_group:
    <<: *cm_leaf_policy_group_absent
  register: nm_leaf_policy_group_absent_again

- name: Remove a spine fabric interface policy group with check mode
  aci_fabric_interface_policy_group: &cm_spine_policy_group_absent
    <<: *cm_spine_policy_group_present
    state: absent
  check_mode: true
  register: cm_spine_policy_group_absent

- name: Remove a spine fabric interface policy group with normal mode
  aci_fabric_interface_policy_group:
    <<: *cm_spine_policy_group_absent
  register: nm_spine_policy_group_absent

- name: Remove a spine fabric interface policy group with normal mode again
  aci_fabric_interface_policy_group:
    <<: *cm_spine_policy_group_absent
  register: nm_spine_policy_group_absent_again

- name: Assertions check for remove a fabric interface policy groups
  assert:
    that:
      - cm_leaf_policy_group_absent is changed
      - cm_leaf_policy_group_absent.current != []
      - cm_leaf_policy_group_absent.previous != []
      - nm_leaf_policy_group_absent is changed
      - nm_leaf_policy_group_absent.current == []
      - nm_leaf_policy_group_absent.previous != []
      - nm_leaf_policy_group_absent_again is not changed
      - nm_leaf_policy_group_absent_again.current == []
      - nm_leaf_policy_group_absent_again.previous == []
      - cm_spine_policy_group_absent is changed
      - cm_spine_policy_group_absent.current != []
      - cm_spine_policy_group_absent.previous != []
      - nm_spine_policy_group_absent is changed
      - nm_spine_policy_group_absent.current == []
      - nm_spine_policy_group_absent.previous != []
      - nm_spine_policy_group_absent_again is not changed
      - nm_spine_policy_group_absent_again.current == []
      - nm_spine_policy_group_absent_again.previous == []
