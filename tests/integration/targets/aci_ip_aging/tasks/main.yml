# Test code for the ACI modules
# Copyright: (c) 2023, Tim Cragg (@timcragg)

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI APIC host, ACI username and ACI password
  fail:
    msg: 'Please define the following variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

- name: Set vars
  set_fact:
   aci_info: &aci_info
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: '{{ aci_output_level | default("info") }}'

- name: Verify Cloud and Non-Cloud Sites in use.
  include_tasks: ../../../../../../integration/targets/aci_cloud_provider/tasks/main.yml

- name: Execute tasks only for non-cloud sites
  when: query_cloud.current == []  # This condition will skip execution for cloud sites
  block:

  # STORE EXISTING IP AGING SETTINGS
  - name: Capture existing IP Aging setting
    cisco.aci.aci_ip_aging:
      <<: *aci_info
      state: query
    register: previous_settings
  
  - name: Disable IP Aging
    cisco.aci.aci_ip_aging:
      <<: *aci_info
      enabled: no
  
  # ENABLE IP AGING
  - name: Update IP Aging (check_mode)
    cisco.aci.aci_ip_aging:
      <<: *aci_info
      enabled: yes
    check_mode: yes
    register: cm_update_ip_aging
  
  - name: Update IP Aging
    cisco.aci.aci_ip_aging:
      <<: *aci_info
      enabled: yes
    register: nm_update_ip_aging
  
  - name: Update IP Aging Again
    cisco.aci.aci_ip_aging:
      <<: *aci_info
      enabled: yes
    register: nm_update_ip_aging_again
  
  - name: Verify Update of IP Aging
    ansible.builtin.assert:
      that:
      - cm_update_ip_aging is changed
      - nm_update_ip_aging is changed
      - nm_update_ip_aging_again is not changed
      - nm_update_ip_aging.current.0.epIpAgingP.attributes.adminSt == "enabled"
      - nm_update_ip_aging_again.current.0.epIpAgingP.attributes.adminSt == "enabled"
  
  # QUERY IP AGING SETTINGS
  - name: Query IP aging Settings
    cisco.aci.aci_ip_aging:
      <<: *aci_info
      state: query
    register: query_ip_aging
  
  - name: Verify IP aging queries
    ansible.builtin.assert:
      that:
      - query_ip_aging is not changed
      - query_ip_aging.current.0.epIpAgingP.attributes.adminSt == "enabled"
  
  # RESTORE PREVIOUS IP AGING SETTINGS
  - name: Restore previous IP aging Settings
    cisco.aci.aci_ip_aging:
      <<: *aci_info
      enabled: "{{ (previous_settings.current.0.epIpAgingP.attributes.adminSt == 'enabled') | ternary('yes', 'no') }}"
