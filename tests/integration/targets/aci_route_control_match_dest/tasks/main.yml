# Author: Tim Cragg (@timcragg)
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

# SET VARS
- name: Set vars
  set_fact:
    aci_info: &aci_info
      host: '{{ aci_hostname }}'
      username: '{{ aci_username }}'
      password: '{{ aci_password }}'
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: '{{ aci_output_level | default("info") }}'

# CLEAN ENVIRONMENT
- name: Remove test tenant before we kickoff
  cisco.aci.aci_tenant: &tenant_absent
    <<: *aci_info
    tenant: ansible_tenant
    state: absent

# SETUP ENVIRONMENT
- name: Create tenant
  cisco.aci.aci_tenant: &tenant_present
    <<: *tenant_absent
    state: present

- name: Add route control subject
  cisco.aci.aci_route_control_subject:
    <<: *aci_info
    tenant: ansible_tenant
    subject_name: ansible_rtctrl_subject
    state: present

# BEGIN WITH TESTS
- name: Add route control match destination (check_mode)
  cisco.aci.aci_route_control_match_dest: &match_dest_present
    <<: *aci_info
    tenant: ansible_tenant
    subject_name: ansible_rtctrl_subject
    ip: 10.20.30.0/24
    aggregate: no
    gt: 26
    lt: 28
    state: present
  check_mode: yes
  register: cm_add_match_dest

- name: Add match destination (normal mode)
  cisco.aci.aci_route_control_match_dest:
    <<: *match_dest_present
  register: nm_add_match_dest

- name: Verify add match destination
  ansible.builtin.assert:
    that:
    - cm_add_match_dest is changed
    - nm_add_match_dest is changed
    - cm_add_match_dest.previous == nm_add_match_dest.previous == []
    - cm_add_match_dest.sent.rtctrlMatchRtDest.attributes.ip == nm_add_match_dest.sent.rtctrlMatchRtDest.attributes.ip == '10.20.30.0/24'
    - cm_add_match_dest.sent.rtctrlMatchRtDest.attributes.fromPfxLen == nm_add_match_dest.sent.rtctrlMatchRtDest.attributes.fromPfxLen == '26'
    - cm_add_match_dest.sent.rtctrlMatchRtDest.attributes.toPfxLen == nm_add_match_dest.sent.rtctrlMatchRtDest.attributes.toPfxLen == '28'
    - cm_add_match_dest.sent.rtctrlMatchRtDest.attributes.aggregate == nm_add_match_dest.sent.rtctrlMatchRtDest.attributes.aggregate == 'no'

- name: Add match destination again, check if idempotency works
  cisco.aci.aci_route_control_match_dest:
    <<: *match_dest_present
  register: add_match_dest_again

- name: Verify add_match_dest_again
  ansible.builtin.assert:
    that:
    - add_match_dest_again is not changed

- name: Add second route control match destination
  cisco.aci.aci_route_control_match_dest:
    <<: *aci_info
    tenant: ansible_tenant
    subject_name: ansible_rtctrl_subject2
    ip: 10.20.31.0/24
    aggregate: no
    gt: 26
    lt: 28
    state: present

# UPDATE MATCH DESTINATION
- name: Update Match Destination
  cisco.aci.aci_route_control_match_dest:
    <<: *match_dest_present
    aggregate: yes
    gt: 0
    lt: 0
  register: update_match_dest

- name: Verify update_match_dest
  ansible.builtin.assert:
    that:
    - update_match_dest is changed
    - update_match_dest.current.0.rtctrlMatchRtDest.attributes.ip == '10.20.30.0/24'
    - update_match_dest.current.0.rtctrlMatchRtDest.attributes.fromPfxLen == '0'
    - update_match_dest.current.0.rtctrlMatchRtDest.attributes.toPfxLen == '0'
    - update_match_dest.current.0.rtctrlMatchRtDest.attributes.aggregate == 'yes'

# QUERY ALL MATCH DESTINATIONS
- name: Query all match destinations
  cisco.aci.aci_route_control_match_dest:
    <<: *aci_info
    state: query
  register: query_all_match_destinations

- name: Verify query_all_match_destinations
  ansible.builtin.assert:
    that:
    - query_all_match_destinations is not changed
    - query_all_match_destinations.current | length > 1

# QUERY A SPECIFIC MATCH DESTINATION
- name: Query a specific match destination
  cisco.aci.aci_route_control_match_dest:
    <<: *match_dest_present
    state: query
  register: query_spec_match_dest

- name: Verify query_spec_subject
  ansible.builtin.assert:
    that:
    - query_spec_match_dest is not changed
    - query_spec_match_dest.current | length == 1
    - query_spec_match_dest.current.0.rtctrlMatchRtDest.attributes.ip == '10.20.30.0/24'
    - query_spec_match_dest.current.0.rtctrlMatchRtDest.attributes.fromPfxLen == '0'
    - query_spec_match_dest.current.0.rtctrlMatchRtDest.attributes.toPfxLen == '0'
    - query_spec_match_dest.current.0.rtctrlMatchRtDest.attributes.aggregate == 'yes'


# REMOVE MATCH DESTINATION
- name: Remove match destination
  cisco.aci.aci_route_control_match_dest:
    <<: *match_dest_present
    state: absent
  register: remove_match_dest

- name: Verify remove_subject
  ansible.builtin.assert:
    that:
    - remove_match_dest is changed
    - remove_match_dest.current == []

# REMOVE MATCH DESTINATION AGAIN TO TEST IDEMPOTENCE
- name: Remove match destination again
  cisco.aci.aci_route_control_match_dest:
    <<: *match_dest_present
    state: absent
  register: remove_match_dest_again

- name: Verify remove_match_dest_again
  ansible.builtin.assert:
    that:
    - remove_match_dest_again is not changed
    - remove_match_dest_again.current == []

# CLEAN UP
- name: Remove test tenant
  cisco.aci.aci_tenant:
    <<: *tenant_absent
