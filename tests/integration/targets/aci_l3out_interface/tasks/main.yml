# Test code for the ACI modules
# Copyright: (c) 2021, Tim Cragg (@timcragg)
# Copyright: (c) 2023, Akini Ross (@akinross) <akinross@cisco.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI APIC host, ACI username and ACI password
  ansible.builtin.fail:
    msg: 'Please define the following variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

# GET Credentials from the inventory
- name: Set vars
  ansible.builtin.set_fact:
    aci_info: &aci_info
      host: "{{ aci_hostname }}"
      username: "{{ aci_username }}"
      password: "{{ aci_password }}"
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: debug

# CLEAN ENVIRONMENT
- name: Remove ansible_tenant if it already exists
  cisco.aci.aci_tenant:
    <<: *aci_info
    tenant: ansible_tenant
    state: absent

- name: Verify Cloud and Non-Cloud Sites in use.
  ansible.builtin.include_tasks: ../../../../../../integration/targets/aci_cloud_provider/tasks/main.yml

- name: Execute tasks only for non-cloud sites
  when: query_cloud.current == []  # This condition will execute only non-cloud sites
  block:  # block specifies execution of tasks within, based on conditions
  - name: Remove ansible_l3ext_domain if it already exists
    cisco.aci.aci_domain:
      <<: *aci_info
      domain: ansible_l3ext_domain
      domain_type: l3dom
      state: absent

  - name: Remove ansible_port_channel_ipg if it already exists
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_info
      lag_type: link
      policy_group: ansible_port_channel_ipg
      state: absent

  - name: Remove ansible_vpc_ipg if it already exists
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_info
      lag_type: node
      policy_group: ansible_vpc_ipg
      state: absent

  - name: Add a new tenant required for l3out
    cisco.aci.aci_tenant:
      <<: *aci_info
      tenant: ansible_tenant
      description: Ansible tenant
      state: present

  # ADD domain
  - name: Add domain for l3out
    cisco.aci.aci_domain:
      <<: *aci_info
      domain: ansible_l3ext_domain
      domain_type: l3dom
      state: present

  # ADD VRF
  - name: Add VRF for l3out
    cisco.aci.aci_vrf:
      <<: *aci_info
      tenant: ansible_tenant
      vrf: ansible_vrf
      state: present

  # ADD PC IPG
  - name: Add port-channel IPG
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_info
      lag_type: link
      policy_group: ansible_port_channel_ipg
      state: present

  # ADD vPC IPG
  - name: Add vPC IPG
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_info
      lag_type: node
      policy_group: ansible_vpc_ipg
      state: present

  # ADD l3out
  - name: Add l3out
    cisco.aci.aci_l3out:
      <<: *aci_info
      tenant: ansible_tenant
      name: ansible_l3out
      vrf: ansible_vrf
      domain: ansible_domain
      route_control: export
      state: present

  # ADD l3out logical node profile
  - name: l3out logical node profile
    cisco.aci.aci_l3out_logical_node_profile:
      <<: *aci_info
      tenant: ansible_tenant
      l3out: ansible_l3out
      node_profile: ansible_node_profile
      state: present

  # ADD l3out logical interface profile
  - name: l3out logical interface profile
    cisco.aci.aci_l3out_logical_interface_profile:
      <<: *aci_info
      tenant: ansible_tenant
      l3out: ansible_l3out
      node_profile: ansible_node_profile
      interface_profile: ansible_interface_profile
      state: present

  # ADD l3out interface
  - name: Add routed interface
    cisco.aci.aci_l3out_interface:
      <<: *aci_info
      tenant: ansible_tenant
      l3out: ansible_l3out
      node_profile: ansible_node_profile
      interface_profile: ansible_interface_profile
      pod_id: 1
      node_id: 201
      path_ep: eth1/15
      interface_type: l3-port
      mode: regular
      addr: 192.168.50.1/27
      ipv6_dad: disabled
      mtu: 1500
      auto_state: disabled
      state: present
    register: add_l3out_interface

  - name: Verify l3out has been created with the correct attributes
    ansible.builtin.assert:
      that:
      - add_l3out_interface.current.0.l3extRsPathL3OutAtt.attributes.dn == "uni/tn-ansible_tenant/out-ansible_l3out/lnodep-ansible_node_profile/lifp-ansible_interface_profile/rspathL3OutAtt-[topology/pod-1/paths-201/pathep-[eth1/15]]"
      - add_l3out_interface.current.0.l3extRsPathL3OutAtt.attributes.addr == "192.168.50.1/27"
      - add_l3out_interface.current.0.l3extRsPathL3OutAtt.attributes.ipv6Dad == "disabled"
      - add_l3out_interface.current.0.l3extRsPathL3OutAtt.attributes.mtu == "1500"
      - add_l3out_interface.current.0.l3extRsPathL3OutAtt.attributes.autostate == "disabled"
      - add_l3out_interface.current.0.l3extRsPathL3OutAtt.attributes.ifInstT == "l3-port"
      - add_l3out_interface.current.0.l3extRsPathL3OutAtt.attributes.mode == "regular"
      - add_l3out_interface.current.0.l3extRsPathL3OutAtt.attributes.annotation == 'orchestrator:ansible'

  # ADD l3out interface again to check idempotency
  - name: Add routed interface again
    cisco.aci.aci_l3out_interface:
      <<: *aci_info
      tenant: ansible_tenant
      l3out: ansible_l3out
      node_profile: ansible_node_profile
      interface_profile: ansible_interface_profile
      pod_id: 1
      node_id: 201
      path_ep: eth1/15
      interface_type: l3-port
      mode: regular
      addr: 192.168.50.1/27
      ipv6_dad: disabled
      mtu: 1500
      auto_state: disabled
      state: present
    register: add_l3out_interface_again

  - name: Verify l3out has not changed
    ansible.builtin.assert:
      that:
      - add_l3out_interface_again is not changed

  # MODIFY l3out attributes
  - name: Update routed interface
    cisco.aci.aci_l3out_interface:
      <<: *aci_info
      tenant: ansible_tenant
      l3out: ansible_l3out
      node_profile: ansible_node_profile
      interface_profile: ansible_interface_profile
      pod_id: 1
      node_id: 201
      path_ep: eth1/15
      interface_type: sub-interface
      mode: regular
      addr: 192.168.60.1/27
      encap: vlan-913
      state: present
    register: update_l3out_interface

  - name: Verify routed interface has correct attributes
    ansible.builtin.assert:
      that:
      - update_l3out_interface.current.0.l3extRsPathL3OutAtt.attributes.dn == "uni/tn-ansible_tenant/out-ansible_l3out/lnodep-ansible_node_profile/lifp-ansible_interface_profile/rspathL3OutAtt-[topology/pod-1/paths-201/pathep-[eth1/15]]"
      - update_l3out_interface.current.0.l3extRsPathL3OutAtt.attributes.addr == "192.168.60.1/27"
      - update_l3out_interface.current.0.l3extRsPathL3OutAtt.attributes.ifInstT == "sub-interface"
      - update_l3out_interface.current.0.l3extRsPathL3OutAtt.attributes.encap == "vlan-913"
      - update_l3out_interface.current.0.l3extRsPathL3OutAtt.attributes.mode == "regular"

  # QUERY l3out interface
  - name: Query routed interface
    cisco.aci.aci_l3out_interface:
      <<: *aci_info
      tenant: ansible_tenant
      l3out: ansible_l3out
      node_profile: ansible_node_profile
      interface_profile: ansible_interface_profile
      pod_id: 1
      node_id: 201
      path_ep: eth1/15
      state: query
    register: query_l3out_interface

  - name: Verify query_l3out_interface
    ansible.builtin.assert:
      that:
      - query_l3out_interface is not changed
      - query_l3out_interface.current.0.l3extRsPathL3OutAtt.attributes.dn == "uni/tn-ansible_tenant/out-ansible_l3out/lnodep-ansible_node_profile/lifp-ansible_interface_profile/rspathL3OutAtt-[topology/pod-1/paths-201/pathep-[eth1/15]]"
      - query_l3out_interface.current.0.l3extRsPathL3OutAtt.attributes.addr == "192.168.60.1/27"
      - query_l3out_interface.current.0.l3extRsPathL3OutAtt.attributes.ifInstT == "sub-interface"
      - query_l3out_interface.current.0.l3extRsPathL3OutAtt.attributes.encap == "vlan-913"
      - query_l3out_interface.current.0.l3extRsPathL3OutAtt.attributes.mode == "regular"

  - name: Query all interfaces
    cisco.aci.aci_l3out_interface:
      <<: *aci_info
      tenant: ansible_tenant
      l3out: ansible_l3out
      node_profile: ansible_node_profile
      interface_profile: ansible_interface_profile
      state: query
    register: query_l3out_interfaces

  - name: Verify query_l3out_interfaces
    ansible.builtin.assert:
      that:
      - query_l3out_interfaces is not changed
      - query_l3out_interfaces.current.0.l3extLIfP.children.0.l3extRsPathL3OutAtt.attributes.rn == "rspathL3OutAtt-[topology/pod-1/paths-201/pathep-[eth1/15]]"
      - query_l3out_interfaces.current.0.l3extLIfP.children.0.l3extRsPathL3OutAtt.attributes.addr == "192.168.60.1/27"
      - query_l3out_interfaces.current.0.l3extLIfP.children.0.l3extRsPathL3OutAtt.attributes.ifInstT == "sub-interface"
      - query_l3out_interfaces.current.0.l3extLIfP.children.0.l3extRsPathL3OutAtt.attributes.encap == "vlan-913"
      - query_l3out_interfaces.current.0.l3extLIfP.children.0.l3extRsPathL3OutAtt.attributes.mode == "regular"

  # DELETE l3out interface
  - name: Remove routed sub-interface
    cisco.aci.aci_l3out_interface:
      <<: *aci_info
      tenant: ansible_tenant
      l3out: ansible_l3out
      node_profile: ansible_node_profile
      interface_profile: ansible_interface_profile
      pod_id: 1
      node_id: 201
      path_ep: eth1/15
      state: absent
    register: delete_l3out_interface

  - name: Verify interface has been deleted
    ansible.builtin.assert:
      that:
        - delete_l3out_interface.current == []
        - delete_l3out_interface.previous.0.l3extRsPathL3OutAtt.attributes.dn == "uni/tn-ansible_tenant/out-ansible_l3out/lnodep-ansible_node_profile/lifp-ansible_interface_profile/rspathL3OutAtt-[topology/pod-1/paths-201/pathep-[eth1/15]]"

  # ADD l3out port-channel
  - name: Add routed interface port-channel
    cisco.aci.aci_l3out_interface:
      <<: *aci_info
      tenant: ansible_tenant
      l3out: ansible_l3out
      node_profile: ansible_node_profile
      interface_profile: ansible_interface_profile
      pod_id: 1
      node_id: 201
      path_ep: ansible_port_channel_ipg
      interface_type: l3-port
      mode: regular
      addr: 192.168.70.1/27
      state: present
    register: add_l3out_pc_interface

  - name: Verify l3out port-channel has been created with the correct attributes
    ansible.builtin.assert:
      that:
      - add_l3out_pc_interface.current.0.l3extRsPathL3OutAtt.attributes.dn == "uni/tn-ansible_tenant/out-ansible_l3out/lnodep-ansible_node_profile/lifp-ansible_interface_profile/rspathL3OutAtt-[topology/pod-1/paths-201/pathep-[ansible_port_channel_ipg]]"
      - add_l3out_pc_interface.current.0.l3extRsPathL3OutAtt.attributes.addr == "192.168.70.1/27"
      - add_l3out_pc_interface.current.0.l3extRsPathL3OutAtt.attributes.ifInstT == "l3-port"
      - add_l3out_pc_interface.current.0.l3extRsPathL3OutAtt.attributes.mode == "regular"

  # ADD l3out port-channel again to check idempotency
  - name: Add routed interface port-channel again
    cisco.aci.aci_l3out_interface:
      <<: *aci_info
      tenant: ansible_tenant
      l3out: ansible_l3out
      node_profile: ansible_node_profile
      interface_profile: ansible_interface_profile
      pod_id: 1
      node_id: 201
      path_ep: ansible_port_channel_ipg
      interface_type: l3-port
      mode: regular
      addr: 192.168.70.1/27
      state: present
    register: add_l3out_pc_interface_again

  - name: Verify interface has not changed
    ansible.builtin.assert:
      that:
      - add_l3out_pc_interface_again is not changed

  # MODIFY l3out port-channel attributes
  - name: Update routed port-channel interface
    cisco.aci.aci_l3out_interface:
      <<: *aci_info
      tenant: ansible_tenant
      l3out: ansible_l3out
      node_profile: ansible_node_profile
      interface_profile: ansible_interface_profile
      pod_id: 1
      node_id: 201
      path_ep: ansible_port_channel_ipg
      interface_type: l3-port
      mode: regular
      addr: 192.168.80.1/27
      state: present
    register: update_l3out_pc_interface

  - name: Verify l3out port-channel has been updated with the correct attributes
    ansible.builtin.assert:
      that:
      - update_l3out_pc_interface is changed
      - update_l3out_pc_interface.current.0.l3extRsPathL3OutAtt.attributes.dn == "uni/tn-ansible_tenant/out-ansible_l3out/lnodep-ansible_node_profile/lifp-ansible_interface_profile/rspathL3OutAtt-[topology/pod-1/paths-201/pathep-[ansible_port_channel_ipg]]"
      - update_l3out_pc_interface.current.0.l3extRsPathL3OutAtt.attributes.addr == "192.168.80.1/27"
      - update_l3out_pc_interface.current.0.l3extRsPathL3OutAtt.attributes.ifInstT == "l3-port"
      - update_l3out_pc_interface.current.0.l3extRsPathL3OutAtt.attributes.mode == "regular"

  # QUERY l3out port-channel interface
  - name: Query l3out port-channel
    cisco.aci.aci_l3out_interface:
      <<: *aci_info
      tenant: ansible_tenant
      l3out: ansible_l3out
      node_profile: ansible_node_profile
      interface_profile: ansible_interface_profile
      pod_id: 1
      node_id: 201
      path_ep: ansible_port_channel_ipg
      state: query
    register: query_l3out_pc_interface

  - name: Verify query_l3out_pc_interface
    ansible.builtin.assert:
      that:
      - query_l3out_pc_interface is not changed
      - query_l3out_pc_interface.current.0.l3extRsPathL3OutAtt.attributes.dn == "uni/tn-ansible_tenant/out-ansible_l3out/lnodep-ansible_node_profile/lifp-ansible_interface_profile/rspathL3OutAtt-[topology/pod-1/paths-201/pathep-[ansible_port_channel_ipg]]"
      - query_l3out_pc_interface.current.0.l3extRsPathL3OutAtt.attributes.addr == "192.168.80.1/27"
      - query_l3out_pc_interface.current.0.l3extRsPathL3OutAtt.attributes.ifInstT == "l3-port"
      - query_l3out_pc_interface.current.0.l3extRsPathL3OutAtt.attributes.mode == "regular"

  # DELETE l3out port-channel interface
  - name: Remove port-channel
    cisco.aci.aci_l3out_interface:
      <<: *aci_info
      tenant: ansible_tenant
      l3out: ansible_l3out
      node_profile: ansible_node_profile
      interface_profile: ansible_interface_profile
      pod_id: 1
      node_id: 201
      path_ep: ansible_port_channel_ipg
      state: absent
    register: delete_l3out_pc_interface

  - name: Verify interface has been deleted
    ansible.builtin.assert:
      that:
        - delete_l3out_pc_interface.current == []
        - delete_l3out_pc_interface.previous.0.l3extRsPathL3OutAtt.attributes.dn == "uni/tn-ansible_tenant/out-ansible_l3out/lnodep-ansible_node_profile/lifp-ansible_interface_profile/rspathL3OutAtt-[topology/pod-1/paths-201/pathep-[ansible_port_channel_ipg]]"

  # ADD l3out vPC
  - name: Add interface vPC
    cisco.aci.aci_l3out_interface: &ext_svi_interface
      <<: *aci_info
      tenant: ansible_tenant
      l3out: ansible_l3out
      node_profile: ansible_node_profile
      interface_profile: ansible_interface_profile
      pod_id: 1
      node_id: 201-202
      path_ep: ansible_vpc_ipg
      interface_type: ext-svi
      mode: native
      addr: 192.168.90.1/27
      encap: vlan-913
      mac: "00:22:BD:F8:19:FE"
      description: "anisble test description"
      state: present
    register: add_l3out_vpc_interface

  - name: Verify l3out vPC has been created with the correct attributes
    ansible.builtin.assert:
      that:
      - add_l3out_vpc_interface.current.0.l3extRsPathL3OutAtt.attributes.dn == "uni/tn-ansible_tenant/out-ansible_l3out/lnodep-ansible_node_profile/lifp-ansible_interface_profile/rspathL3OutAtt-[topology/pod-1/protpaths-201-202/pathep-[ansible_vpc_ipg]]"
      - add_l3out_vpc_interface.current.0.l3extRsPathL3OutAtt.attributes.addr == "192.168.90.1/27"
      - add_l3out_vpc_interface.current.0.l3extRsPathL3OutAtt.attributes.ifInstT == "ext-svi"
      - add_l3out_vpc_interface.current.0.l3extRsPathL3OutAtt.attributes.encap == "vlan-913"
      - add_l3out_vpc_interface.current.0.l3extRsPathL3OutAtt.attributes.encapScope == "local"
      - add_l3out_vpc_interface.current.0.l3extRsPathL3OutAtt.attributes.mode == "native"
      - add_l3out_vpc_interface.current.0.l3extRsPathL3OutAtt.attributes.mac == "00:22:BD:F8:19:FE"
      - add_l3out_vpc_interface.current.0.l3extRsPathL3OutAtt.attributes.descr == "anisble test description"

  - name: Add interface vPC again
    cisco.aci.aci_l3out_interface:
      <<: *ext_svi_interface
    register: add_l3out_vpc_interface_again

  - name: Change encap_scope on interface vPC
    cisco.aci.aci_l3out_interface:
      <<: *ext_svi_interface
      encap_scope: vrf
      state: present
    register: change_l3out_vpc_interface_encap_scope

  - name: Verify vPC interface is not changed
    ansible.builtin.assert:
      that:
      - add_l3out_vpc_interface_again is not changed
      - change_l3out_vpc_interface_encap_scope.previous.0.l3extRsPathL3OutAtt.attributes.encapScope == "local"
      - change_l3out_vpc_interface_encap_scope.current.0.l3extRsPathL3OutAtt.attributes.encapScope == "ctx"

  # MODIFY vPC interface
  - name: Update interface vPC
    cisco.aci.aci_l3out_interface:
      <<: *aci_info
      tenant: ansible_tenant
      l3out: ansible_l3out
      node_profile: ansible_node_profile
      interface_profile: ansible_interface_profile
      pod_id: 1
      node_id: 201-202
      path_ep: ansible_vpc_ipg
      interface_type: ext-svi
      mode: regular
      addr: 192.168.90.1/27
      encap: vlan-913
      state: present
    register: modify_l3out_vpc_interface

  - name: Verify l3out vPC has been updated with the correct attributes
    ansible.builtin.assert:
      that:
      - modify_l3out_vpc_interface is changed
      - modify_l3out_vpc_interface.current.0.l3extRsPathL3OutAtt.attributes.dn == "uni/tn-ansible_tenant/out-ansible_l3out/lnodep-ansible_node_profile/lifp-ansible_interface_profile/rspathL3OutAtt-[topology/pod-1/protpaths-201-202/pathep-[ansible_vpc_ipg]]"
      - modify_l3out_vpc_interface.current.0.l3extRsPathL3OutAtt.attributes.addr == "192.168.90.1/27"
      - modify_l3out_vpc_interface.current.0.l3extRsPathL3OutAtt.attributes.ifInstT == "ext-svi"
      - modify_l3out_vpc_interface.current.0.l3extRsPathL3OutAtt.attributes.encap == "vlan-913"
      - modify_l3out_vpc_interface.current.0.l3extRsPathL3OutAtt.attributes.mode == "regular"

  # QUERY vPC interface
  - name: Query vPC interface
    cisco.aci.aci_l3out_interface:
      <<: *aci_info
      tenant: ansible_tenant
      l3out: ansible_l3out
      node_profile: ansible_node_profile
      interface_profile: ansible_interface_profile
      pod_id: 1
      node_id: 201-202
      path_ep: ansible_vpc_ipg
      state: query
    register: query_l3out_vpc_interface

  - name: Verify l3out vPC query
    ansible.builtin.assert:
      that:
      - query_l3out_vpc_interface is not changed
      - query_l3out_vpc_interface.current.0.l3extRsPathL3OutAtt.attributes.dn == "uni/tn-ansible_tenant/out-ansible_l3out/lnodep-ansible_node_profile/lifp-ansible_interface_profile/rspathL3OutAtt-[topology/pod-1/protpaths-201-202/pathep-[ansible_vpc_ipg]]"
      - query_l3out_vpc_interface.current.0.l3extRsPathL3OutAtt.attributes.addr == "192.168.90.1/27"
      - query_l3out_vpc_interface.current.0.l3extRsPathL3OutAtt.attributes.ifInstT == "ext-svi"
      - query_l3out_vpc_interface.current.0.l3extRsPathL3OutAtt.attributes.encap == "vlan-913"
      - query_l3out_vpc_interface.current.0.l3extRsPathL3OutAtt.attributes.mode == "regular"

  - name: Delete vPC interface
    cisco.aci.aci_l3out_interface:
      <<: *aci_info
      tenant: ansible_tenant
      l3out: ansible_l3out
      node_profile: ansible_node_profile
      interface_profile: ansible_interface_profile
      pod_id: 1
      node_id: 201-202
      path_ep: ansible_vpc_ipg
      state: absent
    register: delete_l3out_vpc_interface

  - name: Verify vPC interface is deleted
    ansible.builtin.assert:
      that:
      - delete_l3out_vpc_interface.current == []

  - name: Execute tasks only for APIC version 5.x and above
    when:
    - version.current.0.topSystem.attributes.version is version('5', '>=')  # This condition will execute only for APIC version 5.x and above
    block:

    - name: Ensure infra SR-MPLS l3out does not exist
      cisco.aci.aci_l3out: &aci_infra_sr_mpls_l3out_absent
        <<: *aci_info
        tenant: infra
        name: ansible_infra_sr_mpls_l3out
        domain: ansible_dom
        vrf: overlay-1
        mpls: "yes"
        l3protocol: bgp
        state: absent

    - name: Add a infra SR-MPLS l3out
      cisco.aci.aci_l3out:
        <<: *aci_infra_sr_mpls_l3out_absent
        state: present

    - name: Add a node profile in the infra SR-MPLS l3out
      cisco.aci.aci_l3out_logical_node_profile: &aci_infra_node_profile
        <<: *aci_info
        tenant: infra
        l3out: ansible_infra_sr_mpls_l3out
        node_profile: ansible_infra_sr_mpls_l3out_node_profile

    - name: Add interface profile in the infra SR-MPLS l3out node profile
      cisco.aci.aci_l3out_logical_interface_profile: &aci_infra_interface_profile
        <<: *aci_infra_node_profile
        interface_profile: ansible_infra_sr_mpls_l3out_interface_profile
    
    - name: Add direct port channel interface in the infra SR-MPLS l3out interface profile (check_mode)
      aci_l3out_interface: &aci_infra_pc_interface
        <<: *aci_infra_interface_profile
        pod_id: 1
        node_id: 101
        path_ep: pc_ansible_test
        interface_type: l3-port
        addr: 192.168.90.1/24
        state: present
      register: cm_add_infra_sr_mpls_l3out_port_channel_interface
      check_mode: true

    - name: Add direct port channel interface in the infra SR-MPLS l3out interface profile
      aci_l3out_interface:
        <<: *aci_infra_pc_interface
      register: nm_add_infra_sr_mpls_l3out_port_channel_interface

    - name: Add direct port channel interface in the infra SR-MPLS l3out interface profile again
      aci_l3out_interface:
        <<: *aci_infra_pc_interface
      register: nm_add_infra_sr_mpls_l3out_port_channel_interface_again

    - name: Add interface in the infra SR-MPLS l3out interface profile
      aci_l3out_interface: &aci_infra_interface
        <<: *aci_infra_interface_profile
        pod_id: 1
        node_id: 101
        path_ep: eth1/17
        interface_type: l3-port
        addr: 192.168.91.1/24
        state: present
      register: nm_add_infra_sr_mpls_l3out_interface

    - name: Add sub interface in the infra SR-MPLS l3out interface profile
      aci_l3out_interface: &aci_infra_sub_interface
        <<: *aci_infra_interface_profile
        pod_id: 1
        node_id: 101
        path_ep: eth1/18
        interface_type: sub-interface
        addr: 192.168.92.1/24
        state: present
      register: nm_add_infra_sr_mpls_l3out_sub_interface

    - name: Verify interfaces in the infra SR-MPLS l3out interface profile
      assert:
        that:
        - cm_add_infra_sr_mpls_l3out_port_channel_interface is changed
        - cm_add_infra_sr_mpls_l3out_port_channel_interface.previous == []
        - cm_add_infra_sr_mpls_l3out_port_channel_interface.proposed.l3extRsPathL3OutAtt.attributes.annotation ==  "orchestrator:ansible"
        - cm_add_infra_sr_mpls_l3out_port_channel_interface.proposed.l3extRsPathL3OutAtt.attributes.addr ==  "192.168.90.1/24"
        - cm_add_infra_sr_mpls_l3out_port_channel_interface.proposed.l3extRsPathL3OutAtt.attributes.ifInstT ==  "l3-port"
        - cm_add_infra_sr_mpls_l3out_port_channel_interface.proposed.l3extRsPathL3OutAtt.attributes.tDn ==   "topology/pod-1/paths-101/pathep-[pc_ansible_test]"
        - nm_add_infra_sr_mpls_l3out_port_channel_interface is changed
        - nm_add_infra_sr_mpls_l3out_port_channel_interface.previous == []
        - nm_add_infra_sr_mpls_l3out_port_channel_interface.current.0.l3extRsPathL3OutAtt.attributes.annotation ==  "orchestrator:ansible"
        - nm_add_infra_sr_mpls_l3out_port_channel_interface.current.0.l3extRsPathL3OutAtt.attributes.addr ==  "192.168.90.1/24"
        - nm_add_infra_sr_mpls_l3out_port_channel_interface.current.0.l3extRsPathL3OutAtt.attributes.ifInstT ==  "l3-port"
        - nm_add_infra_sr_mpls_l3out_port_channel_interface.current.0.l3extRsPathL3OutAtt.attributes.tDn ==   "topology/pod-1/paths-101/pathep-[pc_ansible_test]"
        - nm_add_infra_sr_mpls_l3out_port_channel_interface_again is not changed
        - nm_add_infra_sr_mpls_l3out_port_channel_interface_again.previous.0.l3extRsPathL3OutAtt.attributes.annotation ==  "orchestrator:ansible"
        - nm_add_infra_sr_mpls_l3out_port_channel_interface_again.previous.0.l3extRsPathL3OutAtt.attributes.addr ==  "192.168.90.1/24"
        - nm_add_infra_sr_mpls_l3out_port_channel_interface_again.previous.0.l3extRsPathL3OutAtt.attributes.ifInstT ==  "l3-port"
        - nm_add_infra_sr_mpls_l3out_port_channel_interface_again.previous.0.l3extRsPathL3OutAtt.attributes.tDn ==   "topology/pod-1/paths-101/pathep-[pc_ansible_test]"
        - nm_add_infra_sr_mpls_l3out_port_channel_interface_again.current.0.l3extRsPathL3OutAtt.attributes.annotation ==  "orchestrator:ansible"
        - nm_add_infra_sr_mpls_l3out_port_channel_interface_again.current.0.l3extRsPathL3OutAtt.attributes.addr ==  "192.168.90.1/24"
        - nm_add_infra_sr_mpls_l3out_port_channel_interface_again.current.0.l3extRsPathL3OutAtt.attributes.ifInstT ==  "l3-port"
        - nm_add_infra_sr_mpls_l3out_port_channel_interface_again.current.0.l3extRsPathL3OutAtt.attributes.tDn ==   "topology/pod-1/paths-101/pathep-[pc_ansible_test]"
        - nm_add_infra_sr_mpls_l3out_interface is changed
        - nm_add_infra_sr_mpls_l3out_interface.previous == []
        - nm_add_infra_sr_mpls_l3out_interface.current.0.l3extRsPathL3OutAtt.attributes.annotation ==  "orchestrator:ansible"
        - nm_add_infra_sr_mpls_l3out_interface.current.0.l3extRsPathL3OutAtt.attributes.addr ==  "192.168.91.1/24"
        - nm_add_infra_sr_mpls_l3out_interface.current.0.l3extRsPathL3OutAtt.attributes.ifInstT ==  "l3-port"
        - nm_add_infra_sr_mpls_l3out_interface.current.0.l3extRsPathL3OutAtt.attributes.tDn ==   "topology/pod-1/paths-101/pathep-[eth1/17]"
        - nm_add_infra_sr_mpls_l3out_sub_interface is changed
        - nm_add_infra_sr_mpls_l3out_sub_interface.previous == []
        - nm_add_infra_sr_mpls_l3out_sub_interface.current.0.l3extRsPathL3OutAtt.attributes.annotation ==  "orchestrator:ansible"
        - nm_add_infra_sr_mpls_l3out_sub_interface.current.0.l3extRsPathL3OutAtt.attributes.addr ==  "192.168.92.1/24"
        - nm_add_infra_sr_mpls_l3out_sub_interface.current.0.l3extRsPathL3OutAtt.attributes.ifInstT ==  "sub-interface"
        - nm_add_infra_sr_mpls_l3out_sub_interface.current.0.l3extRsPathL3OutAtt.attributes.tDn ==   "topology/pod-1/paths-101/pathep-[eth1/18]"

    - name: Enable micro BFD on direct port channel interface in the infra SR-MPLS l3out interface profile without destination (error)
      aci_l3out_interface:
        <<: *aci_infra_pc_interface
        micro_bfd: true
      register: err_micro_bfd_not_provided_destination
      ignore_errors: true

    - name: Enable micro BFD on direct port channel interface in the infra SR-MPLS l3out interface profile timer without micro BFD (error)
      aci_l3out_interface:
        <<: *aci_infra_pc_interface
        micro_bfd_timer: 75
      register: err_micro_bfd_timer_not_provided_micro_bfd
      ignore_errors: true

    - name: Enable micro BFD on direct port channel interface in the infra SR-MPLS l3out interface profile destination without micro BFD (error)
      aci_l3out_interface:
        <<: *aci_infra_pc_interface
        micro_bfd_destination: true
      register: err_micro_bfd_destination_not_provided_micro_bfd
      ignore_errors: true

    - name: Verify micro BFD errors
      assert:
        that:
        - err_micro_bfd_not_provided_destination is failed
        - err_micro_bfd_not_provided_destination.msg == "micro_bfd is True but all of the following are missing{{":"}} micro_bfd_destination"
        - err_micro_bfd_timer_not_provided_micro_bfd is failed
        - err_micro_bfd_timer_not_provided_micro_bfd.msg == "missing parameter(s) required by 'micro_bfd_timer'{{":"}} micro_bfd"
        - err_micro_bfd_destination_not_provided_micro_bfd is failed
        - err_micro_bfd_destination_not_provided_micro_bfd.msg == "missing parameter(s) required by 'micro_bfd_destination'{{":"}} micro_bfd"

    - name: Enable micro BFD on direct port channel interface in the infra SR-MPLS l3out interface (check_mode)
      aci_l3out_interface: &enable_bfd
        <<: *aci_infra_pc_interface
        micro_bfd: true
        micro_bfd_destination: 192.168.90.2
      register: cm_enable_micro_bfd
      check_mode: true
  
    - name: Enable micro BFD on direct port channel interface in the infra SR-MPLS l3out interface
      aci_l3out_interface:
        <<: *enable_bfd
      register: nm_enable_micro_bfd
    
    - name: Change timer for micro on direct port channel interface in the infra SR-MPLS l3out interface
      aci_l3out_interface:
        <<: *enable_bfd
        micro_bfd_timer: 75
      register: nm_change_micro_bfd_timer

    - name: Diable micro BFD on direct port channel interface in the infra SR-MPLS l3out interface
      aci_l3out_interface:
        <<: *enable_bfd
        micro_bfd: false
      register: nm_disable_micro_bfd

    - name: Verify micro BFD configuration on direct port channel interface in the infra SR-MPLS l3out interface
      assert:
        that:
        - cm_enable_micro_bfd is changed
        - cm_enable_micro_bfd.previous.0.l3extRsPathL3OutAtt.children is undefined
        - cm_enable_micro_bfd.proposed.l3extRsPathL3OutAtt.children.0.bfdMicroBfdP.attributes.adminState == "yes"
        - cm_enable_micro_bfd.proposed.l3extRsPathL3OutAtt.children.0.bfdMicroBfdP.attributes.dst == "192.168.90.2"
        - nm_enable_micro_bfd is changed
        - nm_enable_micro_bfd.previous.0.l3extRsPathL3OutAtt.children is undefined
        - nm_enable_micro_bfd.current.0.l3extRsPathL3OutAtt.children.0.bfdMicroBfdP.attributes.adminState == "yes"
        - nm_enable_micro_bfd.current.0.l3extRsPathL3OutAtt.children.0.bfdMicroBfdP.attributes.dst == "192.168.90.2"
        - nm_enable_micro_bfd.current.0.l3extRsPathL3OutAtt.children.0.bfdMicroBfdP.attributes.stTm == "0"
        - nm_change_micro_bfd_timer is changed
        - nm_change_micro_bfd_timer.previous.0.l3extRsPathL3OutAtt.children.0.bfdMicroBfdP.attributes.adminState == "yes"
        - nm_change_micro_bfd_timer.previous.0.l3extRsPathL3OutAtt.children.0.bfdMicroBfdP.attributes.dst == "192.168.90.2"
        - nm_change_micro_bfd_timer.previous.0.l3extRsPathL3OutAtt.children.0.bfdMicroBfdP.attributes.stTm == "0"
        - nm_change_micro_bfd_timer.current.0.l3extRsPathL3OutAtt.children.0.bfdMicroBfdP.attributes.adminState == "yes"
        - nm_change_micro_bfd_timer.current.0.l3extRsPathL3OutAtt.children.0.bfdMicroBfdP.attributes.dst == "192.168.90.2"
        - nm_change_micro_bfd_timer.current.0.l3extRsPathL3OutAtt.children.0.bfdMicroBfdP.attributes.stTm == "75"
        - nm_disable_micro_bfd is changed
        - nm_disable_micro_bfd.previous.0.l3extRsPathL3OutAtt.children.0.bfdMicroBfdP.attributes.adminState == "yes"
        - nm_disable_micro_bfd.previous.0.l3extRsPathL3OutAtt.children.0.bfdMicroBfdP.attributes.dst == "192.168.90.2"
        - nm_disable_micro_bfd.previous.0.l3extRsPathL3OutAtt.children.0.bfdMicroBfdP.attributes.stTm == "75"
        - nm_disable_micro_bfd.current.0.l3extRsPathL3OutAtt.children.0.bfdMicroBfdP.attributes.adminState == "no"
        - nm_disable_micro_bfd.current.0.l3extRsPathL3OutAtt.children.0.bfdMicroBfdP.attributes.dst == "192.168.90.2"
        - nm_disable_micro_bfd.current.0.l3extRsPathL3OutAtt.children.0.bfdMicroBfdP.attributes.stTm == "75"

    - name: Delete direct port channel interface in the infra SR-MPLS l3out interface profile again (check_mode)
      aci_l3out_interface: &aci_infra_pc_interface_absent
        <<: *aci_infra_pc_interface
        state: absent
      register: cm_delete_infra_sr_mpls_l3out_port_channel_interface
      check_mode: true
    
    - name: Delete direct port channel interface in the infra SR-MPLS l3out interface profile
      aci_l3out_interface:
        <<: *aci_infra_pc_interface_absent
      register: nm_delete_infra_sr_mpls_l3out_port_channel_interface
    
    - name: Delete direct port channel interface in the infra SR-MPLS l3out interface profile again
      aci_l3out_interface:
        <<: *aci_infra_pc_interface_absent
      register: nm_delete_infra_sr_mpls_l3out_port_channel_interface_again

    - name: Verify deletion of port channel interfaces in the infra SR-MPLS l3out interface profile
      assert:
        that:
        - cm_delete_infra_sr_mpls_l3out_port_channel_interface is changed
        - cm_delete_infra_sr_mpls_l3out_port_channel_interface.previous != []
        - cm_delete_infra_sr_mpls_l3out_port_channel_interface.proposed == {}
        - nm_delete_infra_sr_mpls_l3out_port_channel_interface is changed
        - nm_delete_infra_sr_mpls_l3out_port_channel_interface.previous != []
        - nm_delete_infra_sr_mpls_l3out_port_channel_interface.current == []
        - nm_delete_infra_sr_mpls_l3out_port_channel_interface_again is not changed
        - nm_delete_infra_sr_mpls_l3out_port_channel_interface_again.previous == []
        - nm_delete_infra_sr_mpls_l3out_port_channel_interface_again.current == []

    - name: Remove a infra SR-MPLS l3out
      cisco.aci.aci_l3out:
        <<: *aci_infra_sr_mpls_l3out_absent

  # CLEAN UP
  - name: Remove ansible_tenant
    cisco.aci.aci_tenant:
      <<: *aci_info
      tenant: ansible_tenant
      state: absent

  - name: Remove ansible_l3ext_domain
    cisco.aci.aci_domain:
      <<: *aci_info
      domain: ansible_l3ext_domain
      domain_type: l3dom
      state: absent

  - name: Remove ansible_port_channel_ipg
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_info
      lag_type: link
      policy_group: ansible_port_channel_ipg
      state: absent

  - name: Remove ansible_vpc_ipg
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *aci_info
      lag_type: node
      policy_group: ansible_vpc_ipg
      state: absent
