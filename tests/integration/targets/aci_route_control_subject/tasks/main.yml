# Author: Tim Cragg (@timcragg)
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

# SET VARS
- name: Set vars
  set_fact:
    aci_info: &aci_info
      host: '{{ aci_hostname }}'
      username: '{{ aci_username }}'
      password: '{{ aci_password }}'
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: '{{ aci_output_level | default("info") }}'

# CLEAN ENVIRONMENT
- name: Remove test tenant before we kickoff
  cisco.aci.aci_tenant: &tenant_absent
    <<: *aci_info
    tenant: ansible_tenant
    state: absent

# SETUP ENVIRONMENT
- name: Create tenant
  cisco.aci.aci_tenant: &tenant_present
    <<: *tenant_absent
    state: present

# BEGIN WITH TESTS
- name: Add route control subject (check_mode)
  cisco.aci.aci_route_control_subject: &subject_present
    <<: *aci_info
    tenant: ansible_tenant
    subject_name: ansible_rtctrl_subject
    state: present
  check_mode: yes
  register: cm_add_subject

- name: Add subject (normal mode)
  cisco.aci.aci_route_control_subject:
    <<: *subject_present
  register: nm_add_subject

- name: Verify add subject
  ansible.builtin.assert:
    that:
    - cm_add_subject is changed
    - nm_add_subject is changed
    - cm_add_subject.previous == nm_add_subject.previous == []
    - cm_add_subject.sent.rtctrlSubjP.attributes.name == nm_add_subject.sent.rtctrlSubjP.attributes.name == 'ansible_rtctrl_subject'

- name: Add subject again, check if idempotency works
  cisco.aci.aci_route_control_subject:
    <<: *subject_present
  register: add_subject_again

- name: Verify add_subject_again
  ansible.builtin.assert:
    that:
    - add_subject_again is not changed

- name: Add a second Subject
  cisco.aci.aci_route_control_subject:
    <<: *aci_info
    tenant: ansible_tenant
    subject_name: ansible_rtctrl_subject2
    state: present

# QUERY ALL SUBJECTS
- name: Query all subjects
  cisco.aci.aci_route_control_subject:
    <<: *aci_info
    state: query
  register: query_all_subjects

- name: Verify query_all_subjects
  ansible.builtin.assert:
    that:
    - query_all_subjects is not changed
    - query_all_subjects.current|length > 1

# QUERY A SPECIFIC SUBJECT
- name: Query a specific subject
  cisco.aci.aci_route_control_subject:
    <<: *subject_present
    state: query
  register: query_spec_subject

- name: Verify query_spec_subject
  ansible.builtin.assert:
    that:
    - query_spec_subject is not changed
    - query_spec_subject.current|length == 1
    - query_spec_subject.current.0.rtctrlSubjP.attributes.name == 'ansible_rtctrl_subject'

# REMOVE SUBJECT
- name: Remove subject
  cisco.aci.aci_route_control_subject:
    <<: *subject_present
    state: absent
  register: remove_subject

- name: Verify remove_subject
  ansible.builtin.assert:
    that:
    - remove_subject is changed
    - remove_subject.current == []

# REMOVE SUBJECT AGAIN TO TEST IDEMPOTENCE
- name: Remove subject again
  cisco.aci.aci_route_control_subject:
    <<: *subject_present
    state: absent
  register: remove_subject_again

- name: Verify remove_subject_again
  ansible.builtin.assert:
    that:
    - remove_subject_again is not changed
    - remove_subject_again.current == []

# CLEAN UP
- name: Remove test tenant
  cisco.aci.aci_tenant:
    <<: *tenant_absent
