# Test code for the ACI modules
# Copyright: (c) 2025, Tim Cragg (@timcragg)
# Copyright: (c) 2025, Shreyas Srish (@shrsr)

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI APIC host, ACI username and ACI password
  fail:
    msg: 'Please define the following variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

# GET Credentials from the inventory
- name: Set vars
  set_fact:
    aci_info: &aci_info
      host: "{{ aci_hostname }}"
      username: "{{ aci_username }}"
      password: "{{ aci_password }}"
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: '{{ aci_output_level | default("info") }}'

# CLEAN ENVIRONMENT
- name: Remove ansible_tenant if it already exists
  cisco.aci.aci_tenant:
    <<: *aci_info
    name: ansible_tenant
    state: absent

- name: Remove ansible_phys_domain if it already exists
  cisco.aci.aci_domain:
    <<: *aci_info
    domain: ansible_phys_dom
    domain_type: phys
    state: absent

# CREATE TENANT
- name: Create ansible_tenant
  cisco.aci.aci_tenant:
    <<: *aci_info
    name: ansible_tenant
    state: present

# CREATE DOMAIN
- name: Create ansible_phys_domain
  cisco.aci.aci_domain:
    <<: *aci_info
    domain: ansible_phys_dom
    domain_type: phys
    state: present

# CREATE L4-L7 LOGICAL DEVICE
- name: Create L4-L7 Device
  cisco.aci.aci_l4l7_device:
    <<: *aci_info
    tenant: ansible_tenant
    device: ansible_device
    domain: ansible_phys_dom
    func_type: go_to
    context_aware: single
    managed: false
    dev_type: physical
    svc_type: adc
    trunking: false
    prom_mode: true
    state: present

# ADD L4-L7 CONCRETE DEVICE
- name: Create L4-L7 Concrete Device
  cisco.aci.aci_l4l7_concrete_device:
    <<: *aci_info
    tenant: ansible_tenant
    device: ansible_device
    concrete_device: ansible_concrete_device
    state: present

# ADD L4-L7 CONCRETE INTERFACE
- name: Create L4-L7 Concrete Interface in check mode
  cisco.aci.aci_l4l7_concrete_interface: &l4l7_concrete_interface
    <<: *aci_info
    tenant: ansible_tenant
    device: ansible_device
    concrete_device: ansible_concrete_device
    concrete_interface: ansible_concrete_interface
    pod_id: 1
    node_id: 201
    path_ep: eth1/16
    state: present
  check_mode: true
  register: add_concrete_interface_cm

- name: Create L4-L7 Concrete Interface 
  cisco.aci.aci_l4l7_concrete_interface: 
    <<: *l4l7_concrete_interface
  register: add_concrete_interface

- name: Create L4-L7 Concrete Interface again
  cisco.aci.aci_l4l7_concrete_interface: 
    <<: *l4l7_concrete_interface
  register: add_concrete_interface_again

- name: Update L4-L7 Concrete Interface
  cisco.aci.aci_l4l7_concrete_interface: 
    <<: *l4l7_concrete_interface
    pod_id: 2
  register: add_concrete_interface_update

- name: Verify L4-L7 Concrete Interface Attributes
  ansible.builtin.assert:
    that:
    - add_concrete_interface_cm is changed
    - add_concrete_interface is changed
    - add_concrete_interface_again is not changed
    - add_concrete_interface_update is changed
    - add_concrete_interface_cm.proposed.vnsCIf.attributes.dn == "uni/tn-ansible_tenant/lDevVip-ansible_device/cDev-ansible_concrete_device/cIf-[ansible_concrete_interface]"
    - add_concrete_interface_cm.proposed.vnsCIf.attributes.name == "ansible_concrete_interface"
    - add_concrete_interface.current.0.vnsCIf.attributes.dn == "uni/tn-ansible_tenant/lDevVip-ansible_device/cDev-ansible_concrete_device/cIf-[ansible_concrete_interface]"
    - add_concrete_interface.current.0.vnsCIf.attributes.name == "ansible_concrete_interface"
    - add_concrete_interface_again.previous == add_concrete_interface_again.current == add_concrete_interface.current
    - add_concrete_interface.current.0.vnsCIf.children.0.vnsRsCIfPathAtt.attributes.tDn == "topology/pod-1/paths-201/pathep-[eth1/16]"
    - add_concrete_interface_again.current.0.vnsCIf.children.0.vnsRsCIfPathAtt.attributes.tDn == "topology/pod-1/paths-201/pathep-[eth1/16]"
    - add_concrete_interface_update.current.0.vnsCIf.children.0.vnsRsCIfPathAtt.attributes.tDn == "topology/pod-2/paths-201/pathep-[eth1/16]"

# QUERY L4-L7 CONCRETE INTERFACE
- name: Create another L4-L7 Concrete Interface for query all
  cisco.aci.aci_l4l7_concrete_interface:
    <<: *aci_info
    tenant: ansible_tenant
    device: ansible_device
    concrete_device: ansible_concrete_device
    concrete_interface: ansible_concrete_interface2
    pod_id: 1
    node_id: 202
    path_ep: eth1/16
    state: present
  register: add_concrete_interface_another

- name: Query L4-L7 Concrete Interface
  cisco.aci.aci_l4l7_concrete_interface:
    <<: *aci_info
    tenant: ansible_tenant
    device: ansible_device
    concrete_device: ansible_concrete_device
    concrete_interface: ansible_concrete_interface
    pod_id: 1
    node_id: 201
    path_ep: eth1/16
    state: query
  register: query_concrete_interface

- name: Query all L4-L7 Concrete Interfaces
  cisco.aci.aci_l4l7_concrete_interface:
    <<: *aci_info
    state: query
  register: query_all

- name: Verify L4-L7 Concrete Interface Attributes
  ansible.builtin.assert:
    that:
    - query_concrete_interface is not changed
    - query_concrete_interface.current.0.vnsCIf.attributes.dn == "uni/tn-ansible_tenant/lDevVip-ansible_device/cDev-ansible_concrete_device/cIf-[ansible_concrete_interface]"
    - query_concrete_interface.current.0.vnsCIf.attributes.name == "ansible_concrete_interface"
    - query_all is not changed
    - query_all.current | length >= 2
    - "'uni/tn-ansible_tenant/lDevVip-ansible_device/cDev-ansible_concrete_device/cIf-[ansible_concrete_interface]' in query_all.current | map(attribute='vnsCIf.attributes.dn') | list"
    - "'uni/tn-ansible_tenant/lDevVip-ansible_device/cDev-ansible_concrete_device/cIf-[ansible_concrete_interface2]' in query_all.current | map(attribute='vnsCIf.attributes.dn') | list"
    - query_concrete_interface.current.0.vnsCIf.children.0.vnsRsCIfPathAtt.attributes.tDn == "topology/pod-2/paths-201/pathep-[eth1/16]"

# DELETE L4-L7 CONCRETE INTERFACE
- name: Remove L4-L7 Concrete Interface in check mode
  cisco.aci.aci_l4l7_concrete_interface: &remove_l4l7_concrete_interface
    <<: *aci_info
    tenant: ansible_tenant
    device: ansible_device
    concrete_device: ansible_concrete_device
    concrete_interface: ansible_concrete_interface
    pod_id: 1
    node_id: 201
    path_ep: eth1/16
    state: absent
  check_mode: true
  register: delete_concrete_interface_cm

- name: Remove L4-L7 Concrete Interface
  cisco.aci.aci_l4l7_concrete_interface: 
    <<: *remove_l4l7_concrete_interface
  register: delete_concrete_interface

- name: Remove L4-L7 Concrete Interface again
  cisco.aci.aci_l4l7_concrete_interface: 
    <<: *remove_l4l7_concrete_interface
  register: delete_concrete_interface_again

- name: Verify L4-L7 Concrete Interface Deletion
  ansible.builtin.assert:
    that:
    - delete_concrete_interface_cm is changed
    - delete_concrete_interface is changed
    - delete_concrete_interface_again is not changed
    - delete_concrete_interface.current == [] == delete_concrete_interface_again.current
    - delete_concrete_interface_cm.proposed == {}
    - delete_concrete_interface_cm.previous == delete_concrete_interface.previous == add_concrete_interface_update.current

# CLEAN UP
- name: Remove ansible_tenant
  cisco.aci.aci_tenant:
    <<: *aci_info
    name: ansible_tenant
    state: absent

- name: Remove ansible_phys_domain
  cisco.aci.aci_domain:
    <<: *aci_info
    domain: ansible_phys_dom
    domain_type: phys
    state: absent
