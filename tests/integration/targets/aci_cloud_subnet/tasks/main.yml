# Test code for the ACI modules
# Copyright: (c) 2020, Cindy Zhao (@cizhao) <cizhao@cisco.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI APIC host, ACI username and ACI password
  fail:
    msg: 'Please define the following variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

# CLEAN ENVIRONMENT
- name: Set vars
  set_fact:
    aci_info: &aci_info
      host: "{{ aci_hostname }}"
      username: "{{ aci_username }}"
      password: "{{ aci_password }}"
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: '{{ aci_output_level | default("info") }}'

- name: Verify Cloud and Non-Cloud Sites in use.
  include_tasks: ../../../../../../integration/targets/aci_cloud_provider/tasks/main.yml

- name: Execute tasks only for cloud sites
  when: query_cloud.current | length > 0  # This condition will execute only cloud sites
  block:  # block specifies execution of tasks within, based on conditions
  - name: Ensure tenant doesn't exist
    aci_tenant:
      <<: *aci_info
      state: absent
      tenant: ansible_test
    register: tenant_absent

  - name: Ensure tenant exists for tests to kick off
    aci_tenant:
      <<: *aci_info
      state: present
      tenant: ansible_test
    register: tenant_present

  - name: Ensure aci cloud context profile does not exists
    aci_cloud_ctx_profile:
      <<: *aci_info
      tenant: ansible_test
      name: ctx_profile_1
      state: absent
    register: rm_ctx_profile_1

  - name: Verify rm_ctx_profile_1
    assert:
      that:
      - rm_ctx_profile_1.current == []

  - name: Create aci cloud context profile (normal mode)
    aci_cloud_ctx_profile:
      <<: *aci_info
      tenant: ansible_test
      cloud: "{{ cloud_type }}"
      name: ctx_profile_1
      vrf: ctx_profile_vrf_1
      region: "{{ region_2 }}"
      primary_cidr: '10.50.0.0/16'
      state: present
    register: nm_add_aci_ctx_profile

  - name: Create aci cloud subnet (check_mode)
    aci_cloud_subnet:
      <<: *aci_info
      tenant: ansible_test
      cloud_context_profile: ctx_profile_1
      cidr: '10.50.0.0/16'
      availability_zone: "{{ availability_zone | default(omit) }}"
      address: 10.50.0.1
      description: test description
    check_mode: true
    register: cm_add_subnet

  - name: Create aci cloud subnet (normal_mode)
    aci_cloud_subnet:
      <<: *aci_info
      tenant: ansible_test
      cloud_context_profile: ctx_profile_1
      cidr: '10.50.0.0/16'
      availability_zone: "{{ availability_zone | default(omit) }}"
      address: 10.50.0.1
      description: test description
    register: nm_add_subnet

  - name: Verify cm_add_subnet
    assert:
      that:
      - cm_add_subnet is changed
      - cm_add_subnet.previous == []
      - cm_add_subnet.proposed.cloudSubnet.attributes.ip == "10.50.0.1"
      - cm_add_subnet.proposed.cloudSubnet.attributes.descr == "test description"
      - cm_add_subnet.proposed.cloudSubnet.attributes.dn == "uni/tn-ansible_test/ctxprofile-ctx_profile_1/cidr-[10.50.0.0/16]/subnet-[10.50.0.1]"

  - name: Create aci cloud subnet again (normal_mode)
    aci_cloud_subnet:
      <<: *aci_info
      tenant: ansible_test
      cloud_context_profile: ctx_profile_1
      cidr: '10.50.0.0/16'
      availability_zone: "{{ availability_zone | default(omit) }}"
      address: 10.50.0.1
      description: test description
    register: nm_add_subnet_again

  - name: Verify nm_add_subnet_again
    assert:
      that:
      - nm_add_subnet_again is not changed

  - name: Create another cloud subnet (normal_mode)
    aci_cloud_subnet:
      <<: *aci_info
      tenant: ansible_test
      cloud_context_profile: ctx_profile_1
      cidr: '10.50.0.0/16'
      availability_zone: "{{ availability_zone | default(omit) }}"
      address: 10.50.0.2
      description: another subnet
    register: nm_add_another_subnet

  - name: Verify nm_add_another_subnet
    assert:
      that:
      - nm_add_another_subnet is changed
      - nm_add_another_subnet.previous == []
      - nm_add_another_subnet.current.0.cloudSubnet.attributes.annotation == 'orchestrator:ansible'
      - nm_add_another_subnet.current.0.cloudSubnet.attributes.descr == "another subnet"
      - nm_add_another_subnet.current.0.cloudSubnet.attributes.dn == "uni/tn-ansible_test/ctxprofile-ctx_profile_1/cidr-[10.50.0.0/16]/subnet-[10.50.0.2]"

  - name: Create cloud subnet 3(normal_mode)
    aci_cloud_subnet:
      <<: *aci_info
      tenant: ansible_test
      cloud_context_profile: ctx_profile_1
      cidr: '10.50.0.0/16'
      availability_zone: "{{ availability_zone | default(omit) }}"
      address: 10.50.0.3
      name: subnet_3
    register: nm_add_subnet_3

  - name: Specify subnet as VpnGateway enabled
    aci_cloud_subnet:
      <<: *aci_info
      tenant: ansible_test
      cloud_context_profile: ctx_profile_1
      cidr: '10.50.0.0/16'
      availability_zone: "{{ availability_zone | default(omit) }}"
      address: 10.50.0.1
      # name: subnet_1
      description: change subnet 1
      vnet_gateway: "{{ vnet_gateway | default(omit)}}"
      #scope: public
    register: nm_change_subnet_1

  # Enable vpn_gateway router in cloud ctx profile
  - name: Enable VpnGateway
    aci_cloud_vpn_gateway:
      <<: *aci_info
      tenant: ansible_test
      cloud_context_profile: ctx_profile_1
      state: present

  # Try to disable vpn_gateway router again in cloud ctx profile
  - name: Disable VpnGateway
    aci_cloud_vpn_gateway:
      <<: *aci_info
      tenant: ansible_test
      cloud_context_profile: ctx_profile_1
      state: absent

  - name: Query all subnets
    aci_cloud_subnet:
      <<: *aci_info
      tenant: ansible_test
      cloud_context_profile: ctx_profile_1
      cidr: '10.50.0.0/16'
      state: query
    register: query_all

  - name: Verify query_all
    assert:
      that:
      - query_all is not changed
      - query_all.current.0.cloudCidr.attributes.addr == "10.50.0.0/16"
      - query_all.current.0.cloudCidr.children | length == 3

  - name: Query a specific subnet
    aci_cloud_subnet:
      <<: *aci_info
      tenant: ansible_test
      cloud_context_profile: ctx_profile_1
      cidr: '10.50.0.0/16'
      address: 10.50.0.1
      state: query
    register: query_subnet_1

  - name: Verify query_subnet_1
    assert:
      that:
      - query_subnet_1 is not changed
      - query_subnet_1.current.0.cloudSubnet.attributes.ip == "10.50.0.1"
      - query_subnet_1.current.0.cloudSubnet.attributes.scope == "private"
      - query_subnet_1.current.0.cloudSubnet.attributes.dn == "uni/tn-ansible_test/ctxprofile-ctx_profile_1/cidr-[10.50.0.0/16]/subnet-[10.50.0.1]"

  - name: Remove subnet 3 (check_mode)
    aci_cloud_subnet:
      <<: *aci_info
      tenant: ansible_test
      cloud_context_profile: ctx_profile_1
      cidr: '10.50.0.0/16'
      address: 10.50.0.3
      state: absent
    check_mode: true
    register: cm_remove_subnet_3

  - name: Verify cm_remove_subnet_3
    assert:
      that:
      - cm_remove_subnet_3 is changed
      - cm_remove_subnet_3.proposed == {}
      - cm_remove_subnet_3.previous.0.cloudSubnet.attributes.ip == "10.50.0.3"

  - name: Remove subnet 3 (normal_mode)
    aci_cloud_subnet:
      <<: *aci_info
      tenant: ansible_test
      cloud_context_profile: ctx_profile_1
      cidr: '10.50.0.0/16'
      address: 10.50.0.3
      state: absent
    register: nm_remove_subnet_3

  - name: Verify nm_remove_subnet_3
    assert:
      that:
      - nm_remove_subnet_3 is changed
      - nm_remove_subnet_3.current == []
      - nm_remove_subnet_3.previous.0.cloudSubnet.attributes.ip == "10.50.0.3"

  - name: Remove subnet 3 again
    aci_cloud_subnet:
      <<: *aci_info
      tenant: ansible_test
      cloud_context_profile: ctx_profile_1
      cidr: '10.50.0.0/16'
      address: 10.50.0.3
      state: absent
    register: nm_remove_subnet_3_again

  - name: Verify nm_remove_subnet_3_again
    assert:
      that:
      - nm_remove_subnet_3_again is not changed
      - nm_remove_subnet_3_again.previous == []
      - nm_remove_subnet_3_again.current == []
